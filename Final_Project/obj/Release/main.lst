                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Mon Dec 05 16:02:58 2016
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _timer_isr
                             13 	.globl _s_two
                             14 	.globl _s_one
                             15 	.globl _main
                             16 	.globl __sdcc_external_startup
                             17 	.globl _P5_7
                             18 	.globl _P5_6
                             19 	.globl _P5_5
                             20 	.globl _P5_4
                             21 	.globl _P5_3
                             22 	.globl _P5_2
                             23 	.globl _P5_1
                             24 	.globl _P5_0
                             25 	.globl _P4_7
                             26 	.globl _P4_6
                             27 	.globl _P4_5
                             28 	.globl _P4_4
                             29 	.globl _P4_3
                             30 	.globl _P4_2
                             31 	.globl _P4_1
                             32 	.globl _P4_0
                             33 	.globl _PX0L
                             34 	.globl _PT0L
                             35 	.globl _PX1L
                             36 	.globl _PT1L
                             37 	.globl _PLS
                             38 	.globl _PT2L
                             39 	.globl _PPCL
                             40 	.globl _EC
                             41 	.globl _CCF0
                             42 	.globl _CCF1
                             43 	.globl _CCF2
                             44 	.globl _CCF3
                             45 	.globl _CCF4
                             46 	.globl _CR
                             47 	.globl _CF
                             48 	.globl _TF2
                             49 	.globl _EXF2
                             50 	.globl _RCLK
                             51 	.globl _TCLK
                             52 	.globl _EXEN2
                             53 	.globl _TR2
                             54 	.globl _C_T2
                             55 	.globl _CP_RL2
                             56 	.globl _T2CON_7
                             57 	.globl _T2CON_6
                             58 	.globl _T2CON_5
                             59 	.globl _T2CON_4
                             60 	.globl _T2CON_3
                             61 	.globl _T2CON_2
                             62 	.globl _T2CON_1
                             63 	.globl _T2CON_0
                             64 	.globl _PT2
                             65 	.globl _ET2
                             66 	.globl _CY
                             67 	.globl _AC
                             68 	.globl _F0
                             69 	.globl _RS1
                             70 	.globl _RS0
                             71 	.globl _OV
                             72 	.globl _F1
                             73 	.globl _P
                             74 	.globl _PS
                             75 	.globl _PT1
                             76 	.globl _PX1
                             77 	.globl _PT0
                             78 	.globl _PX0
                             79 	.globl _RD
                             80 	.globl _WR
                             81 	.globl _T1
                             82 	.globl _T0
                             83 	.globl _INT1
                             84 	.globl _INT0
                             85 	.globl _TXD
                             86 	.globl _RXD
                             87 	.globl _P3_7
                             88 	.globl _P3_6
                             89 	.globl _P3_5
                             90 	.globl _P3_4
                             91 	.globl _P3_3
                             92 	.globl _P3_2
                             93 	.globl _P3_1
                             94 	.globl _P3_0
                             95 	.globl _EA
                             96 	.globl _ES
                             97 	.globl _ET1
                             98 	.globl _EX1
                             99 	.globl _ET0
                            100 	.globl _EX0
                            101 	.globl _P2_7
                            102 	.globl _P2_6
                            103 	.globl _P2_5
                            104 	.globl _P2_4
                            105 	.globl _P2_3
                            106 	.globl _P2_2
                            107 	.globl _P2_1
                            108 	.globl _P2_0
                            109 	.globl _SM0
                            110 	.globl _SM1
                            111 	.globl _SM2
                            112 	.globl _REN
                            113 	.globl _TB8
                            114 	.globl _RB8
                            115 	.globl _TI
                            116 	.globl _RI
                            117 	.globl _P1_7
                            118 	.globl _P1_6
                            119 	.globl _P1_5
                            120 	.globl _P1_4
                            121 	.globl _P1_3
                            122 	.globl _P1_2
                            123 	.globl _P1_1
                            124 	.globl _P1_0
                            125 	.globl _TF1
                            126 	.globl _TR1
                            127 	.globl _TF0
                            128 	.globl _TR0
                            129 	.globl _IE1
                            130 	.globl _IT1
                            131 	.globl _IE0
                            132 	.globl _IT0
                            133 	.globl _P0_7
                            134 	.globl _P0_6
                            135 	.globl _P0_5
                            136 	.globl _P0_4
                            137 	.globl _P0_3
                            138 	.globl _P0_2
                            139 	.globl _P0_1
                            140 	.globl _P0_0
                            141 	.globl _EECON
                            142 	.globl _KBF
                            143 	.globl _KBE
                            144 	.globl _KBLS
                            145 	.globl _BRL
                            146 	.globl _BDRCON
                            147 	.globl _T2MOD
                            148 	.globl _SPDAT
                            149 	.globl _SPSTA
                            150 	.globl _SPCON
                            151 	.globl _SADEN
                            152 	.globl _SADDR
                            153 	.globl _WDTPRG
                            154 	.globl _WDTRST
                            155 	.globl _P5
                            156 	.globl _P4
                            157 	.globl _IPH1
                            158 	.globl _IPL1
                            159 	.globl _IPH0
                            160 	.globl _IPL0
                            161 	.globl _IEN1
                            162 	.globl _IEN0
                            163 	.globl _CMOD
                            164 	.globl _CL
                            165 	.globl _CH
                            166 	.globl _CCON
                            167 	.globl _CCAPM4
                            168 	.globl _CCAPM3
                            169 	.globl _CCAPM2
                            170 	.globl _CCAPM1
                            171 	.globl _CCAPM0
                            172 	.globl _CCAP4L
                            173 	.globl _CCAP3L
                            174 	.globl _CCAP2L
                            175 	.globl _CCAP1L
                            176 	.globl _CCAP0L
                            177 	.globl _CCAP4H
                            178 	.globl _CCAP3H
                            179 	.globl _CCAP2H
                            180 	.globl _CCAP1H
                            181 	.globl _CCAP0H
                            182 	.globl _CKCKON1
                            183 	.globl _CKCKON0
                            184 	.globl _CKRL
                            185 	.globl _AUXR1
                            186 	.globl _AUXR
                            187 	.globl _TH2
                            188 	.globl _TL2
                            189 	.globl _RCAP2H
                            190 	.globl _RCAP2L
                            191 	.globl _T2CON
                            192 	.globl _B
                            193 	.globl _ACC
                            194 	.globl _PSW
                            195 	.globl _IP
                            196 	.globl _P3
                            197 	.globl _IE
                            198 	.globl _P2
                            199 	.globl _SBUF
                            200 	.globl _SCON
                            201 	.globl _P1
                            202 	.globl _TH1
                            203 	.globl _TH0
                            204 	.globl _TL1
                            205 	.globl _TL0
                            206 	.globl _TMOD
                            207 	.globl _TCON
                            208 	.globl _PCON
                            209 	.globl _DPH
                            210 	.globl _DPL
                            211 	.globl _SP
                            212 	.globl _P0
                            213 	.globl _date
                            214 	.globl _flag
                            215 	.globl _sensor
                            216 	.globl _log_f
                            217 	.globl _sensor_data
                            218 	.globl _s
                            219 	.globl _m
                            220 	.globl _h
                            221 	.globl _display
                            222 	.globl _fr
                            223 	.globl _gps_flag
                            224 	.globl _timeout
                            225 	.globl _sd_sector
                            226 	.globl _sd_log_data
                            227 ;--------------------------------------------------------
                            228 ; special function registers
                            229 ;--------------------------------------------------------
                            230 	.area RSEG    (DATA)
                    0080    231 _P0	=	0x0080
                    0081    232 _SP	=	0x0081
                    0082    233 _DPL	=	0x0082
                    0083    234 _DPH	=	0x0083
                    0087    235 _PCON	=	0x0087
                    0088    236 _TCON	=	0x0088
                    0089    237 _TMOD	=	0x0089
                    008A    238 _TL0	=	0x008a
                    008B    239 _TL1	=	0x008b
                    008C    240 _TH0	=	0x008c
                    008D    241 _TH1	=	0x008d
                    0090    242 _P1	=	0x0090
                    0098    243 _SCON	=	0x0098
                    0099    244 _SBUF	=	0x0099
                    00A0    245 _P2	=	0x00a0
                    00A8    246 _IE	=	0x00a8
                    00B0    247 _P3	=	0x00b0
                    00B8    248 _IP	=	0x00b8
                    00D0    249 _PSW	=	0x00d0
                    00E0    250 _ACC	=	0x00e0
                    00F0    251 _B	=	0x00f0
                    00C8    252 _T2CON	=	0x00c8
                    00CA    253 _RCAP2L	=	0x00ca
                    00CB    254 _RCAP2H	=	0x00cb
                    00CC    255 _TL2	=	0x00cc
                    00CD    256 _TH2	=	0x00cd
                    008E    257 _AUXR	=	0x008e
                    00A2    258 _AUXR1	=	0x00a2
                    0097    259 _CKRL	=	0x0097
                    008F    260 _CKCKON0	=	0x008f
                    008F    261 _CKCKON1	=	0x008f
                    00FA    262 _CCAP0H	=	0x00fa
                    00FB    263 _CCAP1H	=	0x00fb
                    00FC    264 _CCAP2H	=	0x00fc
                    00FD    265 _CCAP3H	=	0x00fd
                    00FE    266 _CCAP4H	=	0x00fe
                    00EA    267 _CCAP0L	=	0x00ea
                    00EB    268 _CCAP1L	=	0x00eb
                    00EC    269 _CCAP2L	=	0x00ec
                    00ED    270 _CCAP3L	=	0x00ed
                    00EE    271 _CCAP4L	=	0x00ee
                    00DA    272 _CCAPM0	=	0x00da
                    00DB    273 _CCAPM1	=	0x00db
                    00DC    274 _CCAPM2	=	0x00dc
                    00DD    275 _CCAPM3	=	0x00dd
                    00DE    276 _CCAPM4	=	0x00de
                    00D8    277 _CCON	=	0x00d8
                    00F9    278 _CH	=	0x00f9
                    00E9    279 _CL	=	0x00e9
                    00D9    280 _CMOD	=	0x00d9
                    00A8    281 _IEN0	=	0x00a8
                    00B1    282 _IEN1	=	0x00b1
                    00B8    283 _IPL0	=	0x00b8
                    00B7    284 _IPH0	=	0x00b7
                    00B2    285 _IPL1	=	0x00b2
                    00B3    286 _IPH1	=	0x00b3
                    00C0    287 _P4	=	0x00c0
                    00D8    288 _P5	=	0x00d8
                    00A6    289 _WDTRST	=	0x00a6
                    00A7    290 _WDTPRG	=	0x00a7
                    00A9    291 _SADDR	=	0x00a9
                    00B9    292 _SADEN	=	0x00b9
                    00C3    293 _SPCON	=	0x00c3
                    00C4    294 _SPSTA	=	0x00c4
                    00C5    295 _SPDAT	=	0x00c5
                    00C9    296 _T2MOD	=	0x00c9
                    009B    297 _BDRCON	=	0x009b
                    009A    298 _BRL	=	0x009a
                    009C    299 _KBLS	=	0x009c
                    009D    300 _KBE	=	0x009d
                    009E    301 _KBF	=	0x009e
                    00D2    302 _EECON	=	0x00d2
                            303 ;--------------------------------------------------------
                            304 ; special function bits
                            305 ;--------------------------------------------------------
                            306 	.area RSEG    (DATA)
                    0080    307 _P0_0	=	0x0080
                    0081    308 _P0_1	=	0x0081
                    0082    309 _P0_2	=	0x0082
                    0083    310 _P0_3	=	0x0083
                    0084    311 _P0_4	=	0x0084
                    0085    312 _P0_5	=	0x0085
                    0086    313 _P0_6	=	0x0086
                    0087    314 _P0_7	=	0x0087
                    0088    315 _IT0	=	0x0088
                    0089    316 _IE0	=	0x0089
                    008A    317 _IT1	=	0x008a
                    008B    318 _IE1	=	0x008b
                    008C    319 _TR0	=	0x008c
                    008D    320 _TF0	=	0x008d
                    008E    321 _TR1	=	0x008e
                    008F    322 _TF1	=	0x008f
                    0090    323 _P1_0	=	0x0090
                    0091    324 _P1_1	=	0x0091
                    0092    325 _P1_2	=	0x0092
                    0093    326 _P1_3	=	0x0093
                    0094    327 _P1_4	=	0x0094
                    0095    328 _P1_5	=	0x0095
                    0096    329 _P1_6	=	0x0096
                    0097    330 _P1_7	=	0x0097
                    0098    331 _RI	=	0x0098
                    0099    332 _TI	=	0x0099
                    009A    333 _RB8	=	0x009a
                    009B    334 _TB8	=	0x009b
                    009C    335 _REN	=	0x009c
                    009D    336 _SM2	=	0x009d
                    009E    337 _SM1	=	0x009e
                    009F    338 _SM0	=	0x009f
                    00A0    339 _P2_0	=	0x00a0
                    00A1    340 _P2_1	=	0x00a1
                    00A2    341 _P2_2	=	0x00a2
                    00A3    342 _P2_3	=	0x00a3
                    00A4    343 _P2_4	=	0x00a4
                    00A5    344 _P2_5	=	0x00a5
                    00A6    345 _P2_6	=	0x00a6
                    00A7    346 _P2_7	=	0x00a7
                    00A8    347 _EX0	=	0x00a8
                    00A9    348 _ET0	=	0x00a9
                    00AA    349 _EX1	=	0x00aa
                    00AB    350 _ET1	=	0x00ab
                    00AC    351 _ES	=	0x00ac
                    00AF    352 _EA	=	0x00af
                    00B0    353 _P3_0	=	0x00b0
                    00B1    354 _P3_1	=	0x00b1
                    00B2    355 _P3_2	=	0x00b2
                    00B3    356 _P3_3	=	0x00b3
                    00B4    357 _P3_4	=	0x00b4
                    00B5    358 _P3_5	=	0x00b5
                    00B6    359 _P3_6	=	0x00b6
                    00B7    360 _P3_7	=	0x00b7
                    00B0    361 _RXD	=	0x00b0
                    00B1    362 _TXD	=	0x00b1
                    00B2    363 _INT0	=	0x00b2
                    00B3    364 _INT1	=	0x00b3
                    00B4    365 _T0	=	0x00b4
                    00B5    366 _T1	=	0x00b5
                    00B6    367 _WR	=	0x00b6
                    00B7    368 _RD	=	0x00b7
                    00B8    369 _PX0	=	0x00b8
                    00B9    370 _PT0	=	0x00b9
                    00BA    371 _PX1	=	0x00ba
                    00BB    372 _PT1	=	0x00bb
                    00BC    373 _PS	=	0x00bc
                    00D0    374 _P	=	0x00d0
                    00D1    375 _F1	=	0x00d1
                    00D2    376 _OV	=	0x00d2
                    00D3    377 _RS0	=	0x00d3
                    00D4    378 _RS1	=	0x00d4
                    00D5    379 _F0	=	0x00d5
                    00D6    380 _AC	=	0x00d6
                    00D7    381 _CY	=	0x00d7
                    00AD    382 _ET2	=	0x00ad
                    00BD    383 _PT2	=	0x00bd
                    00C8    384 _T2CON_0	=	0x00c8
                    00C9    385 _T2CON_1	=	0x00c9
                    00CA    386 _T2CON_2	=	0x00ca
                    00CB    387 _T2CON_3	=	0x00cb
                    00CC    388 _T2CON_4	=	0x00cc
                    00CD    389 _T2CON_5	=	0x00cd
                    00CE    390 _T2CON_6	=	0x00ce
                    00CF    391 _T2CON_7	=	0x00cf
                    00C8    392 _CP_RL2	=	0x00c8
                    00C9    393 _C_T2	=	0x00c9
                    00CA    394 _TR2	=	0x00ca
                    00CB    395 _EXEN2	=	0x00cb
                    00CC    396 _TCLK	=	0x00cc
                    00CD    397 _RCLK	=	0x00cd
                    00CE    398 _EXF2	=	0x00ce
                    00CF    399 _TF2	=	0x00cf
                    00DF    400 _CF	=	0x00df
                    00DE    401 _CR	=	0x00de
                    00DC    402 _CCF4	=	0x00dc
                    00DB    403 _CCF3	=	0x00db
                    00DA    404 _CCF2	=	0x00da
                    00D9    405 _CCF1	=	0x00d9
                    00D8    406 _CCF0	=	0x00d8
                    00AE    407 _EC	=	0x00ae
                    00BE    408 _PPCL	=	0x00be
                    00BD    409 _PT2L	=	0x00bd
                    00BC    410 _PLS	=	0x00bc
                    00BB    411 _PT1L	=	0x00bb
                    00BA    412 _PX1L	=	0x00ba
                    00B9    413 _PT0L	=	0x00b9
                    00B8    414 _PX0L	=	0x00b8
                    00C0    415 _P4_0	=	0x00c0
                    00C1    416 _P4_1	=	0x00c1
                    00C2    417 _P4_2	=	0x00c2
                    00C3    418 _P4_3	=	0x00c3
                    00C4    419 _P4_4	=	0x00c4
                    00C5    420 _P4_5	=	0x00c5
                    00C6    421 _P4_6	=	0x00c6
                    00C7    422 _P4_7	=	0x00c7
                    00D8    423 _P5_0	=	0x00d8
                    00D9    424 _P5_1	=	0x00d9
                    00DA    425 _P5_2	=	0x00da
                    00DB    426 _P5_3	=	0x00db
                    00DC    427 _P5_4	=	0x00dc
                    00DD    428 _P5_5	=	0x00dd
                    00DE    429 _P5_6	=	0x00de
                    00DF    430 _P5_7	=	0x00df
                            431 ;--------------------------------------------------------
                            432 ; overlayable register banks
                            433 ;--------------------------------------------------------
                            434 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     435 	.ds 8
                            436 ;--------------------------------------------------------
                            437 ; internal ram data
                            438 ;--------------------------------------------------------
                            439 	.area DSEG    (DATA)
   0000                     440 _main_sloc0_1_0:
   0000                     441 	.ds 3
                            442 ;--------------------------------------------------------
                            443 ; overlayable items in internal ram 
                            444 ;--------------------------------------------------------
                            445 	.area OSEG    (OVR,DATA)
                            446 ;--------------------------------------------------------
                            447 ; Stack segment in internal ram 
                            448 ;--------------------------------------------------------
                            449 	.area	SSEG	(DATA)
   0000                     450 __start__stack:
   0000                     451 	.ds	1
                            452 
                            453 ;--------------------------------------------------------
                            454 ; indirectly addressable internal ram data
                            455 ;--------------------------------------------------------
                            456 	.area ISEG    (DATA)
                            457 ;--------------------------------------------------------
                            458 ; bit data
                            459 ;--------------------------------------------------------
                            460 	.area BSEG    (BIT)
                            461 ;--------------------------------------------------------
                            462 ; paged external ram data
                            463 ;--------------------------------------------------------
                            464 	.area PSEG    (PAG,XDATA)
                            465 ;--------------------------------------------------------
                            466 ; external ram data
                            467 ;--------------------------------------------------------
                            468 	.area XSEG    (XDATA)
   0000                     469 _sd_log_data::
   0000                     470 	.ds 512
   0200                     471 _sd_sector::
   0200                     472 	.ds 3
   0203                     473 _timeout::
   0203                     474 	.ds 1
   0204                     475 _gps_flag::
   0204                     476 	.ds 1
   0205                     477 _fr::
   0205                     478 	.ds 2
   0207                     479 _display::
   0207                     480 	.ds 2
   0209                     481 _h::
   0209                     482 	.ds 1
   020A                     483 _m::
   020A                     484 	.ds 1
   020B                     485 _s::
   020B                     486 	.ds 1
   020C                     487 _sensor_data::
   020C                     488 	.ds 5
   0211                     489 _log_f::
   0211                     490 	.ds 1
   0212                     491 _sensor::
   0212                     492 	.ds 1
   0213                     493 _main_c_1_1:
   0213                     494 	.ds 5
   0218                     495 _main_arr_1_1:
   0218                     496 	.ds 16
   0228                     497 _main_latitude_1_1:
   0228                     498 	.ds 3
   022B                     499 _main_longitude_1_1:
   022B                     500 	.ds 3
   022E                     501 _main_status_1_1:
   022E                     502 	.ds 1
   022F                     503 _main_gps_d_1_1:
   022F                     504 	.ds 3
   0232                     505 _main_temp_1_1:
   0232                     506 	.ds 3
   0235                     507 _main_te_1_1:
   0235                     508 	.ds 2
   0237                     509 _main_sd_logf_1_1:
   0237                     510 	.ds 2
                            511 ;--------------------------------------------------------
                            512 ; external initialized ram data
                            513 ;--------------------------------------------------------
                            514 	.area XISEG   (XDATA)
   0000                     515 _flag::
   0000                     516 	.ds 1
   0001                     517 _date::
   0001                     518 	.ds 3
                            519 	.area HOME    (CODE)
                            520 	.area GSINIT0 (CODE)
                            521 	.area GSINIT1 (CODE)
                            522 	.area GSINIT2 (CODE)
                            523 	.area GSINIT3 (CODE)
                            524 	.area GSINIT4 (CODE)
                            525 	.area GSINIT5 (CODE)
                            526 	.area GSINIT  (CODE)
                            527 	.area GSFINAL (CODE)
                            528 	.area CSEG    (CODE)
                            529 ;--------------------------------------------------------
                            530 ; interrupt vector 
                            531 ;--------------------------------------------------------
                            532 	.area HOME    (CODE)
   0000                     533 __interrupt_vect:
   0000 02s00r00            534 	ljmp	__sdcc_gsinit_startup
   0003 02s0ArBD            535 	ljmp	_s_one
   0006                     536 	.ds	5
   000B 02s0BrDC            537 	ljmp	_timer_isr
   000E                     538 	.ds	5
   0013 02s0Br4C            539 	ljmp	_s_two
                            540 ;--------------------------------------------------------
                            541 ; global & static initialisations
                            542 ;--------------------------------------------------------
                            543 	.area HOME    (CODE)
                            544 	.area GSINIT  (CODE)
                            545 	.area GSFINAL (CODE)
                            546 	.area GSINIT  (CODE)
                            547 	.globl __sdcc_gsinit_startup
                            548 	.globl __sdcc_program_startup
                            549 	.globl __start__stack
                            550 	.globl __mcs51_genXINIT
                            551 	.globl __mcs51_genXRAMCLEAR
                            552 	.globl __mcs51_genRAMCLEAR
                            553 	.area GSFINAL (CODE)
   0000 02s00r00            554 	ljmp	__sdcc_program_startup
                            555 ;--------------------------------------------------------
                            556 ; Home
                            557 ;--------------------------------------------------------
                            558 	.area HOME    (CODE)
                            559 	.area CSEG    (CODE)
   0000                     560 __sdcc_program_startup:
   0000 12s00r0C            561 	lcall	_main
                            562 ;	return from main will lock up
   0003 80 FE               563 	sjmp .
                            564 ;--------------------------------------------------------
                            565 ; code
                            566 ;--------------------------------------------------------
                            567 	.area CSEG    (CODE)
                            568 ;------------------------------------------------------------
                            569 ;Allocation info for local variables in function '_sdcc_external_startup'
                            570 ;------------------------------------------------------------
                            571 ;------------------------------------------------------------
                            572 ;	main.c:42: _sdcc_external_startup()
                            573 ;	-----------------------------------------
                            574 ;	 function _sdcc_external_startup
                            575 ;	-----------------------------------------
   0005                     576 __sdcc_external_startup:
                    0002    577 	ar2 = 0x02
                    0003    578 	ar3 = 0x03
                    0004    579 	ar4 = 0x04
                    0005    580 	ar5 = 0x05
                    0006    581 	ar6 = 0x06
                    0007    582 	ar7 = 0x07
                    0000    583 	ar0 = 0x00
                    0001    584 	ar1 = 0x01
                            585 ;	main.c:44: AUXR |= 0x0C;
                            586 ;	genOr
   0005 43 8E 0C            587 	orl	_AUXR,#0x0C
                            588 ;	main.c:46: return 0;
                            589 ;	genRet
                            590 ;	Peephole 182.b	used 16 bit load of dptr
   0008 90 00 00            591 	mov	dptr,#0x0000
                            592 ;	Peephole 300	removed redundant label 00101$
   000B 22                  593 	ret
                            594 ;------------------------------------------------------------
                            595 ;Allocation info for local variables in function 'main'
                            596 ;------------------------------------------------------------
                            597 ;sloc0                     Allocated with name '_main_sloc0_1_0'
                            598 ;gps_data                  Allocated with name '_main_gps_data_1_1'
                            599 ;c                         Allocated with name '_main_c_1_1'
                            600 ;arr                       Allocated with name '_main_arr_1_1'
                            601 ;latitude                  Allocated with name '_main_latitude_1_1'
                            602 ;longitude                 Allocated with name '_main_longitude_1_1'
                            603 ;status                    Allocated with name '_main_status_1_1'
                            604 ;gps_d                     Allocated with name '_main_gps_d_1_1'
                            605 ;gps_ti                    Allocated with name '_main_gps_ti_1_1'
                            606 ;temp                      Allocated with name '_main_temp_1_1'
                            607 ;sd_initialization         Allocated with name '_main_sd_initialization_1_1'
                            608 ;te                        Allocated with name '_main_te_1_1'
                            609 ;i                         Allocated with name '_main_i_1_1'
                            610 ;sd_logf                   Allocated with name '_main_sd_logf_1_1'
                            611 ;pre                       Allocated with name '_main_pre_1_1'
                            612 ;alt                       Allocated with name '_main_alt_1_1'
                            613 ;------------------------------------------------------------
                            614 ;	main.c:51: void main(void)
                            615 ;	-----------------------------------------
                            616 ;	 function main
                            617 ;	-----------------------------------------
   000C                     618 _main:
                            619 ;	main.c:53: unsigned char *gps_data,c[5], arr[16],*latitude,*longitude,status='V',*gps_d,*gps_ti,temp[3],sd_initialization;
                            620 ;	genAssign
   000C 90s02r2E            621 	mov	dptr,#_main_status_1_1
   000F 74 56               622 	mov	a,#0x56
   0011 F0                  623 	movx	@dptr,a
                            624 ;	main.c:54: int te,i,sd_logf=0,pre,alt;
                            625 ;	genAssign
   0012 90s02r37            626 	mov	dptr,#_main_sd_logf_1_1
   0015 E4                  627 	clr	a
   0016 F0                  628 	movx	@dptr,a
   0017 A3                  629 	inc	dptr
   0018 F0                  630 	movx	@dptr,a
                            631 ;	main.c:56: P1_0=0;
                            632 ;	genAssign
   0019 C2 90               633 	clr	_P1_0
                            634 ;	main.c:57: IOEX_WriteByte(1);
                            635 ;	genCall
   001B 75 82 01            636 	mov	dpl,#0x01
   001E 12s00r00            637 	lcall	_IOEX_WriteByte
                            638 ;	main.c:59: sd_sector[0]=EEPROM_ReadByte(0,0);
                            639 ;	genAssign
   0021 90s00r00            640 	mov	dptr,#_EEPROM_ReadByte_PARM_2
                            641 ;	Peephole 181	changed mov to clr
   0024 E4                  642 	clr	a
   0025 F0                  643 	movx	@dptr,a
                            644 ;	genCall
   0026 75 82 00            645 	mov	dpl,#0x00
   0029 12s00r00            646 	lcall	_EEPROM_ReadByte
   002C AA 82               647 	mov	r2,dpl
                            648 ;	genPointerSet
                            649 ;     genFarPointerSet
   002E 90s02r00            650 	mov	dptr,#_sd_sector
   0031 EA                  651 	mov	a,r2
   0032 F0                  652 	movx	@dptr,a
                            653 ;	main.c:60: sd_sector[1]=EEPROM_ReadByte(1,0);
                            654 ;	genAssign
   0033 90s00r00            655 	mov	dptr,#_EEPROM_ReadByte_PARM_2
                            656 ;	Peephole 181	changed mov to clr
   0036 E4                  657 	clr	a
   0037 F0                  658 	movx	@dptr,a
                            659 ;	genCall
   0038 75 82 01            660 	mov	dpl,#0x01
   003B 12s00r00            661 	lcall	_EEPROM_ReadByte
   003E AA 82               662 	mov	r2,dpl
                            663 ;	genPointerSet
                            664 ;     genFarPointerSet
   0040 90s02r01            665 	mov	dptr,#(_sd_sector + 0x0001)
   0043 EA                  666 	mov	a,r2
   0044 F0                  667 	movx	@dptr,a
                            668 ;	main.c:61: sd_sector[2]=EEPROM_ReadByte(2,0);
                            669 ;	genAssign
   0045 90s00r00            670 	mov	dptr,#_EEPROM_ReadByte_PARM_2
                            671 ;	Peephole 181	changed mov to clr
   0048 E4                  672 	clr	a
   0049 F0                  673 	movx	@dptr,a
                            674 ;	genCall
   004A 75 82 02            675 	mov	dpl,#0x02
   004D 12s00r00            676 	lcall	_EEPROM_ReadByte
   0050 AA 82               677 	mov	r2,dpl
                            678 ;	genPointerSet
                            679 ;     genFarPointerSet
   0052 90s02r02            680 	mov	dptr,#(_sd_sector + 0x0002)
   0055 EA                  681 	mov	a,r2
   0056 F0                  682 	movx	@dptr,a
                            683 ;	main.c:64: lcd_init();                                     // Initilaize LCD
                            684 ;	genCall
   0057 12s00r00            685 	lcall	_lcd_init
                            686 ;	main.c:65: lcdgotoxy(2,1);
                            687 ;	genAssign
   005A 90s00r00            688 	mov	dptr,#_lcdgotoxy_PARM_2
   005D 74 01               689 	mov	a,#0x01
   005F F0                  690 	movx	@dptr,a
                            691 ;	genCall
   0060 75 82 02            692 	mov	dpl,#0x02
   0063 12s00r00            693 	lcall	_lcdgotoxy
                            694 ;	main.c:66: lcdputstr("   Web Based    ");
                            695 ;	genCall
                            696 ;	Peephole 182.a	used 16 bit load of DPTR
   0066 90s00r00            697 	mov	dptr,#__str_0
   0069 75 F0 80            698 	mov	b,#0x80
   006C 12s00r00            699 	lcall	_lcdputstr
                            700 ;	main.c:67: lcdputstr("     Weather    ");
                            701 ;	genCall
                            702 ;	Peephole 182.a	used 16 bit load of DPTR
   006F 90s00r11            703 	mov	dptr,#__str_1
   0072 75 F0 80            704 	mov	b,#0x80
   0075 12s00r00            705 	lcall	_lcdputstr
                            706 ;	main.c:68: lcdputstr(" Monitoring Sys ");
                            707 ;	genCall
                            708 ;	Peephole 182.a	used 16 bit load of DPTR
   0078 90s00r22            709 	mov	dptr,#__str_2
   007B 75 F0 80            710 	mov	b,#0x80
   007E 12s00r00            711 	lcall	_lcdputstr
                            712 ;	main.c:69: delay_sec(1);
                            713 ;	genCall
   0081 75 82 01            714 	mov	dpl,#0x01
   0084 12s00r00            715 	lcall	_delay_sec
                            716 ;	main.c:70: lcdputcmd(1);
                            717 ;	genCall
   0087 75 82 01            718 	mov	dpl,#0x01
   008A 12s00r00            719 	lcall	_lcdputcmd
                            720 ;	main.c:72: uart_init()	;                                   // Initilalize UART
                            721 ;	genCall
   008D 12s00r00            722 	lcall	_uart_init
                            723 ;	main.c:73: spi_init();
                            724 ;	genCall
   0090 12s00r00            725 	lcall	_spi_init
                            726 ;	main.c:74: sd_initialization= sdcard_init();
                            727 ;	genCall
   0093 12s00r00            728 	lcall	_sdcard_init
   0096 AA 82               729 	mov	r2,dpl
                            730 ;	main.c:75: timer_init();                                               // Sd card initialization
                            731 ;	genCall
   0098 C0 02               732 	push	ar2
   009A 12s00r00            733 	lcall	_timer_init
   009D D0 02               734 	pop	ar2
                            735 ;	main.c:77: if(sd_initialization==0)
                            736 ;	genIfx
   009F EA                  737 	mov	a,r2
                            738 ;	genIfxJump
                            739 ;	Peephole 108.b	removed ljmp by inverse jump logic
   00A0 70 09               740 	jnz	00102$
                            741 ;	Peephole 300	removed redundant label 00187$
                            742 ;	main.c:79: WDTPRG =0x03;
                            743 ;	genAssign
   00A2 75 A7 03            744 	mov	_WDTPRG,#0x03
                            745 ;	main.c:80: WDTRST = 0X01E;
                            746 ;	genAssign
   00A5 75 A6 1E            747 	mov	_WDTRST,#0x1E
                            748 ;	main.c:81: WDTRST = 0X0E1;
                            749 ;	genAssign
   00A8 75 A6 E1            750 	mov	_WDTRST,#0xE1
   00AB                     751 00102$:
                            752 ;	main.c:84: fr=1;
                            753 ;	genAssign
   00AB 90s02r05            754 	mov	dptr,#_fr
   00AE 74 01               755 	mov	a,#0x01
   00B0 F0                  756 	movx	@dptr,a
   00B1 E4                  757 	clr	a
   00B2 A3                  758 	inc	dptr
   00B3 F0                  759 	movx	@dptr,a
                            760 ;	main.c:85: display=1;
                            761 ;	genAssign
   00B4 90s02r07            762 	mov	dptr,#_display
   00B7 74 01               763 	mov	a,#0x01
   00B9 F0                  764 	movx	@dptr,a
   00BA E4                  765 	clr	a
   00BB A3                  766 	inc	dptr
   00BC F0                  767 	movx	@dptr,a
                            768 ;	main.c:86: eereset();                                      // EEPROM is reset at every powerup
                            769 ;	genCall
   00BD 12s00r00            770 	lcall	_eereset
                            771 ;	main.c:89: while(1)
   00C0                     772 00152$:
                            773 ;	main.c:93: sensor_data[LIGHT]=LIGHT_calibration();
                            774 ;	genCall
   00C0 12s00r00            775 	lcall	_LIGHT_calibration
   00C3 AA 82               776 	mov	r2,dpl
   00C5 AB 83               777 	mov	r3,dph
                            778 ;	genCast
                            779 ;	genPointerSet
                            780 ;     genFarPointerSet
   00C7 90s02r0D            781 	mov	dptr,#(_sensor_data + 0x0001)
   00CA EA                  782 	mov	a,r2
   00CB F0                  783 	movx	@dptr,a
                            784 ;	main.c:94: sensor_data[TEMP]=TEMP_calibration();
                            785 ;	genCall
   00CC 12s00r00            786 	lcall	_TEMP_calibration
   00CF AA 82               787 	mov	r2,dpl
   00D1 AB 83               788 	mov	r3,dph
                            789 ;	genCast
                            790 ;	genPointerSet
                            791 ;     genFarPointerSet
   00D3 90s02r0E            792 	mov	dptr,#(_sensor_data + 0x0002)
   00D6 EA                  793 	mov	a,r2
   00D7 F0                  794 	movx	@dptr,a
                            795 ;	main.c:95: sensor_data[HUMIDITY]=HUMIDITY_calibration();
                            796 ;	genCall
   00D8 12s00r00            797 	lcall	_HUMIDITY_calibration
   00DB AA 82               798 	mov	r2,dpl
   00DD AB 83               799 	mov	r3,dph
                            800 ;	genCast
                            801 ;	genPointerSet
                            802 ;     genFarPointerSet
   00DF 90s02r0F            803 	mov	dptr,#(_sensor_data + 0x0003)
   00E2 EA                  804 	mov	a,r2
   00E3 F0                  805 	movx	@dptr,a
                            806 ;	main.c:96: pre=PRESSURE_calibration();
                            807 ;	genCall
   00E4 12s00r00            808 	lcall	_PRESSURE_calibration
   00E7 AA 82               809 	mov	r2,dpl
   00E9 AB 83               810 	mov	r3,dph
                            811 ;	main.c:98: if(gps_flag==0 && timeout<3)
                            812 ;	genAssign
   00EB 90s02r04            813 	mov	dptr,#_gps_flag
   00EE E0                  814 	movx	a,@dptr
                            815 ;	genIfx
   00EF FC                  816 	mov	r4,a
                            817 ;	Peephole 105	removed redundant mov
                            818 ;	genIfxJump
   00F0 60 03               819 	jz	00188$
   00F2 02s03rE7            820 	ljmp	00109$
   00F5                     821 00188$:
                            822 ;	genAssign
   00F5 90s02r03            823 	mov	dptr,#_timeout
   00F8 E0                  824 	movx	a,@dptr
   00F9 FC                  825 	mov	r4,a
                            826 ;	genCmpLt
                            827 ;	genCmp
   00FA BC 03 00            828 	cjne	r4,#0x03,00189$
   00FD                     829 00189$:
                            830 ;	genIfxJump
   00FD 40 03               831 	jc	00190$
   00FF 02s03rE7            832 	ljmp	00109$
   0102                     833 00190$:
                            834 ;	main.c:102: gps_data= gps_read();
                            835 ;	genCall
   0102 C0 02               836 	push	ar2
   0104 C0 03               837 	push	ar3
   0106 12s00r00            838 	lcall	_gps_read
   0109 AC 82               839 	mov	r4,dpl
   010B AD 83               840 	mov	r5,dph
   010D AE F0               841 	mov	r6,b
   010F D0 03               842 	pop	ar3
   0111 D0 02               843 	pop	ar2
                            844 ;	main.c:103: status = gps_status(gps_data);
                            845 ;	genCall
   0113 8C 82               846 	mov	dpl,r4
   0115 8D 83               847 	mov	dph,r5
   0117 8E F0               848 	mov	b,r6
   0119 C0 02               849 	push	ar2
   011B C0 03               850 	push	ar3
   011D C0 04               851 	push	ar4
   011F C0 05               852 	push	ar5
   0121 C0 06               853 	push	ar6
   0123 12s00r00            854 	lcall	_gps_status
   0126 AF 82               855 	mov	r7,dpl
   0128 D0 06               856 	pop	ar6
   012A D0 05               857 	pop	ar5
   012C D0 04               858 	pop	ar4
   012E D0 03               859 	pop	ar3
   0130 D0 02               860 	pop	ar2
                            861 ;	genAssign
   0132 90s02r2E            862 	mov	dptr,#_main_status_1_1
   0135 EF                  863 	mov	a,r7
   0136 F0                  864 	movx	@dptr,a
                            865 ;	main.c:104: timeout++;
                            866 ;	genAssign
   0137 90s02r03            867 	mov	dptr,#_timeout
   013A E0                  868 	movx	a,@dptr
   013B F8                  869 	mov	r0,a
                            870 ;	genPlus
   013C 90s02r03            871 	mov	dptr,#_timeout
                            872 ;     genPlusIncr
   013F 74 01               873 	mov	a,#0x01
                            874 ;	Peephole 236.a	used r0 instead of ar0
   0141 28                  875 	add	a,r0
   0142 F0                  876 	movx	@dptr,a
                            877 ;	main.c:106: if(status=='A')
                            878 ;	genCmpEq
                            879 ;	gencjneshort
   0143 BF 41 02            880 	cjne	r7,#0x41,00191$
   0146 80 03               881 	sjmp	00192$
   0148                     882 00191$:
   0148 02s03rC2            883 	ljmp	00106$
   014B                     884 00192$:
                            885 ;	main.c:111: gps_flag=1;
                            886 ;	genIpush
   014B C0 02               887 	push	ar2
   014D C0 03               888 	push	ar3
                            889 ;	genAssign
   014F 90s02r04            890 	mov	dptr,#_gps_flag
   0152 74 01               891 	mov	a,#0x01
   0154 F0                  892 	movx	@dptr,a
                            893 ;	main.c:112: latitude = gps_latitude(gps_data);
                            894 ;	genCall
   0155 8C 82               895 	mov	dpl,r4
   0157 8D 83               896 	mov	dph,r5
   0159 8E F0               897 	mov	b,r6
   015B C0 02               898 	push	ar2
   015D C0 03               899 	push	ar3
   015F C0 04               900 	push	ar4
   0161 C0 05               901 	push	ar5
   0163 C0 06               902 	push	ar6
   0165 12s00r00            903 	lcall	_gps_latitude
   0168 AF 82               904 	mov	r7,dpl
   016A A8 83               905 	mov	r0,dph
   016C A9 F0               906 	mov	r1,b
   016E D0 06               907 	pop	ar6
   0170 D0 05               908 	pop	ar5
   0172 D0 04               909 	pop	ar4
   0174 D0 03               910 	pop	ar3
   0176 D0 02               911 	pop	ar2
                            912 ;	genAssign
   0178 90s02r28            913 	mov	dptr,#_main_latitude_1_1
   017B EF                  914 	mov	a,r7
   017C F0                  915 	movx	@dptr,a
   017D A3                  916 	inc	dptr
   017E E8                  917 	mov	a,r0
   017F F0                  918 	movx	@dptr,a
   0180 A3                  919 	inc	dptr
   0181 E9                  920 	mov	a,r1
   0182 F0                  921 	movx	@dptr,a
                            922 ;	main.c:113: longitude = gps_longitude(gps_data);
                            923 ;	genCall
   0183 8C 82               924 	mov	dpl,r4
   0185 8D 83               925 	mov	dph,r5
   0187 8E F0               926 	mov	b,r6
   0189 C0 02               927 	push	ar2
   018B C0 03               928 	push	ar3
   018D C0 04               929 	push	ar4
   018F C0 05               930 	push	ar5
   0191 C0 06               931 	push	ar6
   0193 12s00r00            932 	lcall	_gps_longitude
   0196 AF 82               933 	mov	r7,dpl
   0198 A8 83               934 	mov	r0,dph
   019A A9 F0               935 	mov	r1,b
   019C D0 06               936 	pop	ar6
   019E D0 05               937 	pop	ar5
   01A0 D0 04               938 	pop	ar4
   01A2 D0 03               939 	pop	ar3
   01A4 D0 02               940 	pop	ar2
                            941 ;	genAssign
   01A6 90s02r2B            942 	mov	dptr,#_main_longitude_1_1
   01A9 EF                  943 	mov	a,r7
   01AA F0                  944 	movx	@dptr,a
   01AB A3                  945 	inc	dptr
   01AC E8                  946 	mov	a,r0
   01AD F0                  947 	movx	@dptr,a
   01AE A3                  948 	inc	dptr
   01AF E9                  949 	mov	a,r1
   01B0 F0                  950 	movx	@dptr,a
                            951 ;	main.c:115: gps_d = gps_date(gps_data);
                            952 ;	genCall
   01B1 8C 82               953 	mov	dpl,r4
   01B3 8D 83               954 	mov	dph,r5
   01B5 8E F0               955 	mov	b,r6
   01B7 C0 02               956 	push	ar2
   01B9 C0 03               957 	push	ar3
   01BB C0 04               958 	push	ar4
   01BD C0 05               959 	push	ar5
   01BF C0 06               960 	push	ar6
   01C1 12s00r00            961 	lcall	_gps_date
   01C4 AF 82               962 	mov	r7,dpl
   01C6 A8 83               963 	mov	r0,dph
   01C8 A9 F0               964 	mov	r1,b
   01CA D0 06               965 	pop	ar6
   01CC D0 05               966 	pop	ar5
   01CE D0 04               967 	pop	ar4
   01D0 D0 03               968 	pop	ar3
   01D2 D0 02               969 	pop	ar2
                            970 ;	genAssign
   01D4 90s02r2F            971 	mov	dptr,#_main_gps_d_1_1
   01D7 EF                  972 	mov	a,r7
   01D8 F0                  973 	movx	@dptr,a
   01D9 A3                  974 	inc	dptr
   01DA E8                  975 	mov	a,r0
   01DB F0                  976 	movx	@dptr,a
   01DC A3                  977 	inc	dptr
   01DD E9                  978 	mov	a,r1
   01DE F0                  979 	movx	@dptr,a
                            980 ;	main.c:116: gps_ti = gps_time(gps_data);
                            981 ;	genCall
   01DF 8C 82               982 	mov	dpl,r4
   01E1 8D 83               983 	mov	dph,r5
   01E3 8E F0               984 	mov	b,r6
   01E5 C0 02               985 	push	ar2
   01E7 C0 03               986 	push	ar3
   01E9 C0 07               987 	push	ar7
   01EB C0 00               988 	push	ar0
   01ED C0 01               989 	push	ar1
   01EF 12s00r00            990 	lcall	_gps_time
   01F2 85 82*00            991 	mov	_main_sloc0_1_0,dpl
   01F5 85 83*01            992 	mov	(_main_sloc0_1_0 + 1),dph
   01F8 85 F0*02            993 	mov	(_main_sloc0_1_0 + 2),b
   01FB D0 01               994 	pop	ar1
   01FD D0 00               995 	pop	ar0
   01FF D0 07               996 	pop	ar7
   0201 D0 03               997 	pop	ar3
   0203 D0 02               998 	pop	ar2
                            999 ;	main.c:120: temp[0]=*gps_d ;temp[1]=*(gps_d+1) ;temp[2]='\n'; date[0]=atoi(temp);
                           1000 ;	genPointerGet
                           1001 ;	genGenPointerGet
   0205 8F 82              1002 	mov	dpl,r7
   0207 88 83              1003 	mov	dph,r0
   0209 89 F0              1004 	mov	b,r1
   020B 12s00r00           1005 	lcall	__gptrget
                           1006 ;	genPointerSet
                           1007 ;     genFarPointerSet
   020E FA                 1008 	mov	r2,a
   020F 90s02r32           1009 	mov	dptr,#_main_temp_1_1
                           1010 ;	Peephole 100	removed redundant mov
   0212 F0                 1011 	movx	@dptr,a
                           1012 ;	genPlus
                           1013 ;     genPlusIncr
   0213 74 01              1014 	mov	a,#0x01
                           1015 ;	Peephole 236.a	used r7 instead of ar7
   0215 2F                 1016 	add	a,r7
   0216 FA                 1017 	mov	r2,a
                           1018 ;	Peephole 181	changed mov to clr
   0217 E4                 1019 	clr	a
                           1020 ;	Peephole 236.b	used r0 instead of ar0
   0218 38                 1021 	addc	a,r0
   0219 FB                 1022 	mov	r3,a
   021A 89 04              1023 	mov	ar4,r1
                           1024 ;	genPointerGet
                           1025 ;	genGenPointerGet
   021C 8A 82              1026 	mov	dpl,r2
   021E 8B 83              1027 	mov	dph,r3
   0220 8C F0              1028 	mov	b,r4
   0222 12s00r00           1029 	lcall	__gptrget
                           1030 ;	genPointerSet
                           1031 ;     genFarPointerSet
   0225 FA                 1032 	mov	r2,a
   0226 90s02r33           1033 	mov	dptr,#(_main_temp_1_1 + 0x0001)
                           1034 ;	Peephole 100	removed redundant mov
   0229 F0                 1035 	movx	@dptr,a
                           1036 ;	genPointerSet
                           1037 ;     genFarPointerSet
   022A 90s02r34           1038 	mov	dptr,#(_main_temp_1_1 + 0x0002)
   022D 74 0A              1039 	mov	a,#0x0A
   022F F0                 1040 	movx	@dptr,a
                           1041 ;	genCall
                           1042 ;	Peephole 182.a	used 16 bit load of DPTR
   0230 90s02r32           1043 	mov	dptr,#_main_temp_1_1
   0233 75 F0 00           1044 	mov	b,#0x00
   0236 C0 07              1045 	push	ar7
   0238 C0 00              1046 	push	ar0
   023A C0 01              1047 	push	ar1
   023C 12s00r00           1048 	lcall	_atoi
   023F AA 82              1049 	mov	r2,dpl
   0241 AB 83              1050 	mov	r3,dph
   0243 D0 01              1051 	pop	ar1
   0245 D0 00              1052 	pop	ar0
   0247 D0 07              1053 	pop	ar7
                           1054 ;	genCast
                           1055 ;	genPointerSet
                           1056 ;     genFarPointerSet
   0249 90s00r01           1057 	mov	dptr,#_date
   024C EA                 1058 	mov	a,r2
   024D F0                 1059 	movx	@dptr,a
                           1060 ;	main.c:121: temp[0]=*(gps_d+2) ;temp[1]=*(gps_d+3) ;temp[2]='\n'; date[1]=atoi(temp);
                           1061 ;	genPlus
                           1062 ;     genPlusIncr
   024E 74 02              1063 	mov	a,#0x02
                           1064 ;	Peephole 236.a	used r7 instead of ar7
   0250 2F                 1065 	add	a,r7
   0251 FA                 1066 	mov	r2,a
                           1067 ;	Peephole 181	changed mov to clr
   0252 E4                 1068 	clr	a
                           1069 ;	Peephole 236.b	used r0 instead of ar0
   0253 38                 1070 	addc	a,r0
   0254 FB                 1071 	mov	r3,a
   0255 89 04              1072 	mov	ar4,r1
                           1073 ;	genPointerGet
                           1074 ;	genGenPointerGet
   0257 8A 82              1075 	mov	dpl,r2
   0259 8B 83              1076 	mov	dph,r3
   025B 8C F0              1077 	mov	b,r4
   025D 12s00r00           1078 	lcall	__gptrget
                           1079 ;	genPointerSet
                           1080 ;     genFarPointerSet
   0260 FA                 1081 	mov	r2,a
   0261 90s02r32           1082 	mov	dptr,#_main_temp_1_1
                           1083 ;	Peephole 100	removed redundant mov
   0264 F0                 1084 	movx	@dptr,a
                           1085 ;	genPlus
                           1086 ;     genPlusIncr
   0265 74 03              1087 	mov	a,#0x03
                           1088 ;	Peephole 236.a	used r7 instead of ar7
   0267 2F                 1089 	add	a,r7
   0268 FA                 1090 	mov	r2,a
                           1091 ;	Peephole 181	changed mov to clr
   0269 E4                 1092 	clr	a
                           1093 ;	Peephole 236.b	used r0 instead of ar0
   026A 38                 1094 	addc	a,r0
   026B FB                 1095 	mov	r3,a
   026C 89 04              1096 	mov	ar4,r1
                           1097 ;	genPointerGet
                           1098 ;	genGenPointerGet
   026E 8A 82              1099 	mov	dpl,r2
   0270 8B 83              1100 	mov	dph,r3
   0272 8C F0              1101 	mov	b,r4
   0274 12s00r00           1102 	lcall	__gptrget
                           1103 ;	genPointerSet
                           1104 ;     genFarPointerSet
   0277 FA                 1105 	mov	r2,a
   0278 90s02r33           1106 	mov	dptr,#(_main_temp_1_1 + 0x0001)
                           1107 ;	Peephole 100	removed redundant mov
   027B F0                 1108 	movx	@dptr,a
                           1109 ;	genPointerSet
                           1110 ;     genFarPointerSet
   027C 90s02r34           1111 	mov	dptr,#(_main_temp_1_1 + 0x0002)
   027F 74 0A              1112 	mov	a,#0x0A
   0281 F0                 1113 	movx	@dptr,a
                           1114 ;	genCall
                           1115 ;	Peephole 182.a	used 16 bit load of DPTR
   0282 90s02r32           1116 	mov	dptr,#_main_temp_1_1
   0285 75 F0 00           1117 	mov	b,#0x00
   0288 C0 07              1118 	push	ar7
   028A C0 00              1119 	push	ar0
   028C C0 01              1120 	push	ar1
   028E 12s00r00           1121 	lcall	_atoi
   0291 AA 82              1122 	mov	r2,dpl
   0293 AB 83              1123 	mov	r3,dph
   0295 D0 01              1124 	pop	ar1
   0297 D0 00              1125 	pop	ar0
   0299 D0 07              1126 	pop	ar7
                           1127 ;	genCast
                           1128 ;	genPointerSet
                           1129 ;     genFarPointerSet
   029B 90s00r02           1130 	mov	dptr,#(_date + 0x0001)
   029E EA                 1131 	mov	a,r2
   029F F0                 1132 	movx	@dptr,a
                           1133 ;	main.c:122: temp[0]=*(gps_d+4) ;temp[1]=*(gps_d+5) ;temp[2]='\n'; date[2]=atoi(temp);
                           1134 ;	genPlus
                           1135 ;     genPlusIncr
   02A0 74 04              1136 	mov	a,#0x04
                           1137 ;	Peephole 236.a	used r7 instead of ar7
   02A2 2F                 1138 	add	a,r7
   02A3 FA                 1139 	mov	r2,a
                           1140 ;	Peephole 181	changed mov to clr
   02A4 E4                 1141 	clr	a
                           1142 ;	Peephole 236.b	used r0 instead of ar0
   02A5 38                 1143 	addc	a,r0
   02A6 FB                 1144 	mov	r3,a
   02A7 89 04              1145 	mov	ar4,r1
                           1146 ;	genPointerGet
                           1147 ;	genGenPointerGet
   02A9 8A 82              1148 	mov	dpl,r2
   02AB 8B 83              1149 	mov	dph,r3
   02AD 8C F0              1150 	mov	b,r4
   02AF 12s00r00           1151 	lcall	__gptrget
                           1152 ;	genPointerSet
                           1153 ;     genFarPointerSet
   02B2 FA                 1154 	mov	r2,a
   02B3 90s02r32           1155 	mov	dptr,#_main_temp_1_1
                           1156 ;	Peephole 100	removed redundant mov
   02B6 F0                 1157 	movx	@dptr,a
                           1158 ;	genPlus
                           1159 ;     genPlusIncr
   02B7 74 05              1160 	mov	a,#0x05
                           1161 ;	Peephole 236.a	used r7 instead of ar7
   02B9 2F                 1162 	add	a,r7
   02BA FF                 1163 	mov	r7,a
                           1164 ;	Peephole 181	changed mov to clr
   02BB E4                 1165 	clr	a
                           1166 ;	Peephole 236.b	used r0 instead of ar0
   02BC 38                 1167 	addc	a,r0
   02BD F8                 1168 	mov	r0,a
                           1169 ;	genPointerGet
                           1170 ;	genGenPointerGet
   02BE 8F 82              1171 	mov	dpl,r7
   02C0 88 83              1172 	mov	dph,r0
   02C2 89 F0              1173 	mov	b,r1
   02C4 12s00r00           1174 	lcall	__gptrget
                           1175 ;	genPointerSet
                           1176 ;     genFarPointerSet
   02C7 FF                 1177 	mov	r7,a
   02C8 90s02r33           1178 	mov	dptr,#(_main_temp_1_1 + 0x0001)
                           1179 ;	Peephole 100	removed redundant mov
   02CB F0                 1180 	movx	@dptr,a
                           1181 ;	genPointerSet
                           1182 ;     genFarPointerSet
   02CC 90s02r34           1183 	mov	dptr,#(_main_temp_1_1 + 0x0002)
   02CF 74 0A              1184 	mov	a,#0x0A
   02D1 F0                 1185 	movx	@dptr,a
                           1186 ;	genCall
                           1187 ;	Peephole 182.a	used 16 bit load of DPTR
   02D2 90s02r32           1188 	mov	dptr,#_main_temp_1_1
   02D5 75 F0 00           1189 	mov	b,#0x00
   02D8 12s00r00           1190 	lcall	_atoi
   02DB AA 82              1191 	mov	r2,dpl
   02DD AB 83              1192 	mov	r3,dph
                           1193 ;	genCast
                           1194 ;	genPointerSet
                           1195 ;     genFarPointerSet
   02DF 90s00r03           1196 	mov	dptr,#(_date + 0x0002)
   02E2 EA                 1197 	mov	a,r2
   02E3 F0                 1198 	movx	@dptr,a
                           1199 ;	main.c:127: temp[0]=*gps_ti ;temp[1]=*(gps_ti+1) ;temp[2]='\n'; h=atoi(temp);
                           1200 ;	genPointerGet
                           1201 ;	genGenPointerGet
   02E4 85*00 82           1202 	mov	dpl,_main_sloc0_1_0
   02E7 85*01 83           1203 	mov	dph,(_main_sloc0_1_0 + 1)
   02EA 85*02 F0           1204 	mov	b,(_main_sloc0_1_0 + 2)
   02ED 12s00r00           1205 	lcall	__gptrget
                           1206 ;	genPointerSet
                           1207 ;     genFarPointerSet
   02F0 FA                 1208 	mov	r2,a
   02F1 90s02r32           1209 	mov	dptr,#_main_temp_1_1
                           1210 ;	Peephole 100	removed redundant mov
   02F4 F0                 1211 	movx	@dptr,a
                           1212 ;	genPlus
                           1213 ;     genPlusIncr
   02F5 74 01              1214 	mov	a,#0x01
   02F7 25*00              1215 	add	a,_main_sloc0_1_0
   02F9 FA                 1216 	mov	r2,a
                           1217 ;	Peephole 181	changed mov to clr
   02FA E4                 1218 	clr	a
   02FB 35*01              1219 	addc	a,(_main_sloc0_1_0 + 1)
   02FD FB                 1220 	mov	r3,a
   02FE AC*02              1221 	mov	r4,(_main_sloc0_1_0 + 2)
                           1222 ;	genPointerGet
                           1223 ;	genGenPointerGet
   0300 8A 82              1224 	mov	dpl,r2
   0302 8B 83              1225 	mov	dph,r3
   0304 8C F0              1226 	mov	b,r4
   0306 12s00r00           1227 	lcall	__gptrget
                           1228 ;	genPointerSet
                           1229 ;     genFarPointerSet
   0309 FA                 1230 	mov	r2,a
   030A 90s02r33           1231 	mov	dptr,#(_main_temp_1_1 + 0x0001)
                           1232 ;	Peephole 100	removed redundant mov
   030D F0                 1233 	movx	@dptr,a
                           1234 ;	genPointerSet
                           1235 ;     genFarPointerSet
   030E 90s02r34           1236 	mov	dptr,#(_main_temp_1_1 + 0x0002)
   0311 74 0A              1237 	mov	a,#0x0A
   0313 F0                 1238 	movx	@dptr,a
                           1239 ;	genCall
                           1240 ;	Peephole 182.a	used 16 bit load of DPTR
   0314 90s02r32           1241 	mov	dptr,#_main_temp_1_1
   0317 75 F0 00           1242 	mov	b,#0x00
   031A 12s00r00           1243 	lcall	_atoi
   031D AA 82              1244 	mov	r2,dpl
   031F AB 83              1245 	mov	r3,dph
                           1246 ;	genCast
   0321 90s02r09           1247 	mov	dptr,#_h
   0324 EA                 1248 	mov	a,r2
   0325 F0                 1249 	movx	@dptr,a
                           1250 ;	main.c:128: temp[0]=*(gps_ti+2) ;temp[1]=*(gps_ti+3) ;temp[2]='\n'; m=atoi(temp);
                           1251 ;	genPlus
                           1252 ;     genPlusIncr
   0326 74 02              1253 	mov	a,#0x02
   0328 25*00              1254 	add	a,_main_sloc0_1_0
   032A FA                 1255 	mov	r2,a
                           1256 ;	Peephole 181	changed mov to clr
   032B E4                 1257 	clr	a
   032C 35*01              1258 	addc	a,(_main_sloc0_1_0 + 1)
   032E FB                 1259 	mov	r3,a
   032F AC*02              1260 	mov	r4,(_main_sloc0_1_0 + 2)
                           1261 ;	genPointerGet
                           1262 ;	genGenPointerGet
   0331 8A 82              1263 	mov	dpl,r2
   0333 8B 83              1264 	mov	dph,r3
   0335 8C F0              1265 	mov	b,r4
   0337 12s00r00           1266 	lcall	__gptrget
                           1267 ;	genPointerSet
                           1268 ;     genFarPointerSet
   033A FA                 1269 	mov	r2,a
   033B 90s02r32           1270 	mov	dptr,#_main_temp_1_1
                           1271 ;	Peephole 100	removed redundant mov
   033E F0                 1272 	movx	@dptr,a
                           1273 ;	genPlus
                           1274 ;     genPlusIncr
   033F 74 03              1275 	mov	a,#0x03
   0341 25*00              1276 	add	a,_main_sloc0_1_0
   0343 FA                 1277 	mov	r2,a
                           1278 ;	Peephole 181	changed mov to clr
   0344 E4                 1279 	clr	a
   0345 35*01              1280 	addc	a,(_main_sloc0_1_0 + 1)
   0347 FB                 1281 	mov	r3,a
   0348 AC*02              1282 	mov	r4,(_main_sloc0_1_0 + 2)
                           1283 ;	genPointerGet
                           1284 ;	genGenPointerGet
   034A 8A 82              1285 	mov	dpl,r2
   034C 8B 83              1286 	mov	dph,r3
   034E 8C F0              1287 	mov	b,r4
   0350 12s00r00           1288 	lcall	__gptrget
                           1289 ;	genPointerSet
                           1290 ;     genFarPointerSet
   0353 FA                 1291 	mov	r2,a
   0354 90s02r33           1292 	mov	dptr,#(_main_temp_1_1 + 0x0001)
                           1293 ;	Peephole 100	removed redundant mov
   0357 F0                 1294 	movx	@dptr,a
                           1295 ;	genPointerSet
                           1296 ;     genFarPointerSet
   0358 90s02r34           1297 	mov	dptr,#(_main_temp_1_1 + 0x0002)
   035B 74 0A              1298 	mov	a,#0x0A
   035D F0                 1299 	movx	@dptr,a
                           1300 ;	genCall
                           1301 ;	Peephole 182.a	used 16 bit load of DPTR
   035E 90s02r32           1302 	mov	dptr,#_main_temp_1_1
   0361 75 F0 00           1303 	mov	b,#0x00
   0364 12s00r00           1304 	lcall	_atoi
   0367 AA 82              1305 	mov	r2,dpl
   0369 AB 83              1306 	mov	r3,dph
                           1307 ;	genCast
   036B 90s02r0A           1308 	mov	dptr,#_m
   036E EA                 1309 	mov	a,r2
   036F F0                 1310 	movx	@dptr,a
                           1311 ;	main.c:129: temp[0]=*(gps_ti+4) ;temp[1]=*(gps_ti+5) ;temp[2]='\n'; s=atoi(temp);
                           1312 ;	genPlus
                           1313 ;     genPlusIncr
   0370 74 04              1314 	mov	a,#0x04
   0372 25*00              1315 	add	a,_main_sloc0_1_0
   0374 FA                 1316 	mov	r2,a
                           1317 ;	Peephole 181	changed mov to clr
   0375 E4                 1318 	clr	a
   0376 35*01              1319 	addc	a,(_main_sloc0_1_0 + 1)
   0378 FB                 1320 	mov	r3,a
   0379 AC*02              1321 	mov	r4,(_main_sloc0_1_0 + 2)
                           1322 ;	genPointerGet
                           1323 ;	genGenPointerGet
   037B 8A 82              1324 	mov	dpl,r2
   037D 8B 83              1325 	mov	dph,r3
   037F 8C F0              1326 	mov	b,r4
   0381 12s00r00           1327 	lcall	__gptrget
                           1328 ;	genPointerSet
                           1329 ;     genFarPointerSet
   0384 FA                 1330 	mov	r2,a
   0385 90s02r32           1331 	mov	dptr,#_main_temp_1_1
                           1332 ;	Peephole 100	removed redundant mov
   0388 F0                 1333 	movx	@dptr,a
                           1334 ;	genPlus
                           1335 ;     genPlusIncr
   0389 74 05              1336 	mov	a,#0x05
   038B 25*00              1337 	add	a,_main_sloc0_1_0
   038D FA                 1338 	mov	r2,a
                           1339 ;	Peephole 181	changed mov to clr
   038E E4                 1340 	clr	a
   038F 35*01              1341 	addc	a,(_main_sloc0_1_0 + 1)
   0391 FB                 1342 	mov	r3,a
   0392 AC*02              1343 	mov	r4,(_main_sloc0_1_0 + 2)
                           1344 ;	genPointerGet
                           1345 ;	genGenPointerGet
   0394 8A 82              1346 	mov	dpl,r2
   0396 8B 83              1347 	mov	dph,r3
   0398 8C F0              1348 	mov	b,r4
   039A 12s00r00           1349 	lcall	__gptrget
                           1350 ;	genPointerSet
                           1351 ;     genFarPointerSet
   039D FA                 1352 	mov	r2,a
   039E 90s02r33           1353 	mov	dptr,#(_main_temp_1_1 + 0x0001)
                           1354 ;	Peephole 100	removed redundant mov
   03A1 F0                 1355 	movx	@dptr,a
                           1356 ;	genPointerSet
                           1357 ;     genFarPointerSet
   03A2 90s02r34           1358 	mov	dptr,#(_main_temp_1_1 + 0x0002)
   03A5 74 0A              1359 	mov	a,#0x0A
   03A7 F0                 1360 	movx	@dptr,a
                           1361 ;	genCall
                           1362 ;	Peephole 182.a	used 16 bit load of DPTR
   03A8 90s02r32           1363 	mov	dptr,#_main_temp_1_1
   03AB 75 F0 00           1364 	mov	b,#0x00
   03AE 12s00r00           1365 	lcall	_atoi
   03B1 AA 82              1366 	mov	r2,dpl
   03B3 AB 83              1367 	mov	r3,dph
                           1368 ;	genCast
   03B5 90s02r0B           1369 	mov	dptr,#_s
   03B8 EA                 1370 	mov	a,r2
   03B9 F0                 1371 	movx	@dptr,a
                           1372 ;	main.c:130: UART =1;
                           1373 ;	genAssign
   03BA D2 94              1374 	setb	_P1_4
                           1375 ;	genIpop
   03BC D0 03              1376 	pop	ar3
   03BE D0 02              1377 	pop	ar2
                           1378 ;	Peephole 112.b	changed ljmp to sjmp
   03C0 80 25              1379 	sjmp	00109$
   03C2                    1380 00106$:
                           1381 ;	main.c:132: else if(timeout==3)
                           1382 ;	genAssign
   03C2 90s02r03           1383 	mov	dptr,#_timeout
   03C5 E0                 1384 	movx	a,@dptr
   03C6 FC                 1385 	mov	r4,a
                           1386 ;	genCmpEq
                           1387 ;	gencjneshort
                           1388 ;	Peephole 112.b	changed ljmp to sjmp
                           1389 ;	Peephole 198.b	optimized misc jump sequence
   03C7 BC 03 1D           1390 	cjne	r4,#0x03,00109$
                           1391 ;	Peephole 200.b	removed redundant sjmp
                           1392 ;	Peephole 300	removed redundant label 00193$
                           1393 ;	Peephole 300	removed redundant label 00194$
                           1394 ;	main.c:134: status='V';
                           1395 ;	genAssign
   03CA 90s02r2E           1396 	mov	dptr,#_main_status_1_1
   03CD 74 56              1397 	mov	a,#0x56
   03CF F0                 1398 	movx	@dptr,a
                           1399 ;	main.c:135: printf_tiny("\n\n\rGPS Timeout; Failed to get fix on satellite");
                           1400 ;	genIpush
   03D0 C0 02              1401 	push	ar2
   03D2 C0 03              1402 	push	ar3
   03D4 74r33              1403 	mov	a,#__str_3
   03D6 C0 E0              1404 	push	acc
   03D8 74s00              1405 	mov	a,#(__str_3 >> 8)
   03DA C0 E0              1406 	push	acc
                           1407 ;	genCall
   03DC 12s00r00           1408 	lcall	_printf_tiny
   03DF 15 81              1409 	dec	sp
   03E1 15 81              1410 	dec	sp
   03E3 D0 03              1411 	pop	ar3
   03E5 D0 02              1412 	pop	ar2
   03E7                    1413 00109$:
                           1414 ;	main.c:144: arr[0]=date[0] ; arr[1]= date[1] ; arr[2]= date[2] ;arr[3]=',';
                           1415 ;	genPointerGet
                           1416 ;	genFarPointerGet
   03E7 90s00r01           1417 	mov	dptr,#_date
   03EA E0                 1418 	movx	a,@dptr
                           1419 ;	genPointerSet
                           1420 ;     genFarPointerSet
   03EB FC                 1421 	mov	r4,a
   03EC 90s02r18           1422 	mov	dptr,#_main_arr_1_1
                           1423 ;	Peephole 100	removed redundant mov
   03EF F0                 1424 	movx	@dptr,a
                           1425 ;	genPointerGet
                           1426 ;	genFarPointerGet
   03F0 90s00r02           1427 	mov	dptr,#(_date + 0x0001)
   03F3 E0                 1428 	movx	a,@dptr
                           1429 ;	genPointerSet
                           1430 ;     genFarPointerSet
   03F4 FC                 1431 	mov	r4,a
   03F5 90s02r19           1432 	mov	dptr,#(_main_arr_1_1 + 0x0001)
                           1433 ;	Peephole 100	removed redundant mov
   03F8 F0                 1434 	movx	@dptr,a
                           1435 ;	genPointerGet
                           1436 ;	genFarPointerGet
   03F9 90s00r03           1437 	mov	dptr,#(_date + 0x0002)
   03FC E0                 1438 	movx	a,@dptr
                           1439 ;	genPointerSet
                           1440 ;     genFarPointerSet
   03FD FC                 1441 	mov	r4,a
   03FE 90s02r1A           1442 	mov	dptr,#(_main_arr_1_1 + 0x0002)
                           1443 ;	Peephole 100	removed redundant mov
   0401 F0                 1444 	movx	@dptr,a
                           1445 ;	genPointerSet
                           1446 ;     genFarPointerSet
   0402 90s02r1B           1447 	mov	dptr,#(_main_arr_1_1 + 0x0003)
   0405 74 2C              1448 	mov	a,#0x2C
   0407 F0                 1449 	movx	@dptr,a
                           1450 ;	main.c:145: arr[4]= h; arr[5]=m ;arr[6]=',';
                           1451 ;	genAssign
   0408 90s02r09           1452 	mov	dptr,#_h
   040B E0                 1453 	movx	a,@dptr
                           1454 ;	genPointerSet
                           1455 ;     genFarPointerSet
   040C FC                 1456 	mov	r4,a
   040D 90s02r1C           1457 	mov	dptr,#(_main_arr_1_1 + 0x0004)
                           1458 ;	Peephole 100	removed redundant mov
   0410 F0                 1459 	movx	@dptr,a
                           1460 ;	genAssign
   0411 90s02r0A           1461 	mov	dptr,#_m
   0414 E0                 1462 	movx	a,@dptr
                           1463 ;	genPointerSet
                           1464 ;     genFarPointerSet
   0415 FD                 1465 	mov	r5,a
   0416 90s02r1D           1466 	mov	dptr,#(_main_arr_1_1 + 0x0005)
                           1467 ;	Peephole 100	removed redundant mov
   0419 F0                 1468 	movx	@dptr,a
                           1469 ;	genPointerSet
                           1470 ;     genFarPointerSet
   041A 90s02r1E           1471 	mov	dptr,#(_main_arr_1_1 + 0x0006)
   041D 74 2C              1472 	mov	a,#0x2C
   041F F0                 1473 	movx	@dptr,a
                           1474 ;	main.c:146: arr[7]=sensor_data[LIGHT]; arr[8]= ',';
                           1475 ;	genPointerGet
                           1476 ;	genFarPointerGet
   0420 90s02r0D           1477 	mov	dptr,#(_sensor_data + 0x0001)
   0423 E0                 1478 	movx	a,@dptr
                           1479 ;	genPointerSet
                           1480 ;     genFarPointerSet
   0424 FE                 1481 	mov	r6,a
   0425 90s02r1F           1482 	mov	dptr,#(_main_arr_1_1 + 0x0007)
                           1483 ;	Peephole 100	removed redundant mov
   0428 F0                 1484 	movx	@dptr,a
                           1485 ;	genPointerSet
                           1486 ;     genFarPointerSet
   0429 90s02r20           1487 	mov	dptr,#(_main_arr_1_1 + 0x0008)
   042C 74 2C              1488 	mov	a,#0x2C
   042E F0                 1489 	movx	@dptr,a
                           1490 ;	main.c:147: arr[9]=  sensor_data[TEMP]; arr[10]= ',';
                           1491 ;	genPointerGet
                           1492 ;	genFarPointerGet
   042F 90s02r0E           1493 	mov	dptr,#(_sensor_data + 0x0002)
   0432 E0                 1494 	movx	a,@dptr
                           1495 ;	genPointerSet
                           1496 ;     genFarPointerSet
   0433 FE                 1497 	mov	r6,a
   0434 90s02r21           1498 	mov	dptr,#(_main_arr_1_1 + 0x0009)
                           1499 ;	Peephole 100	removed redundant mov
   0437 F0                 1500 	movx	@dptr,a
                           1501 ;	genPointerSet
                           1502 ;     genFarPointerSet
   0438 90s02r22           1503 	mov	dptr,#(_main_arr_1_1 + 0x000a)
   043B 74 2C              1504 	mov	a,#0x2C
   043D F0                 1505 	movx	@dptr,a
                           1506 ;	main.c:148: arr[11]= sensor_data[HUMIDITY];arr[12]= ',';
                           1507 ;	genPointerGet
                           1508 ;	genFarPointerGet
   043E 90s02r0F           1509 	mov	dptr,#(_sensor_data + 0x0003)
   0441 E0                 1510 	movx	a,@dptr
                           1511 ;	genPointerSet
                           1512 ;     genFarPointerSet
   0442 FE                 1513 	mov	r6,a
   0443 90s02r23           1514 	mov	dptr,#(_main_arr_1_1 + 0x000b)
                           1515 ;	Peephole 100	removed redundant mov
   0446 F0                 1516 	movx	@dptr,a
                           1517 ;	genPointerSet
                           1518 ;     genFarPointerSet
   0447 90s02r24           1519 	mov	dptr,#(_main_arr_1_1 + 0x000c)
   044A 74 2C              1520 	mov	a,#0x2C
   044C F0                 1521 	movx	@dptr,a
                           1522 ;	main.c:149: arr[13]=(pre>>8); arr[14]=pre;arr[15]=  '\n';
                           1523 ;	genAssign
   044D 8A 06              1524 	mov	ar6,r2
   044F 8B 07              1525 	mov	ar7,r3
                           1526 ;	genGetByte
   0451 8F 00              1527 	mov	ar0,r7
                           1528 ;	genPointerSet
                           1529 ;     genFarPointerSet
   0453 90s02r25           1530 	mov	dptr,#(_main_arr_1_1 + 0x000d)
   0456 E8                 1531 	mov	a,r0
   0457 F0                 1532 	movx	@dptr,a
                           1533 ;	genCast
                           1534 ;	genPointerSet
                           1535 ;     genFarPointerSet
   0458 90s02r26           1536 	mov	dptr,#(_main_arr_1_1 + 0x000e)
   045B EE                 1537 	mov	a,r6
   045C F0                 1538 	movx	@dptr,a
                           1539 ;	genPointerSet
                           1540 ;     genFarPointerSet
   045D 90s02r27           1541 	mov	dptr,#(_main_arr_1_1 + 0x000f)
   0460 74 0A              1542 	mov	a,#0x0A
   0462 F0                 1543 	movx	@dptr,a
                           1544 ;	main.c:151: if(log_f==fr)
                           1545 ;	genAssign
   0463 90s02r11           1546 	mov	dptr,#_log_f
   0466 E0                 1547 	movx	a,@dptr
   0467 FE                 1548 	mov	r6,a
                           1549 ;	genAssign
   0468 90s02r05           1550 	mov	dptr,#_fr
   046B E0                 1551 	movx	a,@dptr
   046C F5*00              1552 	mov	_main_sloc0_1_0,a
   046E A3                 1553 	inc	dptr
   046F E0                 1554 	movx	a,@dptr
   0470 F5*01              1555 	mov	(_main_sloc0_1_0 + 1),a
                           1556 ;	genCast
   0472 EE                 1557 	mov	a,r6
   0473 33                 1558 	rlc	a
   0474 95 E0              1559 	subb	a,acc
   0476 F9                 1560 	mov	r1,a
                           1561 ;	genCmpEq
                           1562 ;	gencjneshort
   0477 EE                 1563 	mov	a,r6
   0478 B5*00 06           1564 	cjne	a,_main_sloc0_1_0,00195$
   047B E9                 1565 	mov	a,r1
   047C B5*01 02           1566 	cjne	a,(_main_sloc0_1_0 + 1),00195$
   047F 80 03              1567 	sjmp	00196$
   0481                    1568 00195$:
   0481 02s00rC0           1569 	ljmp	00152$
   0484                    1570 00196$:
                           1571 ;	main.c:155: if(sensor==LIGHT)
                           1572 ;	genAssign
   0484 90s02r12           1573 	mov	dptr,#_sensor
   0487 E0                 1574 	movx	a,@dptr
   0488 FE                 1575 	mov	r6,a
                           1576 ;	genCmpEq
                           1577 ;	gencjneshort
                           1578 ;	Peephole 112.b	changed ljmp to sjmp
                           1579 ;	Peephole 198.b	optimized misc jump sequence
   0489 BE 01 31           1580 	cjne	r6,#0x01,00122$
                           1581 ;	Peephole 200.b	removed redundant sjmp
                           1582 ;	Peephole 300	removed redundant label 00197$
                           1583 ;	Peephole 300	removed redundant label 00198$
                           1584 ;	main.c:158: printf_tiny("\n\n\n\n\r Log frequency- %dsec       Light : %d percent   ",fr,sensor_data[sensor]);
                           1585 ;	genPlus
                           1586 ;	Peephole 236.g	used r6 instead of ar6
   048C EE                 1587 	mov	a,r6
   048D 24r0C              1588 	add	a,#_sensor_data
   048F F5 82              1589 	mov	dpl,a
                           1590 ;	Peephole 181	changed mov to clr
   0491 E4                 1591 	clr	a
   0492 34s02              1592 	addc	a,#(_sensor_data >> 8)
   0494 F5 83              1593 	mov	dph,a
                           1594 ;	genPointerGet
                           1595 ;	genFarPointerGet
   0496 E0                 1596 	movx	a,@dptr
                           1597 ;	genCast
   0497 F9                 1598 	mov	r1,a
                           1599 ;	Peephole 105	removed redundant mov
   0498 33                 1600 	rlc	a
   0499 95 E0              1601 	subb	a,acc
   049B FF                 1602 	mov	r7,a
                           1603 ;	genIpush
   049C C0 01              1604 	push	ar1
   049E C0 07              1605 	push	ar7
                           1606 ;	genIpush
   04A0 C0*00              1607 	push	_main_sloc0_1_0
   04A2 C0*01              1608 	push	(_main_sloc0_1_0 + 1)
                           1609 ;	genIpush
   04A4 74r62              1610 	mov	a,#__str_4
   04A6 C0 E0              1611 	push	acc
   04A8 74s00              1612 	mov	a,#(__str_4 >> 8)
   04AA C0 E0              1613 	push	acc
                           1614 ;	genCall
   04AC 12s00r00           1615 	lcall	_printf_tiny
   04AF E5 81              1616 	mov	a,sp
   04B1 24 FA              1617 	add	a,#0xfa
   04B3 F5 81              1618 	mov	sp,a
                           1619 ;	main.c:159: log_f=0;
                           1620 ;	genAssign
   04B5 90s02r11           1621 	mov	dptr,#_log_f
                           1622 ;	Peephole 181	changed mov to clr
   04B8 E4                 1623 	clr	a
   04B9 F0                 1624 	movx	@dptr,a
   04BA 02s05rA5           1625 	ljmp	00173$
   04BD                    1626 00122$:
                           1627 ;	main.c:161: else  if( sensor==TEMP)
                           1628 ;	genCmpEq
                           1629 ;	gencjneshort
                           1630 ;	Peephole 112.b	changed ljmp to sjmp
                           1631 ;	Peephole 198.b	optimized misc jump sequence
   04BD BE 02 2D           1632 	cjne	r6,#0x02,00119$
                           1633 ;	Peephole 200.b	removed redundant sjmp
                           1634 ;	Peephole 300	removed redundant label 00199$
                           1635 ;	Peephole 300	removed redundant label 00200$
                           1636 ;	main.c:163: printf_tiny("\t Temparature : %d degree Celcius",sensor_data[sensor]);
                           1637 ;	genPlus
                           1638 ;	Peephole 236.g	used r6 instead of ar6
   04C0 EE                 1639 	mov	a,r6
   04C1 24r0C              1640 	add	a,#_sensor_data
   04C3 F5 82              1641 	mov	dpl,a
                           1642 ;	Peephole 181	changed mov to clr
   04C5 E4                 1643 	clr	a
   04C6 34s02              1644 	addc	a,#(_sensor_data >> 8)
   04C8 F5 83              1645 	mov	dph,a
                           1646 ;	genPointerGet
                           1647 ;	genFarPointerGet
   04CA E0                 1648 	movx	a,@dptr
                           1649 ;	genCast
   04CB FF                 1650 	mov	r7,a
                           1651 ;	Peephole 105	removed redundant mov
   04CC 33                 1652 	rlc	a
   04CD 95 E0              1653 	subb	a,acc
   04CF F8                 1654 	mov	r0,a
                           1655 ;	genIpush
   04D0 C0 07              1656 	push	ar7
   04D2 C0 00              1657 	push	ar0
                           1658 ;	genIpush
   04D4 74r99              1659 	mov	a,#__str_5
   04D6 C0 E0              1660 	push	acc
   04D8 74s00              1661 	mov	a,#(__str_5 >> 8)
   04DA C0 E0              1662 	push	acc
                           1663 ;	genCall
   04DC 12s00r00           1664 	lcall	_printf_tiny
   04DF E5 81              1665 	mov	a,sp
   04E1 24 FC              1666 	add	a,#0xfc
   04E3 F5 81              1667 	mov	sp,a
                           1668 ;	main.c:164: log_f=0;
                           1669 ;	genAssign
   04E5 90s02r11           1670 	mov	dptr,#_log_f
                           1671 ;	Peephole 181	changed mov to clr
   04E8 E4                 1672 	clr	a
   04E9 F0                 1673 	movx	@dptr,a
   04EA 02s05rA5           1674 	ljmp	00173$
   04ED                    1675 00119$:
                           1676 ;	main.c:167: else  if(sensor==HUMIDITY)
                           1677 ;	genCmpEq
                           1678 ;	gencjneshort
                           1679 ;	Peephole 112.b	changed ljmp to sjmp
                           1680 ;	Peephole 198.b	optimized misc jump sequence
   04ED BE 03 2D           1681 	cjne	r6,#0x03,00116$
                           1682 ;	Peephole 200.b	removed redundant sjmp
                           1683 ;	Peephole 300	removed redundant label 00201$
                           1684 ;	Peephole 300	removed redundant label 00202$
                           1685 ;	main.c:169: printf_tiny("\t Humidity : %d RH",sensor_data[sensor]);
                           1686 ;	genPlus
                           1687 ;	Peephole 236.g	used r6 instead of ar6
   04F0 EE                 1688 	mov	a,r6
   04F1 24r0C              1689 	add	a,#_sensor_data
   04F3 F5 82              1690 	mov	dpl,a
                           1691 ;	Peephole 181	changed mov to clr
   04F5 E4                 1692 	clr	a
   04F6 34s02              1693 	addc	a,#(_sensor_data >> 8)
   04F8 F5 83              1694 	mov	dph,a
                           1695 ;	genPointerGet
                           1696 ;	genFarPointerGet
   04FA E0                 1697 	movx	a,@dptr
                           1698 ;	genCast
   04FB FF                 1699 	mov	r7,a
                           1700 ;	Peephole 105	removed redundant mov
   04FC 33                 1701 	rlc	a
   04FD 95 E0              1702 	subb	a,acc
   04FF F8                 1703 	mov	r0,a
                           1704 ;	genIpush
   0500 C0 07              1705 	push	ar7
   0502 C0 00              1706 	push	ar0
                           1707 ;	genIpush
   0504 74rBB              1708 	mov	a,#__str_6
   0506 C0 E0              1709 	push	acc
   0508 74s00              1710 	mov	a,#(__str_6 >> 8)
   050A C0 E0              1711 	push	acc
                           1712 ;	genCall
   050C 12s00r00           1713 	lcall	_printf_tiny
   050F E5 81              1714 	mov	a,sp
   0511 24 FC              1715 	add	a,#0xfc
   0513 F5 81              1716 	mov	sp,a
                           1717 ;	main.c:170: log_f=0;
                           1718 ;	genAssign
   0515 90s02r11           1719 	mov	dptr,#_log_f
                           1720 ;	Peephole 181	changed mov to clr
   0518 E4                 1721 	clr	a
   0519 F0                 1722 	movx	@dptr,a
   051A 02s05rA5           1723 	ljmp	00173$
   051D                    1724 00116$:
                           1725 ;	main.c:172: else  if(sensor==PRESSURE)
                           1726 ;	genCmpEq
                           1727 ;	gencjneshort
   051D BE 04 02           1728 	cjne	r6,#0x04,00203$
   0520 80 03              1729 	sjmp	00204$
   0522                    1730 00203$:
   0522 02s05rA5           1731 	ljmp	00173$
   0525                    1732 00204$:
                           1733 ;	main.c:174: printf_tiny("\t Pressure %d mmHg \n\r   Time:%d:%d:%d UTC",pre,h,m,s);
                           1734 ;	genAssign
   0525 90s02r0B           1735 	mov	dptr,#_s
   0528 E0                 1736 	movx	a,@dptr
                           1737 ;	genCast
   0529 FE                 1738 	mov	r6,a
                           1739 ;	Peephole 105	removed redundant mov
   052A 33                 1740 	rlc	a
   052B 95 E0              1741 	subb	a,acc
   052D FF                 1742 	mov	r7,a
                           1743 ;	genCast
   052E ED                 1744 	mov	a,r5
   052F 33                 1745 	rlc	a
   0530 95 E0              1746 	subb	a,acc
   0532 F8                 1747 	mov	r0,a
                           1748 ;	genCast
   0533 EC                 1749 	mov	a,r4
   0534 33                 1750 	rlc	a
   0535 95 E0              1751 	subb	a,acc
   0537 F9                 1752 	mov	r1,a
                           1753 ;	genIpush
   0538 C0 06              1754 	push	ar6
   053A C0 07              1755 	push	ar7
                           1756 ;	genIpush
   053C C0 05              1757 	push	ar5
   053E C0 00              1758 	push	ar0
                           1759 ;	genIpush
   0540 C0 04              1760 	push	ar4
   0542 C0 01              1761 	push	ar1
                           1762 ;	genIpush
   0544 C0 02              1763 	push	ar2
   0546 C0 03              1764 	push	ar3
                           1765 ;	genIpush
   0548 74rCE              1766 	mov	a,#__str_7
   054A C0 E0              1767 	push	acc
   054C 74s00              1768 	mov	a,#(__str_7 >> 8)
   054E C0 E0              1769 	push	acc
                           1770 ;	genCall
   0550 12s00r00           1771 	lcall	_printf_tiny
   0553 E5 81              1772 	mov	a,sp
   0555 24 F6              1773 	add	a,#0xf6
   0557 F5 81              1774 	mov	sp,a
                           1775 ;	main.c:175: if(status=='A')
                           1776 ;	genAssign
   0559 90s02r2E           1777 	mov	dptr,#_main_status_1_1
   055C E0                 1778 	movx	a,@dptr
   055D FA                 1779 	mov	r2,a
                           1780 ;	genCmpEq
                           1781 ;	gencjneshort
                           1782 ;	Peephole 112.b	changed ljmp to sjmp
                           1783 ;	Peephole 198.b	optimized misc jump sequence
   055E BA 41 3B           1784 	cjne	r2,#0x41,00112$
                           1785 ;	Peephole 200.b	removed redundant sjmp
                           1786 ;	Peephole 300	removed redundant label 00205$
                           1787 ;	Peephole 300	removed redundant label 00206$
                           1788 ;	main.c:177: printf_tiny("\n\r Latitude %s  Longitude: %s   Date: %s   ",latitude,longitude,gps_d);
                           1789 ;	genIpush
   0561 90s02r2F           1790 	mov	dptr,#_main_gps_d_1_1
   0564 E0                 1791 	movx	a,@dptr
   0565 C0 E0              1792 	push	acc
   0567 A3                 1793 	inc	dptr
   0568 E0                 1794 	movx	a,@dptr
   0569 C0 E0              1795 	push	acc
   056B A3                 1796 	inc	dptr
   056C E0                 1797 	movx	a,@dptr
   056D C0 E0              1798 	push	acc
                           1799 ;	genIpush
   056F 90s02r2B           1800 	mov	dptr,#_main_longitude_1_1
   0572 E0                 1801 	movx	a,@dptr
   0573 C0 E0              1802 	push	acc
   0575 A3                 1803 	inc	dptr
   0576 E0                 1804 	movx	a,@dptr
   0577 C0 E0              1805 	push	acc
   0579 A3                 1806 	inc	dptr
   057A E0                 1807 	movx	a,@dptr
   057B C0 E0              1808 	push	acc
                           1809 ;	genIpush
   057D 90s02r28           1810 	mov	dptr,#_main_latitude_1_1
   0580 E0                 1811 	movx	a,@dptr
   0581 C0 E0              1812 	push	acc
   0583 A3                 1813 	inc	dptr
   0584 E0                 1814 	movx	a,@dptr
   0585 C0 E0              1815 	push	acc
   0587 A3                 1816 	inc	dptr
   0588 E0                 1817 	movx	a,@dptr
   0589 C0 E0              1818 	push	acc
                           1819 ;	genIpush
   058B 74rF8              1820 	mov	a,#__str_8
   058D C0 E0              1821 	push	acc
   058F 74s00              1822 	mov	a,#(__str_8 >> 8)
   0591 C0 E0              1823 	push	acc
                           1824 ;	genCall
   0593 12s00r00           1825 	lcall	_printf_tiny
   0596 E5 81              1826 	mov	a,sp
   0598 24 F5              1827 	add	a,#0xf5
   059A F5 81              1828 	mov	sp,a
   059C                    1829 00112$:
                           1830 ;	main.c:179: sensor=0;
                           1831 ;	genAssign
   059C 90s02r12           1832 	mov	dptr,#_sensor
                           1833 ;	Peephole 181	changed mov to clr
                           1834 ;	main.c:180: log_f=0;
                           1835 ;	genAssign
                           1836 ;	Peephole 181	changed mov to clr
                           1837 ;	Peephole 219.a	removed redundant clear
   059F E4                 1838 	clr	a
   05A0 F0                 1839 	movx	@dptr,a
   05A1 90s02r11           1840 	mov	dptr,#_log_f
   05A4 F0                 1841 	movx	@dptr,a
                           1842 ;	main.c:186: for(i=0;i<16;i++)
   05A5                    1843 00173$:
                           1844 ;	genAssign
   05A5 90s02r37           1845 	mov	dptr,#_main_sd_logf_1_1
   05A8 E0                 1846 	movx	a,@dptr
   05A9 FA                 1847 	mov	r2,a
   05AA A3                 1848 	inc	dptr
   05AB E0                 1849 	movx	a,@dptr
   05AC FB                 1850 	mov	r3,a
                           1851 ;	genAssign
   05AD 7C 00              1852 	mov	r4,#0x00
   05AF 7D 00              1853 	mov	r5,#0x00
   05B1                    1854 00154$:
                           1855 ;	genCmpLt
                           1856 ;	genCmp
   05B1 C3                 1857 	clr	c
   05B2 EC                 1858 	mov	a,r4
   05B3 94 10              1859 	subb	a,#0x10
   05B5 ED                 1860 	mov	a,r5
   05B6 64 80              1861 	xrl	a,#0x80
   05B8 94 80              1862 	subb	a,#0x80
                           1863 ;	genIfxJump
                           1864 ;	Peephole 108.a	removed ljmp by inverse jump logic
   05BA 50 2D              1865 	jnc	00186$
                           1866 ;	Peephole 300	removed redundant label 00207$
                           1867 ;	main.c:189: sd_log_data[sd_logf] =  arr[i];
                           1868 ;	genPlus
                           1869 ;	Peephole 236.g	used r2 instead of ar2
   05BC EA                 1870 	mov	a,r2
   05BD 24r00              1871 	add	a,#_sd_log_data
   05BF FE                 1872 	mov	r6,a
                           1873 ;	Peephole 236.g	used r3 instead of ar3
   05C0 EB                 1874 	mov	a,r3
   05C1 34s00              1875 	addc	a,#(_sd_log_data >> 8)
   05C3 FF                 1876 	mov	r7,a
                           1877 ;	genPlus
                           1878 ;	Peephole 236.g	used r4 instead of ar4
   05C4 EC                 1879 	mov	a,r4
   05C5 24r18              1880 	add	a,#_main_arr_1_1
   05C7 F5 82              1881 	mov	dpl,a
                           1882 ;	Peephole 236.g	used r5 instead of ar5
   05C9 ED                 1883 	mov	a,r5
   05CA 34s02              1884 	addc	a,#(_main_arr_1_1 >> 8)
   05CC F5 83              1885 	mov	dph,a
                           1886 ;	genPointerGet
                           1887 ;	genFarPointerGet
   05CE E0                 1888 	movx	a,@dptr
                           1889 ;	genPointerSet
                           1890 ;     genFarPointerSet
   05CF F8                 1891 	mov	r0,a
   05D0 8E 82              1892 	mov	dpl,r6
   05D2 8F 83              1893 	mov	dph,r7
                           1894 ;	Peephole 136	removed redundant move
   05D4 F0                 1895 	movx	@dptr,a
                           1896 ;	main.c:190: sd_logf ++;
                           1897 ;	genPlus
                           1898 ;     genPlusIncr
   05D5 0A                 1899 	inc	r2
   05D6 BA 00 01           1900 	cjne	r2,#0x00,00208$
   05D9 0B                 1901 	inc	r3
   05DA                    1902 00208$:
                           1903 ;	genAssign
   05DA 90s02r37           1904 	mov	dptr,#_main_sd_logf_1_1
   05DD EA                 1905 	mov	a,r2
   05DE F0                 1906 	movx	@dptr,a
   05DF A3                 1907 	inc	dptr
   05E0 EB                 1908 	mov	a,r3
   05E1 F0                 1909 	movx	@dptr,a
                           1910 ;	main.c:186: for(i=0;i<16;i++)
                           1911 ;	genPlus
                           1912 ;     genPlusIncr
                           1913 ;	tail increment optimized (range 9)
   05E2 0C                 1914 	inc	r4
   05E3 BC 00 CB           1915 	cjne	r4,#0x00,00154$
   05E6 0D                 1916 	inc	r5
                           1917 ;	Peephole 112.b	changed ljmp to sjmp
   05E7 80 C8              1918 	sjmp	00154$
   05E9                    1919 00186$:
                           1920 ;	genAssign
   05E9 90s02r37           1921 	mov	dptr,#_main_sd_logf_1_1
   05EC EA                 1922 	mov	a,r2
   05ED F0                 1923 	movx	@dptr,a
   05EE A3                 1924 	inc	dptr
   05EF EB                 1925 	mov	a,r3
   05F0 F0                 1926 	movx	@dptr,a
                           1927 ;	main.c:196: if(sd_logf==64)
                           1928 ;	genCmpEq
                           1929 ;	gencjneshort
   05F1 BA 40 05           1930 	cjne	r2,#0x40,00209$
   05F4 BB 00 02           1931 	cjne	r3,#0x00,00209$
   05F7 80 03              1932 	sjmp	00210$
   05F9                    1933 00209$:
   05F9 02s06rCB           1934 	ljmp	00133$
   05FC                    1935 00210$:
                           1936 ;	main.c:199: if(sd_sector[0]%2==0){printf_tiny("\n\n\n\r\t\t***************** LOGGED TO SD CARD @ address- %x %x %x 00************************** \n\n\r",sd_sector[2],sd_sector[1],sd_sector[0]);}
                           1937 ;	genPointerGet
                           1938 ;	genFarPointerGet
   05FC 90s02r00           1939 	mov	dptr,#_sd_sector
   05FF E0                 1940 	movx	a,@dptr
                           1941 ;	genAnd
   0600 FA                 1942 	mov	r2,a
                           1943 ;	Peephole 105	removed redundant mov
                           1944 ;	genIfxJump
                           1945 ;	Peephole 108.e	removed ljmp by inverse jump logic
   0601 20 E0 2D           1946 	jb	acc.0,00125$
                           1947 ;	Peephole 300	removed redundant label 00211$
                           1948 ;	genCast
   0604 7B 00              1949 	mov	r3,#0x00
                           1950 ;	genPointerGet
                           1951 ;	genFarPointerGet
   0606 90s02r01           1952 	mov	dptr,#(_sd_sector + 0x0001)
   0609 E0                 1953 	movx	a,@dptr
   060A FC                 1954 	mov	r4,a
                           1955 ;	genCast
   060B 7D 00              1956 	mov	r5,#0x00
                           1957 ;	genPointerGet
                           1958 ;	genFarPointerGet
   060D 90s02r02           1959 	mov	dptr,#(_sd_sector + 0x0002)
   0610 E0                 1960 	movx	a,@dptr
   0611 FE                 1961 	mov	r6,a
                           1962 ;	genCast
   0612 7F 00              1963 	mov	r7,#0x00
                           1964 ;	genIpush
   0614 C0 02              1965 	push	ar2
   0616 C0 03              1966 	push	ar3
                           1967 ;	genIpush
   0618 C0 04              1968 	push	ar4
   061A C0 05              1969 	push	ar5
                           1970 ;	genIpush
   061C C0 06              1971 	push	ar6
   061E C0 07              1972 	push	ar7
                           1973 ;	genIpush
   0620 74r24              1974 	mov	a,#__str_9
   0622 C0 E0              1975 	push	acc
   0624 74s01              1976 	mov	a,#(__str_9 >> 8)
   0626 C0 E0              1977 	push	acc
                           1978 ;	genCall
   0628 12s00r00           1979 	lcall	_printf_tiny
   062B E5 81              1980 	mov	a,sp
   062D 24 F8              1981 	add	a,#0xf8
   062F F5 81              1982 	mov	sp,a
   0631                    1983 00125$:
                           1984 ;	main.c:200: sd_logf=0;
                           1985 ;	genAssign
   0631 90s02r37           1986 	mov	dptr,#_main_sd_logf_1_1
   0634 E4                 1987 	clr	a
   0635 F0                 1988 	movx	@dptr,a
   0636 A3                 1989 	inc	dptr
   0637 F0                 1990 	movx	@dptr,a
                           1991 ;	main.c:201: sdcard_write_block(sd_sector,sd_log_data);
                           1992 ;	genCast
   0638 90s00r00           1993 	mov	dptr,#_sdcard_write_block_PARM_2
   063B 74r00              1994 	mov	a,#_sd_log_data
   063D F0                 1995 	movx	@dptr,a
   063E A3                 1996 	inc	dptr
   063F 74s00              1997 	mov	a,#(_sd_log_data >> 8)
   0641 F0                 1998 	movx	@dptr,a
   0642 A3                 1999 	inc	dptr
   0643 74 00              2000 	mov	a,#0x0
   0645 F0                 2001 	movx	@dptr,a
                           2002 ;	genCall
                           2003 ;	Peephole 182.a	used 16 bit load of DPTR
   0646 90s02r00           2004 	mov	dptr,#_sd_sector
   0649 75 F0 00           2005 	mov	b,#0x00
   064C 12s00r00           2006 	lcall	_sdcard_write_block
                           2007 ;	main.c:202: sd_sector[0]+=1;
                           2008 ;	genPointerGet
                           2009 ;	genFarPointerGet
   064F 90s02r00           2010 	mov	dptr,#_sd_sector
   0652 E0                 2011 	movx	a,@dptr
                           2012 ;	genPlus
                           2013 ;     genPlusIncr
                           2014 ;	Peephole 185	changed order of increment (acc incremented also!)
   0653 04                 2015 	inc	a
                           2016 ;	genPointerSet
                           2017 ;     genFarPointerSet
   0654 FA                 2018 	mov	r2,a
   0655 90s02r00           2019 	mov	dptr,#_sd_sector
                           2020 ;	Peephole 100	removed redundant mov
   0658 F0                 2021 	movx	@dptr,a
                           2022 ;	main.c:204: if(sd_sector[0]==254){sd_sector[0]=0;sd_sector[1]++;}
                           2023 ;	genCmpEq
                           2024 ;	gencjneshort
                           2025 ;	Peephole 112.b	changed ljmp to sjmp
                           2026 ;	Peephole 198.b	optimized misc jump sequence
   0659 BA FE 0F           2027 	cjne	r2,#0xFE,00127$
                           2028 ;	Peephole 200.b	removed redundant sjmp
                           2029 ;	Peephole 300	removed redundant label 00212$
                           2030 ;	Peephole 300	removed redundant label 00213$
                           2031 ;	genPointerSet
                           2032 ;     genFarPointerSet
   065C 90s02r00           2033 	mov	dptr,#_sd_sector
                           2034 ;	Peephole 181	changed mov to clr
   065F E4                 2035 	clr	a
   0660 F0                 2036 	movx	@dptr,a
                           2037 ;	genPointerGet
                           2038 ;	genFarPointerGet
   0661 90s02r01           2039 	mov	dptr,#(_sd_sector + 0x0001)
   0664 E0                 2040 	movx	a,@dptr
                           2041 ;	genPlus
                           2042 ;     genPlusIncr
                           2043 ;	Peephole 185	changed order of increment (acc incremented also!)
   0665 04                 2044 	inc	a
                           2045 ;	genPointerSet
                           2046 ;     genFarPointerSet
   0666 FA                 2047 	mov	r2,a
   0667 90s02r01           2048 	mov	dptr,#(_sd_sector + 0x0001)
                           2049 ;	Peephole 100	removed redundant mov
   066A F0                 2050 	movx	@dptr,a
   066B                    2051 00127$:
                           2052 ;	main.c:205: if(sd_sector[1]==255){sd_sector[1]=0;sd_sector[2]++;}
                           2053 ;	genPointerGet
                           2054 ;	genFarPointerGet
   066B 90s02r01           2055 	mov	dptr,#(_sd_sector + 0x0001)
   066E E0                 2056 	movx	a,@dptr
   066F FA                 2057 	mov	r2,a
                           2058 ;	genCmpEq
                           2059 ;	gencjneshort
                           2060 ;	Peephole 112.b	changed ljmp to sjmp
                           2061 ;	Peephole 198.b	optimized misc jump sequence
   0670 BA FF 0F           2062 	cjne	r2,#0xFF,00129$
                           2063 ;	Peephole 200.b	removed redundant sjmp
                           2064 ;	Peephole 300	removed redundant label 00214$
                           2065 ;	Peephole 300	removed redundant label 00215$
                           2066 ;	genPointerSet
                           2067 ;     genFarPointerSet
   0673 90s02r01           2068 	mov	dptr,#(_sd_sector + 0x0001)
                           2069 ;	Peephole 181	changed mov to clr
   0676 E4                 2070 	clr	a
   0677 F0                 2071 	movx	@dptr,a
                           2072 ;	genPointerGet
                           2073 ;	genFarPointerGet
   0678 90s02r02           2074 	mov	dptr,#(_sd_sector + 0x0002)
   067B E0                 2075 	movx	a,@dptr
                           2076 ;	genPlus
                           2077 ;     genPlusIncr
                           2078 ;	Peephole 185	changed order of increment (acc incremented also!)
   067C 04                 2079 	inc	a
                           2080 ;	genPointerSet
                           2081 ;     genFarPointerSet
   067D FA                 2082 	mov	r2,a
   067E 90s02r02           2083 	mov	dptr,#(_sd_sector + 0x0002)
                           2084 ;	Peephole 100	removed redundant mov
   0681 F0                 2085 	movx	@dptr,a
   0682                    2086 00129$:
                           2087 ;	main.c:206: if(sd_sector[2]==255){sd_sector[1]=0;sd_sector[0]==0;}
                           2088 ;	genPointerGet
                           2089 ;	genFarPointerGet
   0682 90s02r02           2090 	mov	dptr,#(_sd_sector + 0x0002)
   0685 E0                 2091 	movx	a,@dptr
   0686 FA                 2092 	mov	r2,a
                           2093 ;	genCmpEq
                           2094 ;	gencjneshort
                           2095 ;	Peephole 112.b	changed ljmp to sjmp
                           2096 ;	Peephole 198.b	optimized misc jump sequence
   0687 BA FF 05           2097 	cjne	r2,#0xFF,00131$
                           2098 ;	Peephole 200.b	removed redundant sjmp
                           2099 ;	Peephole 300	removed redundant label 00216$
                           2100 ;	Peephole 300	removed redundant label 00217$
                           2101 ;	genPointerSet
                           2102 ;     genFarPointerSet
   068A 90s02r01           2103 	mov	dptr,#(_sd_sector + 0x0001)
                           2104 ;	Peephole 181	changed mov to clr
   068D E4                 2105 	clr	a
   068E F0                 2106 	movx	@dptr,a
   068F                    2107 00131$:
                           2108 ;	main.c:211: EEPROM_WriteByte(0,sd_sector[0],0);
                           2109 ;	genPointerGet
                           2110 ;	genFarPointerGet
   068F 90s02r00           2111 	mov	dptr,#_sd_sector
   0692 E0                 2112 	movx	a,@dptr
                           2113 ;	genAssign
   0693 FA                 2114 	mov	r2,a
   0694 90s00r00           2115 	mov	dptr,#_EEPROM_WriteByte_PARM_2
                           2116 ;	Peephole 100	removed redundant mov
   0697 F0                 2117 	movx	@dptr,a
                           2118 ;	genAssign
   0698 90s00r00           2119 	mov	dptr,#_EEPROM_WriteByte_PARM_3
                           2120 ;	Peephole 181	changed mov to clr
   069B E4                 2121 	clr	a
   069C F0                 2122 	movx	@dptr,a
                           2123 ;	genCall
   069D 75 82 00           2124 	mov	dpl,#0x00
   06A0 12s00r00           2125 	lcall	_EEPROM_WriteByte
                           2126 ;	main.c:212: EEPROM_WriteByte(1,sd_sector[1],0);
                           2127 ;	genPointerGet
                           2128 ;	genFarPointerGet
   06A3 90s02r01           2129 	mov	dptr,#(_sd_sector + 0x0001)
   06A6 E0                 2130 	movx	a,@dptr
                           2131 ;	genAssign
   06A7 FA                 2132 	mov	r2,a
   06A8 90s00r00           2133 	mov	dptr,#_EEPROM_WriteByte_PARM_2
                           2134 ;	Peephole 100	removed redundant mov
   06AB F0                 2135 	movx	@dptr,a
                           2136 ;	genAssign
   06AC 90s00r00           2137 	mov	dptr,#_EEPROM_WriteByte_PARM_3
                           2138 ;	Peephole 181	changed mov to clr
   06AF E4                 2139 	clr	a
   06B0 F0                 2140 	movx	@dptr,a
                           2141 ;	genCall
   06B1 75 82 01           2142 	mov	dpl,#0x01
   06B4 12s00r00           2143 	lcall	_EEPROM_WriteByte
                           2144 ;	main.c:213: EEPROM_WriteByte(2,sd_sector[2],0);
                           2145 ;	genPointerGet
                           2146 ;	genFarPointerGet
   06B7 90s02r02           2147 	mov	dptr,#(_sd_sector + 0x0002)
   06BA E0                 2148 	movx	a,@dptr
                           2149 ;	genAssign
   06BB FA                 2150 	mov	r2,a
   06BC 90s00r00           2151 	mov	dptr,#_EEPROM_WriteByte_PARM_2
                           2152 ;	Peephole 100	removed redundant mov
   06BF F0                 2153 	movx	@dptr,a
                           2154 ;	genAssign
   06C0 90s00r00           2155 	mov	dptr,#_EEPROM_WriteByte_PARM_3
                           2156 ;	Peephole 181	changed mov to clr
   06C3 E4                 2157 	clr	a
   06C4 F0                 2158 	movx	@dptr,a
                           2159 ;	genCall
   06C5 75 82 02           2160 	mov	dpl,#0x02
   06C8 12s00r00           2161 	lcall	_EEPROM_WriteByte
   06CB                    2162 00133$:
                           2163 ;	main.c:223: if(display==LIGHT)
                           2164 ;	genAssign
   06CB 90s02r07           2165 	mov	dptr,#_display
   06CE E0                 2166 	movx	a,@dptr
   06CF FA                 2167 	mov	r2,a
   06D0 A3                 2168 	inc	dptr
   06D1 E0                 2169 	movx	a,@dptr
   06D2 FB                 2170 	mov	r3,a
                           2171 ;	genCmpEq
                           2172 ;	gencjneshort
   06D3 BA 01 05           2173 	cjne	r2,#0x01,00218$
   06D6 BB 00 02           2174 	cjne	r3,#0x00,00218$
   06D9 80 03              2175 	sjmp	00219$
   06DB                    2176 00218$:
   06DB 02s07r89           2177 	ljmp	00135$
   06DE                    2178 00219$:
                           2179 ;	main.c:225: te=sensor_data[LIGHT]/10;
                           2180 ;	genPointerGet
                           2181 ;	genFarPointerGet
   06DE 90s02r0D           2182 	mov	dptr,#(_sensor_data + 0x0001)
   06E1 E0                 2183 	movx	a,@dptr
   06E2 FA                 2184 	mov	r2,a
                           2185 ;	genDiv
                           2186 ;     genDivOneByte
   06E3 C2 D5              2187 	clr	F0
   06E5 75 F0 0A           2188 	mov	b,#0x0a
   06E8 EA                 2189 	mov	a,r2
   06E9 30 E7 04           2190 	jnb	acc.7,00220$
   06EC B2 D5              2191 	cpl	F0
   06EE F4                 2192 	cpl	a
   06EF 04                 2193 	inc	a
   06F0                    2194 00220$:
   06F0 84                 2195 	div	ab
   06F1 30 D5 02           2196 	jnb	F0,00221$
   06F4 F4                 2197 	cpl	a
   06F5 04                 2198 	inc	a
   06F6                    2199 00221$:
   06F6 FA                 2200 	mov	r2,a
   06F7 A2 D5              2201 	mov	c,F0
   06F9 95 E0              2202 	subb	a,acc
   06FB FB                 2203 	mov	r3,a
                           2204 ;	genAssign
   06FC 90s02r35           2205 	mov	dptr,#_main_te_1_1
   06FF EA                 2206 	mov	a,r2
   0700 F0                 2207 	movx	@dptr,a
   0701 A3                 2208 	inc	dptr
   0702 EB                 2209 	mov	a,r3
   0703 F0                 2210 	movx	@dptr,a
                           2211 ;	main.c:226: c[0]=ctoa(te);
                           2212 ;	genCall
   0704 8A 82              2213 	mov	dpl,r2
   0706 8B 83              2214 	mov	dph,r3
   0708 12s00r00           2215 	lcall	_ctoa
   070B AA 82              2216 	mov	r2,dpl
                           2217 ;	genPointerSet
                           2218 ;     genFarPointerSet
   070D 90s02r13           2219 	mov	dptr,#_main_c_1_1
   0710 EA                 2220 	mov	a,r2
   0711 F0                 2221 	movx	@dptr,a
                           2222 ;	main.c:227: te=sensor_data[LIGHT]-(te*10);
                           2223 ;	genPointerGet
                           2224 ;	genFarPointerGet
   0712 90s02r0D           2225 	mov	dptr,#(_sensor_data + 0x0001)
   0715 E0                 2226 	movx	a,@dptr
                           2227 ;	genCast
   0716 FA                 2228 	mov	r2,a
                           2229 ;	Peephole 105	removed redundant mov
   0717 33                 2230 	rlc	a
   0718 95 E0              2231 	subb	a,acc
   071A FB                 2232 	mov	r3,a
                           2233 ;	genAssign
   071B 90s02r35           2234 	mov	dptr,#_main_te_1_1
   071E E0                 2235 	movx	a,@dptr
   071F FC                 2236 	mov	r4,a
   0720 A3                 2237 	inc	dptr
   0721 E0                 2238 	movx	a,@dptr
   0722 FD                 2239 	mov	r5,a
                           2240 ;	genAssign
   0723 90s00r00           2241 	mov	dptr,#__mulint_PARM_2
   0726 74 0A              2242 	mov	a,#0x0A
   0728 F0                 2243 	movx	@dptr,a
   0729 E4                 2244 	clr	a
   072A A3                 2245 	inc	dptr
   072B F0                 2246 	movx	@dptr,a
                           2247 ;	genCall
   072C 8C 82              2248 	mov	dpl,r4
   072E 8D 83              2249 	mov	dph,r5
   0730 C0 02              2250 	push	ar2
   0732 C0 03              2251 	push	ar3
   0734 12s00r00           2252 	lcall	__mulint
   0737 AC 82              2253 	mov	r4,dpl
   0739 AD 83              2254 	mov	r5,dph
   073B D0 03              2255 	pop	ar3
   073D D0 02              2256 	pop	ar2
                           2257 ;	genMinus
   073F 90s02r35           2258 	mov	dptr,#_main_te_1_1
   0742 EA                 2259 	mov	a,r2
   0743 C3                 2260 	clr	c
                           2261 ;	Peephole 236.l	used r4 instead of ar4
   0744 9C                 2262 	subb	a,r4
   0745 F0                 2263 	movx	@dptr,a
   0746 EB                 2264 	mov	a,r3
                           2265 ;	Peephole 236.l	used r5 instead of ar5
   0747 9D                 2266 	subb	a,r5
   0748 A3                 2267 	inc	dptr
   0749 F0                 2268 	movx	@dptr,a
                           2269 ;	main.c:228: c[1]=ctoa(te);
                           2270 ;	genAssign
   074A 90s02r35           2271 	mov	dptr,#_main_te_1_1
   074D E0                 2272 	movx	a,@dptr
   074E FA                 2273 	mov	r2,a
   074F A3                 2274 	inc	dptr
   0750 E0                 2275 	movx	a,@dptr
   0751 FB                 2276 	mov	r3,a
                           2277 ;	genCall
   0752 8A 82              2278 	mov	dpl,r2
   0754 8B 83              2279 	mov	dph,r3
   0756 12s00r00           2280 	lcall	_ctoa
   0759 AA 82              2281 	mov	r2,dpl
                           2282 ;	genPointerSet
                           2283 ;     genFarPointerSet
   075B 90s02r14           2284 	mov	dptr,#(_main_c_1_1 + 0x0001)
   075E EA                 2285 	mov	a,r2
   075F F0                 2286 	movx	@dptr,a
                           2287 ;	main.c:229: c[2]='\0';
                           2288 ;	genPointerSet
                           2289 ;     genFarPointerSet
   0760 90s02r15           2290 	mov	dptr,#(_main_c_1_1 + 0x0002)
                           2291 ;	Peephole 181	changed mov to clr
   0763 E4                 2292 	clr	a
   0764 F0                 2293 	movx	@dptr,a
                           2294 ;	main.c:231: lcdgotoxy(2,3);
                           2295 ;	genAssign
   0765 90s00r00           2296 	mov	dptr,#_lcdgotoxy_PARM_2
   0768 74 03              2297 	mov	a,#0x03
   076A F0                 2298 	movx	@dptr,a
                           2299 ;	genCall
   076B 75 82 02           2300 	mov	dpl,#0x02
   076E 12s00r00           2301 	lcall	_lcdgotoxy
                           2302 ;	main.c:232: lcdputstr("LIGHT: ");
                           2303 ;	genCall
                           2304 ;	Peephole 182.a	used 16 bit load of DPTR
   0771 90s01r83           2305 	mov	dptr,#__str_10
   0774 75 F0 80           2306 	mov	b,#0x80
   0777 12s00r00           2307 	lcall	_lcdputstr
                           2308 ;	main.c:233: lcdputstr(c);
                           2309 ;	genCall
                           2310 ;	Peephole 182.a	used 16 bit load of DPTR
   077A 90s02r13           2311 	mov	dptr,#_main_c_1_1
   077D 75 F0 00           2312 	mov	b,#0x00
   0780 12s00r00           2313 	lcall	_lcdputstr
                           2314 ;	main.c:234: lcdputch('%');
                           2315 ;	genCall
   0783 75 82 25           2316 	mov	dpl,#0x25
   0786 12s00r00           2317 	lcall	_lcdputch
   0789                    2318 00135$:
                           2319 ;	main.c:238: if(display==TEMP)
                           2320 ;	genAssign
   0789 90s02r07           2321 	mov	dptr,#_display
   078C E0                 2322 	movx	a,@dptr
   078D FA                 2323 	mov	r2,a
   078E A3                 2324 	inc	dptr
   078F E0                 2325 	movx	a,@dptr
   0790 FB                 2326 	mov	r3,a
                           2327 ;	genCmpEq
                           2328 ;	gencjneshort
   0791 BA 02 05           2329 	cjne	r2,#0x02,00222$
   0794 BB 00 02           2330 	cjne	r3,#0x00,00222$
   0797 80 03              2331 	sjmp	00223$
   0799                    2332 00222$:
   0799 02s08r4D           2333 	ljmp	00137$
   079C                    2334 00223$:
                           2335 ;	main.c:240: te=sensor_data[TEMP]/10;
                           2336 ;	genPointerGet
                           2337 ;	genFarPointerGet
   079C 90s02r0E           2338 	mov	dptr,#(_sensor_data + 0x0002)
   079F E0                 2339 	movx	a,@dptr
   07A0 FA                 2340 	mov	r2,a
                           2341 ;	genDiv
                           2342 ;     genDivOneByte
   07A1 C2 D5              2343 	clr	F0
   07A3 75 F0 0A           2344 	mov	b,#0x0a
   07A6 EA                 2345 	mov	a,r2
   07A7 30 E7 04           2346 	jnb	acc.7,00224$
   07AA B2 D5              2347 	cpl	F0
   07AC F4                 2348 	cpl	a
   07AD 04                 2349 	inc	a
   07AE                    2350 00224$:
   07AE 84                 2351 	div	ab
   07AF 30 D5 02           2352 	jnb	F0,00225$
   07B2 F4                 2353 	cpl	a
   07B3 04                 2354 	inc	a
   07B4                    2355 00225$:
   07B4 FA                 2356 	mov	r2,a
   07B5 A2 D5              2357 	mov	c,F0
   07B7 95 E0              2358 	subb	a,acc
   07B9 FB                 2359 	mov	r3,a
                           2360 ;	genAssign
   07BA 90s02r35           2361 	mov	dptr,#_main_te_1_1
   07BD EA                 2362 	mov	a,r2
   07BE F0                 2363 	movx	@dptr,a
   07BF A3                 2364 	inc	dptr
   07C0 EB                 2365 	mov	a,r3
   07C1 F0                 2366 	movx	@dptr,a
                           2367 ;	main.c:241: c[0]=ctoa(te);
                           2368 ;	genCall
   07C2 8A 82              2369 	mov	dpl,r2
   07C4 8B 83              2370 	mov	dph,r3
   07C6 12s00r00           2371 	lcall	_ctoa
   07C9 AA 82              2372 	mov	r2,dpl
                           2373 ;	genPointerSet
                           2374 ;     genFarPointerSet
   07CB 90s02r13           2375 	mov	dptr,#_main_c_1_1
   07CE EA                 2376 	mov	a,r2
   07CF F0                 2377 	movx	@dptr,a
                           2378 ;	main.c:242: te=sensor_data[TEMP]-(te*10);
                           2379 ;	genPointerGet
                           2380 ;	genFarPointerGet
   07D0 90s02r0E           2381 	mov	dptr,#(_sensor_data + 0x0002)
   07D3 E0                 2382 	movx	a,@dptr
                           2383 ;	genCast
   07D4 FA                 2384 	mov	r2,a
                           2385 ;	Peephole 105	removed redundant mov
   07D5 33                 2386 	rlc	a
   07D6 95 E0              2387 	subb	a,acc
   07D8 FB                 2388 	mov	r3,a
                           2389 ;	genAssign
   07D9 90s02r35           2390 	mov	dptr,#_main_te_1_1
   07DC E0                 2391 	movx	a,@dptr
   07DD FC                 2392 	mov	r4,a
   07DE A3                 2393 	inc	dptr
   07DF E0                 2394 	movx	a,@dptr
   07E0 FD                 2395 	mov	r5,a
                           2396 ;	genAssign
   07E1 90s00r00           2397 	mov	dptr,#__mulint_PARM_2
   07E4 74 0A              2398 	mov	a,#0x0A
   07E6 F0                 2399 	movx	@dptr,a
   07E7 E4                 2400 	clr	a
   07E8 A3                 2401 	inc	dptr
   07E9 F0                 2402 	movx	@dptr,a
                           2403 ;	genCall
   07EA 8C 82              2404 	mov	dpl,r4
   07EC 8D 83              2405 	mov	dph,r5
   07EE C0 02              2406 	push	ar2
   07F0 C0 03              2407 	push	ar3
   07F2 12s00r00           2408 	lcall	__mulint
   07F5 AC 82              2409 	mov	r4,dpl
   07F7 AD 83              2410 	mov	r5,dph
   07F9 D0 03              2411 	pop	ar3
   07FB D0 02              2412 	pop	ar2
                           2413 ;	genMinus
   07FD 90s02r35           2414 	mov	dptr,#_main_te_1_1
   0800 EA                 2415 	mov	a,r2
   0801 C3                 2416 	clr	c
                           2417 ;	Peephole 236.l	used r4 instead of ar4
   0802 9C                 2418 	subb	a,r4
   0803 F0                 2419 	movx	@dptr,a
   0804 EB                 2420 	mov	a,r3
                           2421 ;	Peephole 236.l	used r5 instead of ar5
   0805 9D                 2422 	subb	a,r5
   0806 A3                 2423 	inc	dptr
   0807 F0                 2424 	movx	@dptr,a
                           2425 ;	main.c:243: c[1]=ctoa(te);
                           2426 ;	genAssign
   0808 90s02r35           2427 	mov	dptr,#_main_te_1_1
   080B E0                 2428 	movx	a,@dptr
   080C FA                 2429 	mov	r2,a
   080D A3                 2430 	inc	dptr
   080E E0                 2431 	movx	a,@dptr
   080F FB                 2432 	mov	r3,a
                           2433 ;	genCall
   0810 8A 82              2434 	mov	dpl,r2
   0812 8B 83              2435 	mov	dph,r3
   0814 12s00r00           2436 	lcall	_ctoa
   0817 AA 82              2437 	mov	r2,dpl
                           2438 ;	genPointerSet
                           2439 ;     genFarPointerSet
   0819 90s02r14           2440 	mov	dptr,#(_main_c_1_1 + 0x0001)
   081C EA                 2441 	mov	a,r2
   081D F0                 2442 	movx	@dptr,a
                           2443 ;	main.c:244: c[2]='\0';
                           2444 ;	genPointerSet
                           2445 ;     genFarPointerSet
   081E 90s02r15           2446 	mov	dptr,#(_main_c_1_1 + 0x0002)
                           2447 ;	Peephole 181	changed mov to clr
   0821 E4                 2448 	clr	a
   0822 F0                 2449 	movx	@dptr,a
                           2450 ;	main.c:245: lcdgotoxy(2,3);
                           2451 ;	genAssign
   0823 90s00r00           2452 	mov	dptr,#_lcdgotoxy_PARM_2
   0826 74 03              2453 	mov	a,#0x03
   0828 F0                 2454 	movx	@dptr,a
                           2455 ;	genCall
   0829 75 82 02           2456 	mov	dpl,#0x02
   082C 12s00r00           2457 	lcall	_lcdgotoxy
                           2458 ;	main.c:246: lcdputstr("TEMP: ");
                           2459 ;	genCall
                           2460 ;	Peephole 182.a	used 16 bit load of DPTR
   082F 90s01r8B           2461 	mov	dptr,#__str_11
   0832 75 F0 80           2462 	mov	b,#0x80
   0835 12s00r00           2463 	lcall	_lcdputstr
                           2464 ;	main.c:247: lcdputstr(c);
                           2465 ;	genCall
                           2466 ;	Peephole 182.a	used 16 bit load of DPTR
   0838 90s02r13           2467 	mov	dptr,#_main_c_1_1
   083B 75 F0 00           2468 	mov	b,#0x00
   083E 12s00r00           2469 	lcall	_lcdputstr
                           2470 ;	main.c:248: lcdputch(0x8D);
                           2471 ;	genCall
   0841 75 82 8D           2472 	mov	dpl,#0x8D
   0844 12s00r00           2473 	lcall	_lcdputch
                           2474 ;	main.c:249: lcdputch('C');
                           2475 ;	genCall
   0847 75 82 43           2476 	mov	dpl,#0x43
   084A 12s00r00           2477 	lcall	_lcdputch
   084D                    2478 00137$:
                           2479 ;	main.c:253: if(display==HUMIDITY)
                           2480 ;	genAssign
   084D 90s02r07           2481 	mov	dptr,#_display
   0850 E0                 2482 	movx	a,@dptr
   0851 FA                 2483 	mov	r2,a
   0852 A3                 2484 	inc	dptr
   0853 E0                 2485 	movx	a,@dptr
   0854 FB                 2486 	mov	r3,a
                           2487 ;	genCmpEq
                           2488 ;	gencjneshort
   0855 BA 03 05           2489 	cjne	r2,#0x03,00226$
   0858 BB 00 02           2490 	cjne	r3,#0x00,00226$
   085B 80 03              2491 	sjmp	00227$
   085D                    2492 00226$:
   085D 02s09r0E           2493 	ljmp	00139$
   0860                    2494 00227$:
                           2495 ;	main.c:255: te=sensor_data[HUMIDITY]/10;
                           2496 ;	genPointerGet
                           2497 ;	genFarPointerGet
   0860 90s02r0F           2498 	mov	dptr,#(_sensor_data + 0x0003)
   0863 E0                 2499 	movx	a,@dptr
   0864 FA                 2500 	mov	r2,a
                           2501 ;	genDiv
                           2502 ;     genDivOneByte
   0865 C2 D5              2503 	clr	F0
   0867 75 F0 0A           2504 	mov	b,#0x0a
   086A EA                 2505 	mov	a,r2
   086B 30 E7 04           2506 	jnb	acc.7,00228$
   086E B2 D5              2507 	cpl	F0
   0870 F4                 2508 	cpl	a
   0871 04                 2509 	inc	a
   0872                    2510 00228$:
   0872 84                 2511 	div	ab
   0873 30 D5 02           2512 	jnb	F0,00229$
   0876 F4                 2513 	cpl	a
   0877 04                 2514 	inc	a
   0878                    2515 00229$:
   0878 FA                 2516 	mov	r2,a
   0879 A2 D5              2517 	mov	c,F0
   087B 95 E0              2518 	subb	a,acc
   087D FB                 2519 	mov	r3,a
                           2520 ;	genAssign
   087E 90s02r35           2521 	mov	dptr,#_main_te_1_1
   0881 EA                 2522 	mov	a,r2
   0882 F0                 2523 	movx	@dptr,a
   0883 A3                 2524 	inc	dptr
   0884 EB                 2525 	mov	a,r3
   0885 F0                 2526 	movx	@dptr,a
                           2527 ;	main.c:256: c[0]=ctoa(te);
                           2528 ;	genCall
   0886 8A 82              2529 	mov	dpl,r2
   0888 8B 83              2530 	mov	dph,r3
   088A 12s00r00           2531 	lcall	_ctoa
   088D AA 82              2532 	mov	r2,dpl
                           2533 ;	genPointerSet
                           2534 ;     genFarPointerSet
   088F 90s02r13           2535 	mov	dptr,#_main_c_1_1
   0892 EA                 2536 	mov	a,r2
   0893 F0                 2537 	movx	@dptr,a
                           2538 ;	main.c:257: te=sensor_data[HUMIDITY]-(te*10);
                           2539 ;	genPointerGet
                           2540 ;	genFarPointerGet
   0894 90s02r0F           2541 	mov	dptr,#(_sensor_data + 0x0003)
   0897 E0                 2542 	movx	a,@dptr
                           2543 ;	genCast
   0898 FA                 2544 	mov	r2,a
                           2545 ;	Peephole 105	removed redundant mov
   0899 33                 2546 	rlc	a
   089A 95 E0              2547 	subb	a,acc
   089C FB                 2548 	mov	r3,a
                           2549 ;	genAssign
   089D 90s02r35           2550 	mov	dptr,#_main_te_1_1
   08A0 E0                 2551 	movx	a,@dptr
   08A1 FC                 2552 	mov	r4,a
   08A2 A3                 2553 	inc	dptr
   08A3 E0                 2554 	movx	a,@dptr
   08A4 FD                 2555 	mov	r5,a
                           2556 ;	genAssign
   08A5 90s00r00           2557 	mov	dptr,#__mulint_PARM_2
   08A8 74 0A              2558 	mov	a,#0x0A
   08AA F0                 2559 	movx	@dptr,a
   08AB E4                 2560 	clr	a
   08AC A3                 2561 	inc	dptr
   08AD F0                 2562 	movx	@dptr,a
                           2563 ;	genCall
   08AE 8C 82              2564 	mov	dpl,r4
   08B0 8D 83              2565 	mov	dph,r5
   08B2 C0 02              2566 	push	ar2
   08B4 C0 03              2567 	push	ar3
   08B6 12s00r00           2568 	lcall	__mulint
   08B9 AC 82              2569 	mov	r4,dpl
   08BB AD 83              2570 	mov	r5,dph
   08BD D0 03              2571 	pop	ar3
   08BF D0 02              2572 	pop	ar2
                           2573 ;	genMinus
   08C1 90s02r35           2574 	mov	dptr,#_main_te_1_1
   08C4 EA                 2575 	mov	a,r2
   08C5 C3                 2576 	clr	c
                           2577 ;	Peephole 236.l	used r4 instead of ar4
   08C6 9C                 2578 	subb	a,r4
   08C7 F0                 2579 	movx	@dptr,a
   08C8 EB                 2580 	mov	a,r3
                           2581 ;	Peephole 236.l	used r5 instead of ar5
   08C9 9D                 2582 	subb	a,r5
   08CA A3                 2583 	inc	dptr
   08CB F0                 2584 	movx	@dptr,a
                           2585 ;	main.c:258: c[1]=ctoa(te);
                           2586 ;	genAssign
   08CC 90s02r35           2587 	mov	dptr,#_main_te_1_1
   08CF E0                 2588 	movx	a,@dptr
   08D0 FA                 2589 	mov	r2,a
   08D1 A3                 2590 	inc	dptr
   08D2 E0                 2591 	movx	a,@dptr
   08D3 FB                 2592 	mov	r3,a
                           2593 ;	genCall
   08D4 8A 82              2594 	mov	dpl,r2
   08D6 8B 83              2595 	mov	dph,r3
   08D8 12s00r00           2596 	lcall	_ctoa
   08DB AA 82              2597 	mov	r2,dpl
                           2598 ;	genPointerSet
                           2599 ;     genFarPointerSet
   08DD 90s02r14           2600 	mov	dptr,#(_main_c_1_1 + 0x0001)
   08E0 EA                 2601 	mov	a,r2
   08E1 F0                 2602 	movx	@dptr,a
                           2603 ;	main.c:259: c[2]='\0';
                           2604 ;	genPointerSet
                           2605 ;     genFarPointerSet
   08E2 90s02r15           2606 	mov	dptr,#(_main_c_1_1 + 0x0002)
                           2607 ;	Peephole 181	changed mov to clr
   08E5 E4                 2608 	clr	a
   08E6 F0                 2609 	movx	@dptr,a
                           2610 ;	main.c:260: lcdgotoxy(2,2);
                           2611 ;	genAssign
   08E7 90s00r00           2612 	mov	dptr,#_lcdgotoxy_PARM_2
   08EA 74 02              2613 	mov	a,#0x02
   08EC F0                 2614 	movx	@dptr,a
                           2615 ;	genCall
   08ED 75 82 02           2616 	mov	dpl,#0x02
   08F0 12s00r00           2617 	lcall	_lcdgotoxy
                           2618 ;	main.c:261: lcdputstr("HUMIDITY: ");
                           2619 ;	genCall
                           2620 ;	Peephole 182.a	used 16 bit load of DPTR
   08F3 90s01r92           2621 	mov	dptr,#__str_12
   08F6 75 F0 80           2622 	mov	b,#0x80
   08F9 12s00r00           2623 	lcall	_lcdputstr
                           2624 ;	main.c:262: lcdputstr(c);
                           2625 ;	genCall
                           2626 ;	Peephole 182.a	used 16 bit load of DPTR
   08FC 90s02r13           2627 	mov	dptr,#_main_c_1_1
   08FF 75 F0 00           2628 	mov	b,#0x00
   0902 12s00r00           2629 	lcall	_lcdputstr
                           2630 ;	main.c:263: lcdputstr("%RH");
                           2631 ;	genCall
                           2632 ;	Peephole 182.a	used 16 bit load of DPTR
   0905 90s01r9D           2633 	mov	dptr,#__str_13
   0908 75 F0 80           2634 	mov	b,#0x80
   090B 12s00r00           2635 	lcall	_lcdputstr
   090E                    2636 00139$:
                           2637 ;	main.c:266: if(display==PRESSURE)
                           2638 ;	genAssign
   090E 90s02r07           2639 	mov	dptr,#_display
   0911 E0                 2640 	movx	a,@dptr
   0912 FA                 2641 	mov	r2,a
   0913 A3                 2642 	inc	dptr
   0914 E0                 2643 	movx	a,@dptr
   0915 FB                 2644 	mov	r3,a
                           2645 ;	genCmpEq
                           2646 ;	gencjneshort
   0916 BA 04 05           2647 	cjne	r2,#0x04,00230$
   0919 BB 00 02           2648 	cjne	r3,#0x00,00230$
   091C 80 03              2649 	sjmp	00231$
   091E                    2650 00230$:
   091E 02s0Ar03           2651 	ljmp	00141$
   0921                    2652 00231$:
                           2653 ;	main.c:268: te=PRESSURE_calibration()/100;
                           2654 ;	genCall
   0921 12s00r00           2655 	lcall	_PRESSURE_calibration
   0924 AA 82              2656 	mov	r2,dpl
   0926 AB 83              2657 	mov	r3,dph
                           2658 ;	genAssign
   0928 90s00r00           2659 	mov	dptr,#__divuint_PARM_2
   092B 74 64              2660 	mov	a,#0x64
   092D F0                 2661 	movx	@dptr,a
   092E E4                 2662 	clr	a
   092F A3                 2663 	inc	dptr
   0930 F0                 2664 	movx	@dptr,a
                           2665 ;	main.c:269: c[0]=ctoa(te);
                           2666 ;	genCall
   0931 8A 82              2667 	mov	dpl,r2
   0933 8B 83              2668 	mov	dph,r3
   0935 12s00r00           2669 	lcall	__divuint
                           2670 ;	genCall
   0938 AA 82              2671 	mov	r2,dpl
                           2672 ;	Peephole 177.d	removed redundant move
   093A AB 83              2673 	mov  r3,dph
                           2674 ;	Peephole 177.a	removed redundant mov
   093C C0 02              2675 	push	ar2
   093E C0 03              2676 	push	ar3
   0940 12s00r00           2677 	lcall	_ctoa
   0943 AC 82              2678 	mov	r4,dpl
   0945 D0 03              2679 	pop	ar3
   0947 D0 02              2680 	pop	ar2
                           2681 ;	genPointerSet
                           2682 ;     genFarPointerSet
   0949 90s02r13           2683 	mov	dptr,#_main_c_1_1
   094C EC                 2684 	mov	a,r4
   094D F0                 2685 	movx	@dptr,a
                           2686 ;	main.c:270: te=(PRESSURE_calibration()-(te*100))/10;
                           2687 ;	genCall
   094E C0 02              2688 	push	ar2
   0950 C0 03              2689 	push	ar3
   0952 12s00r00           2690 	lcall	_PRESSURE_calibration
   0955 AC 82              2691 	mov	r4,dpl
   0957 AD 83              2692 	mov	r5,dph
   0959 D0 03              2693 	pop	ar3
   095B D0 02              2694 	pop	ar2
                           2695 ;	genAssign
                           2696 ;	genAssign
   095D 90s00r00           2697 	mov	dptr,#__mulint_PARM_2
   0960 74 64              2698 	mov	a,#0x64
   0962 F0                 2699 	movx	@dptr,a
   0963 E4                 2700 	clr	a
   0964 A3                 2701 	inc	dptr
   0965 F0                 2702 	movx	@dptr,a
                           2703 ;	genCall
   0966 8A 82              2704 	mov	dpl,r2
   0968 8B 83              2705 	mov	dph,r3
   096A C0 04              2706 	push	ar4
   096C C0 05              2707 	push	ar5
   096E 12s00r00           2708 	lcall	__mulint
   0971 AA 82              2709 	mov	r2,dpl
   0973 AB 83              2710 	mov	r3,dph
   0975 D0 05              2711 	pop	ar5
   0977 D0 04              2712 	pop	ar4
                           2713 ;	genMinus
   0979 EC                 2714 	mov	a,r4
   097A C3                 2715 	clr	c
                           2716 ;	Peephole 236.l	used r2 instead of ar2
   097B 9A                 2717 	subb	a,r2
   097C FC                 2718 	mov	r4,a
   097D ED                 2719 	mov	a,r5
                           2720 ;	Peephole 236.l	used r3 instead of ar3
   097E 9B                 2721 	subb	a,r3
   097F FD                 2722 	mov	r5,a
                           2723 ;	genAssign
   0980 90s00r00           2724 	mov	dptr,#__divuint_PARM_2
   0983 74 0A              2725 	mov	a,#0x0A
   0985 F0                 2726 	movx	@dptr,a
   0986 E4                 2727 	clr	a
   0987 A3                 2728 	inc	dptr
   0988 F0                 2729 	movx	@dptr,a
                           2730 ;	main.c:271: c[1]=ctoa(te);
                           2731 ;	genCall
   0989 8C 82              2732 	mov	dpl,r4
   098B 8D 83              2733 	mov	dph,r5
   098D 12s00r00           2734 	lcall	__divuint
                           2735 ;	genCall
   0990 AA 82              2736 	mov	r2,dpl
                           2737 ;	Peephole 177.d	removed redundant move
   0992 AB 83              2738 	mov  r3,dph
                           2739 ;	Peephole 177.a	removed redundant mov
   0994 12s00r00           2740 	lcall	_ctoa
   0997 AA 82              2741 	mov	r2,dpl
                           2742 ;	genPointerSet
                           2743 ;     genFarPointerSet
   0999 90s02r14           2744 	mov	dptr,#(_main_c_1_1 + 0x0001)
   099C EA                 2745 	mov	a,r2
   099D F0                 2746 	movx	@dptr,a
                           2747 ;	main.c:272: te=(PRESSURE_calibration()%100)%10;
                           2748 ;	genCall
   099E 12s00r00           2749 	lcall	_PRESSURE_calibration
   09A1 AA 82              2750 	mov	r2,dpl
   09A3 AB 83              2751 	mov	r3,dph
                           2752 ;	genAssign
   09A5 90s00r00           2753 	mov	dptr,#__moduint_PARM_2
   09A8 74 64              2754 	mov	a,#0x64
   09AA F0                 2755 	movx	@dptr,a
   09AB E4                 2756 	clr	a
   09AC A3                 2757 	inc	dptr
   09AD F0                 2758 	movx	@dptr,a
                           2759 ;	genCall
   09AE 8A 82              2760 	mov	dpl,r2
   09B0 8B 83              2761 	mov	dph,r3
   09B2 12s00r00           2762 	lcall	__moduint
   09B5 AA 82              2763 	mov	r2,dpl
   09B7 AB 83              2764 	mov	r3,dph
                           2765 ;	genAssign
   09B9 90s00r00           2766 	mov	dptr,#__moduint_PARM_2
   09BC 74 0A              2767 	mov	a,#0x0A
   09BE F0                 2768 	movx	@dptr,a
   09BF E4                 2769 	clr	a
   09C0 A3                 2770 	inc	dptr
   09C1 F0                 2771 	movx	@dptr,a
                           2772 ;	main.c:273: c[2]=ctoa(te);
                           2773 ;	genCall
   09C2 8A 82              2774 	mov	dpl,r2
   09C4 8B 83              2775 	mov	dph,r3
   09C6 12s00r00           2776 	lcall	__moduint
                           2777 ;	genCall
   09C9 AA 82              2778 	mov	r2,dpl
                           2779 ;	Peephole 177.d	removed redundant move
   09CB AB 83              2780 	mov  r3,dph
                           2781 ;	Peephole 177.a	removed redundant mov
   09CD 12s00r00           2782 	lcall	_ctoa
   09D0 AA 82              2783 	mov	r2,dpl
                           2784 ;	genPointerSet
                           2785 ;     genFarPointerSet
   09D2 90s02r15           2786 	mov	dptr,#(_main_c_1_1 + 0x0002)
   09D5 EA                 2787 	mov	a,r2
   09D6 F0                 2788 	movx	@dptr,a
                           2789 ;	main.c:274: c[3]='\0';
                           2790 ;	genPointerSet
                           2791 ;     genFarPointerSet
   09D7 90s02r16           2792 	mov	dptr,#(_main_c_1_1 + 0x0003)
                           2793 ;	Peephole 181	changed mov to clr
   09DA E4                 2794 	clr	a
   09DB F0                 2795 	movx	@dptr,a
                           2796 ;	main.c:275: lcdgotoxy(2,1);
                           2797 ;	genAssign
   09DC 90s00r00           2798 	mov	dptr,#_lcdgotoxy_PARM_2
   09DF 74 01              2799 	mov	a,#0x01
   09E1 F0                 2800 	movx	@dptr,a
                           2801 ;	genCall
   09E2 75 82 02           2802 	mov	dpl,#0x02
   09E5 12s00r00           2803 	lcall	_lcdgotoxy
                           2804 ;	main.c:276: lcdputstr("PRES: ");
                           2805 ;	genCall
                           2806 ;	Peephole 182.a	used 16 bit load of DPTR
   09E8 90s01rA1           2807 	mov	dptr,#__str_14
   09EB 75 F0 80           2808 	mov	b,#0x80
   09EE 12s00r00           2809 	lcall	_lcdputstr
                           2810 ;	main.c:277: lcdputstr(c);
                           2811 ;	genCall
                           2812 ;	Peephole 182.a	used 16 bit load of DPTR
   09F1 90s02r13           2813 	mov	dptr,#_main_c_1_1
   09F4 75 F0 00           2814 	mov	b,#0x00
   09F7 12s00r00           2815 	lcall	_lcdputstr
                           2816 ;	main.c:278: lcdputstr("mmHg");
                           2817 ;	genCall
                           2818 ;	Peephole 182.a	used 16 bit load of DPTR
   09FA 90s01rA8           2819 	mov	dptr,#__str_15
   09FD 75 F0 80           2820 	mov	b,#0x80
   0A00 12s00r00           2821 	lcall	_lcdputstr
   0A03                    2822 00141$:
                           2823 ;	main.c:282: if(display==GPS)
                           2824 ;	genAssign
   0A03 90s02r07           2825 	mov	dptr,#_display
   0A06 E0                 2826 	movx	a,@dptr
   0A07 FA                 2827 	mov	r2,a
   0A08 A3                 2828 	inc	dptr
   0A09 E0                 2829 	movx	a,@dptr
   0A0A FB                 2830 	mov	r3,a
                           2831 ;	genCmpEq
                           2832 ;	gencjneshort
   0A0B BA 05 05           2833 	cjne	r2,#0x05,00232$
   0A0E BB 00 02           2834 	cjne	r3,#0x00,00232$
   0A11 80 03              2835 	sjmp	00233$
   0A13                    2836 00232$:
   0A13 02s00rC0           2837 	ljmp	00152$
   0A16                    2838 00233$:
                           2839 ;	main.c:286: if(status=='V')
                           2840 ;	genAssign
   0A16 90s02r2E           2841 	mov	dptr,#_main_status_1_1
   0A19 E0                 2842 	movx	a,@dptr
   0A1A FA                 2843 	mov	r2,a
                           2844 ;	genCmpEq
                           2845 ;	gencjneshort
                           2846 ;	Peephole 112.b	changed ljmp to sjmp
                           2847 ;	Peephole 198.b	optimized misc jump sequence
   0A1B BA 56 2D           2848 	cjne	r2,#0x56,00145$
                           2849 ;	Peephole 200.b	removed redundant sjmp
                           2850 ;	Peephole 300	removed redundant label 00234$
                           2851 ;	Peephole 300	removed redundant label 00235$
                           2852 ;	main.c:289: lcdgotoxy(2,1);
                           2853 ;	genAssign
   0A1E 90s00r00           2854 	mov	dptr,#_lcdgotoxy_PARM_2
   0A21 74 01              2855 	mov	a,#0x01
   0A23 F0                 2856 	movx	@dptr,a
                           2857 ;	genCall
   0A24 75 82 02           2858 	mov	dpl,#0x02
   0A27 12s00r00           2859 	lcall	_lcdgotoxy
                           2860 ;	main.c:290: lcdputstr("  GPS DATA ");
                           2861 ;	genCall
                           2862 ;	Peephole 182.a	used 16 bit load of DPTR
   0A2A 90s01rAD           2863 	mov	dptr,#__str_16
   0A2D 75 F0 80           2864 	mov	b,#0x80
   0A30 12s00r00           2865 	lcall	_lcdputstr
                           2866 ;	main.c:291: lcdgotoxy(3,1);
                           2867 ;	genAssign
   0A33 90s00r00           2868 	mov	dptr,#_lcdgotoxy_PARM_2
   0A36 74 01              2869 	mov	a,#0x01
   0A38 F0                 2870 	movx	@dptr,a
                           2871 ;	genCall
   0A39 75 82 03           2872 	mov	dpl,#0x03
   0A3C 12s00r00           2873 	lcall	_lcdgotoxy
                           2874 ;	main.c:292: lcdputstr("  Invalid  ");
                           2875 ;	genCall
                           2876 ;	Peephole 182.a	used 16 bit load of DPTR
   0A3F 90s01rB9           2877 	mov	dptr,#__str_17
   0A42 75 F0 80           2878 	mov	b,#0x80
   0A45 12s00r00           2879 	lcall	_lcdputstr
   0A48 02s00rC0           2880 	ljmp	00152$
   0A4B                    2881 00145$:
                           2882 ;	main.c:295: else if (status=='A')
                           2883 ;	genCmpEq
                           2884 ;	gencjneshort
   0A4B BA 41 02           2885 	cjne	r2,#0x41,00236$
   0A4E 80 03              2886 	sjmp	00237$
   0A50                    2887 00236$:
   0A50 02s00rC0           2888 	ljmp	00152$
   0A53                    2889 00237$:
                           2890 ;	main.c:297: lcdgotoxy(1,1);
                           2891 ;	genAssign
   0A53 90s00r00           2892 	mov	dptr,#_lcdgotoxy_PARM_2
   0A56 74 01              2893 	mov	a,#0x01
   0A58 F0                 2894 	movx	@dptr,a
                           2895 ;	genCall
   0A59 75 82 01           2896 	mov	dpl,#0x01
   0A5C 12s00r00           2897 	lcall	_lcdgotoxy
                           2898 ;	main.c:298: lcdputstr("   GPS DATA ");
                           2899 ;	genCall
                           2900 ;	Peephole 182.a	used 16 bit load of DPTR
   0A5F 90s01rC5           2901 	mov	dptr,#__str_18
   0A62 75 F0 80           2902 	mov	b,#0x80
   0A65 12s00r00           2903 	lcall	_lcdputstr
                           2904 ;	main.c:299: lcdgotoxy(2,1);
                           2905 ;	genAssign
   0A68 90s00r00           2906 	mov	dptr,#_lcdgotoxy_PARM_2
   0A6B 74 01              2907 	mov	a,#0x01
   0A6D F0                 2908 	movx	@dptr,a
                           2909 ;	genCall
   0A6E 75 82 02           2910 	mov	dpl,#0x02
   0A71 12s00r00           2911 	lcall	_lcdgotoxy
                           2912 ;	main.c:300: lcdputstr("La: ");
                           2913 ;	genCall
                           2914 ;	Peephole 182.a	used 16 bit load of DPTR
   0A74 90s01rD2           2915 	mov	dptr,#__str_19
   0A77 75 F0 80           2916 	mov	b,#0x80
   0A7A 12s00r00           2917 	lcall	_lcdputstr
                           2918 ;	main.c:301: lcdputstr(latitude);
                           2919 ;	genAssign
   0A7D 90s02r28           2920 	mov	dptr,#_main_latitude_1_1
   0A80 E0                 2921 	movx	a,@dptr
   0A81 FA                 2922 	mov	r2,a
   0A82 A3                 2923 	inc	dptr
   0A83 E0                 2924 	movx	a,@dptr
   0A84 FB                 2925 	mov	r3,a
   0A85 A3                 2926 	inc	dptr
   0A86 E0                 2927 	movx	a,@dptr
   0A87 FC                 2928 	mov	r4,a
                           2929 ;	genCall
   0A88 8A 82              2930 	mov	dpl,r2
   0A8A 8B 83              2931 	mov	dph,r3
   0A8C 8C F0              2932 	mov	b,r4
   0A8E 12s00r00           2933 	lcall	_lcdputstr
                           2934 ;	main.c:302: lcdgotoxy(3,1);
                           2935 ;	genAssign
   0A91 90s00r00           2936 	mov	dptr,#_lcdgotoxy_PARM_2
   0A94 74 01              2937 	mov	a,#0x01
   0A96 F0                 2938 	movx	@dptr,a
                           2939 ;	genCall
   0A97 75 82 03           2940 	mov	dpl,#0x03
   0A9A 12s00r00           2941 	lcall	_lcdgotoxy
                           2942 ;	main.c:303: lcdputstr("Lo: ");
                           2943 ;	genCall
                           2944 ;	Peephole 182.a	used 16 bit load of DPTR
   0A9D 90s01rD7           2945 	mov	dptr,#__str_20
   0AA0 75 F0 80           2946 	mov	b,#0x80
   0AA3 12s00r00           2947 	lcall	_lcdputstr
                           2948 ;	main.c:304: lcdputstr(longitude);
                           2949 ;	genAssign
   0AA6 90s02r2B           2950 	mov	dptr,#_main_longitude_1_1
   0AA9 E0                 2951 	movx	a,@dptr
   0AAA FA                 2952 	mov	r2,a
   0AAB A3                 2953 	inc	dptr
   0AAC E0                 2954 	movx	a,@dptr
   0AAD FB                 2955 	mov	r3,a
   0AAE A3                 2956 	inc	dptr
   0AAF E0                 2957 	movx	a,@dptr
   0AB0 FC                 2958 	mov	r4,a
                           2959 ;	genCall
   0AB1 8A 82              2960 	mov	dpl,r2
   0AB3 8B 83              2961 	mov	dph,r3
   0AB5 8C F0              2962 	mov	b,r4
   0AB7 12s00r00           2963 	lcall	_lcdputstr
   0ABA 02s00rC0           2964 	ljmp	00152$
                           2965 ;	Peephole 259.b	removed redundant label 00158$ and ret
                           2966 ;
                           2967 ;------------------------------------------------------------
                           2968 ;Allocation info for local variables in function 's_one'
                           2969 ;------------------------------------------------------------
                           2970 ;------------------------------------------------------------
                           2971 ;	main.c:335: void s_one() interrupt 0
                           2972 ;	-----------------------------------------
                           2973 ;	 function s_one
                           2974 ;	-----------------------------------------
   0ABD                    2975 _s_one:
   0ABD C0 E0              2976 	push	acc
   0ABF C0 F0              2977 	push	b
   0AC1 C0 82              2978 	push	dpl
   0AC3 C0 83              2979 	push	dph
   0AC5 C0 02              2980 	push	(0+2)
   0AC7 C0 03              2981 	push	(0+3)
   0AC9 C0 04              2982 	push	(0+4)
   0ACB C0 05              2983 	push	(0+5)
   0ACD C0 06              2984 	push	(0+6)
   0ACF C0 07              2985 	push	(0+7)
   0AD1 C0 00              2986 	push	(0+0)
   0AD3 C0 01              2987 	push	(0+1)
   0AD5 C0 D0              2988 	push	psw
   0AD7 75 D0 00           2989 	mov	psw,#0x00
                           2990 ;	main.c:337: fr++;
                           2991 ;	genAssign
   0ADA 90s02r05           2992 	mov	dptr,#_fr
   0ADD E0                 2993 	movx	a,@dptr
   0ADE FA                 2994 	mov	r2,a
   0ADF A3                 2995 	inc	dptr
   0AE0 E0                 2996 	movx	a,@dptr
   0AE1 FB                 2997 	mov	r3,a
                           2998 ;	genPlus
   0AE2 90s02r05           2999 	mov	dptr,#_fr
                           3000 ;     genPlusIncr
   0AE5 74 01              3001 	mov	a,#0x01
                           3002 ;	Peephole 236.a	used r2 instead of ar2
   0AE7 2A                 3003 	add	a,r2
   0AE8 F0                 3004 	movx	@dptr,a
                           3005 ;	Peephole 181	changed mov to clr
   0AE9 E4                 3006 	clr	a
                           3007 ;	Peephole 236.b	used r3 instead of ar3
   0AEA 3B                 3008 	addc	a,r3
   0AEB A3                 3009 	inc	dptr
   0AEC F0                 3010 	movx	@dptr,a
                           3011 ;	main.c:338: if(fr>8)
                           3012 ;	genAssign
   0AED 90s02r05           3013 	mov	dptr,#_fr
   0AF0 E0                 3014 	movx	a,@dptr
   0AF1 FA                 3015 	mov	r2,a
   0AF2 A3                 3016 	inc	dptr
   0AF3 E0                 3017 	movx	a,@dptr
   0AF4 FB                 3018 	mov	r3,a
                           3019 ;	genCmpGt
                           3020 ;	genCmp
   0AF5 C3                 3021 	clr	c
   0AF6 74 08              3022 	mov	a,#0x08
   0AF8 9A                 3023 	subb	a,r2
                           3024 ;	Peephole 181	changed mov to clr
   0AF9 E4                 3025 	clr	a
   0AFA 9B                 3026 	subb	a,r3
                           3027 ;	genIfxJump
                           3028 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0AFB 50 09              3029 	jnc	00102$
                           3030 ;	Peephole 300	removed redundant label 00106$
                           3031 ;	main.c:340: fr=1;
                           3032 ;	genAssign
   0AFD 90s02r05           3033 	mov	dptr,#_fr
   0B00 74 01              3034 	mov	a,#0x01
   0B02 F0                 3035 	movx	@dptr,a
   0B03 E4                 3036 	clr	a
   0B04 A3                 3037 	inc	dptr
   0B05 F0                 3038 	movx	@dptr,a
   0B06                    3039 00102$:
                           3040 ;	main.c:342: P1_0 = !P1_0;
                           3041 ;	genNot
   0B06 B2 90              3042 	cpl	_P1_0
                           3043 ;	main.c:343: lcdgotoxy(4,1);
                           3044 ;	genAssign
   0B08 90s00r00           3045 	mov	dptr,#_lcdgotoxy_PARM_2
   0B0B 74 01              3046 	mov	a,#0x01
   0B0D F0                 3047 	movx	@dptr,a
                           3048 ;	genCall
   0B0E 75 82 04           3049 	mov	dpl,#0x04
   0B11 12s00r00           3050 	lcall	_lcdgotoxy
                           3051 ;	main.c:344: lcdputstr("log_f:");
                           3052 ;	genCall
                           3053 ;	Peephole 182.a	used 16 bit load of DPTR
   0B14 90s01rDC           3054 	mov	dptr,#__str_21
   0B17 75 F0 80           3055 	mov	b,#0x80
   0B1A 12s00r00           3056 	lcall	_lcdputstr
                           3057 ;	main.c:345: lcdputch(ctoa(fr));
                           3058 ;	genAssign
   0B1D 90s02r05           3059 	mov	dptr,#_fr
   0B20 E0                 3060 	movx	a,@dptr
   0B21 FA                 3061 	mov	r2,a
   0B22 A3                 3062 	inc	dptr
   0B23 E0                 3063 	movx	a,@dptr
   0B24 FB                 3064 	mov	r3,a
                           3065 ;	genCall
   0B25 8A 82              3066 	mov	dpl,r2
   0B27 8B 83              3067 	mov	dph,r3
   0B29 12s00r00           3068 	lcall	_ctoa
                           3069 ;	genCall
   0B2C AA 82              3070 	mov  r2,dpl
                           3071 ;	Peephole 177.a	removed redundant mov
   0B2E 12s00r00           3072 	lcall	_lcdputch
                           3073 ;	Peephole 300	removed redundant label 00103$
   0B31 D0 D0              3074 	pop	psw
   0B33 D0 01              3075 	pop	(0+1)
   0B35 D0 00              3076 	pop	(0+0)
   0B37 D0 07              3077 	pop	(0+7)
   0B39 D0 06              3078 	pop	(0+6)
   0B3B D0 05              3079 	pop	(0+5)
   0B3D D0 04              3080 	pop	(0+4)
   0B3F D0 03              3081 	pop	(0+3)
   0B41 D0 02              3082 	pop	(0+2)
   0B43 D0 83              3083 	pop	dph
   0B45 D0 82              3084 	pop	dpl
   0B47 D0 F0              3085 	pop	b
   0B49 D0 E0              3086 	pop	acc
   0B4B 32                 3087 	reti
                           3088 ;------------------------------------------------------------
                           3089 ;Allocation info for local variables in function 's_two'
                           3090 ;------------------------------------------------------------
                           3091 ;------------------------------------------------------------
                           3092 ;	main.c:350: void s_two() interrupt 2
                           3093 ;	-----------------------------------------
                           3094 ;	 function s_two
                           3095 ;	-----------------------------------------
   0B4C                    3096 _s_two:
   0B4C C0 E0              3097 	push	acc
   0B4E C0 F0              3098 	push	b
   0B50 C0 82              3099 	push	dpl
   0B52 C0 83              3100 	push	dph
   0B54 C0 02              3101 	push	(0+2)
   0B56 C0 03              3102 	push	(0+3)
   0B58 C0 04              3103 	push	(0+4)
   0B5A C0 05              3104 	push	(0+5)
   0B5C C0 06              3105 	push	(0+6)
   0B5E C0 07              3106 	push	(0+7)
   0B60 C0 00              3107 	push	(0+0)
   0B62 C0 01              3108 	push	(0+1)
   0B64 C0 D0              3109 	push	psw
   0B66 75 D0 00           3110 	mov	psw,#0x00
                           3111 ;	main.c:352: display--;
                           3112 ;	genAssign
   0B69 90s02r07           3113 	mov	dptr,#_display
   0B6C E0                 3114 	movx	a,@dptr
   0B6D FA                 3115 	mov	r2,a
   0B6E A3                 3116 	inc	dptr
   0B6F E0                 3117 	movx	a,@dptr
   0B70 FB                 3118 	mov	r3,a
                           3119 ;	genMinus
                           3120 ;	genMinusDec
   0B71 1A                 3121 	dec	r2
   0B72 BA FF 01           3122 	cjne	r2,#0xff,00106$
   0B75 1B                 3123 	dec	r3
   0B76                    3124 00106$:
                           3125 ;	genAssign
   0B76 90s02r07           3126 	mov	dptr,#_display
   0B79 EA                 3127 	mov	a,r2
   0B7A F0                 3128 	movx	@dptr,a
   0B7B A3                 3129 	inc	dptr
   0B7C EB                 3130 	mov	a,r3
   0B7D F0                 3131 	movx	@dptr,a
                           3132 ;	main.c:353: lcdputcmd(1);
                           3133 ;	genCall
   0B7E 75 82 01           3134 	mov	dpl,#0x01
   0B81 12s00r00           3135 	lcall	_lcdputcmd
                           3136 ;	main.c:354: lcdgotoxy(4,1);
                           3137 ;	genAssign
   0B84 90s00r00           3138 	mov	dptr,#_lcdgotoxy_PARM_2
   0B87 74 01              3139 	mov	a,#0x01
   0B89 F0                 3140 	movx	@dptr,a
                           3141 ;	genCall
   0B8A 75 82 04           3142 	mov	dpl,#0x04
   0B8D 12s00r00           3143 	lcall	_lcdgotoxy
                           3144 ;	main.c:355: lcdputstr("log_f:");
                           3145 ;	genCall
                           3146 ;	Peephole 182.a	used 16 bit load of DPTR
   0B90 90s01rDC           3147 	mov	dptr,#__str_21
   0B93 75 F0 80           3148 	mov	b,#0x80
   0B96 12s00r00           3149 	lcall	_lcdputstr
                           3150 ;	main.c:356: lcdputch(ctoa(fr));
                           3151 ;	genAssign
   0B99 90s02r05           3152 	mov	dptr,#_fr
   0B9C E0                 3153 	movx	a,@dptr
   0B9D FA                 3154 	mov	r2,a
   0B9E A3                 3155 	inc	dptr
   0B9F E0                 3156 	movx	a,@dptr
   0BA0 FB                 3157 	mov	r3,a
                           3158 ;	genCall
   0BA1 8A 82              3159 	mov	dpl,r2
   0BA3 8B 83              3160 	mov	dph,r3
   0BA5 12s00r00           3161 	lcall	_ctoa
                           3162 ;	genCall
   0BA8 AA 82              3163 	mov  r2,dpl
                           3164 ;	Peephole 177.a	removed redundant mov
   0BAA 12s00r00           3165 	lcall	_lcdputch
                           3166 ;	main.c:358: if(display==0)
                           3167 ;	genAssign
   0BAD 90s02r07           3168 	mov	dptr,#_display
   0BB0 E0                 3169 	movx	a,@dptr
   0BB1 FA                 3170 	mov	r2,a
   0BB2 A3                 3171 	inc	dptr
   0BB3 E0                 3172 	movx	a,@dptr
                           3173 ;	genIfx
   0BB4 FB                 3174 	mov	r3,a
                           3175 ;	Peephole 135	removed redundant mov
   0BB5 4A                 3176 	orl	a,r2
                           3177 ;	genIfxJump
                           3178 ;	Peephole 108.b	removed ljmp by inverse jump logic
   0BB6 70 09              3179 	jnz	00103$
                           3180 ;	Peephole 300	removed redundant label 00107$
                           3181 ;	main.c:360: display=5;
                           3182 ;	genAssign
   0BB8 90s02r07           3183 	mov	dptr,#_display
   0BBB 74 05              3184 	mov	a,#0x05
   0BBD F0                 3185 	movx	@dptr,a
   0BBE E4                 3186 	clr	a
   0BBF A3                 3187 	inc	dptr
   0BC0 F0                 3188 	movx	@dptr,a
   0BC1                    3189 00103$:
   0BC1 D0 D0              3190 	pop	psw
   0BC3 D0 01              3191 	pop	(0+1)
   0BC5 D0 00              3192 	pop	(0+0)
   0BC7 D0 07              3193 	pop	(0+7)
   0BC9 D0 06              3194 	pop	(0+6)
   0BCB D0 05              3195 	pop	(0+5)
   0BCD D0 04              3196 	pop	(0+4)
   0BCF D0 03              3197 	pop	(0+3)
   0BD1 D0 02              3198 	pop	(0+2)
   0BD3 D0 83              3199 	pop	dph
   0BD5 D0 82              3200 	pop	dpl
   0BD7 D0 F0              3201 	pop	b
   0BD9 D0 E0              3202 	pop	acc
   0BDB 32                 3203 	reti
                           3204 ;------------------------------------------------------------
                           3205 ;Allocation info for local variables in function 'timer_isr'
                           3206 ;------------------------------------------------------------
                           3207 ;------------------------------------------------------------
                           3208 ;	main.c:372: void timer_isr() interrupt 1
                           3209 ;	-----------------------------------------
                           3210 ;	 function timer_isr
                           3211 ;	-----------------------------------------
   0BDC                    3212 _timer_isr:
   0BDC C0 E0              3213 	push	acc
   0BDE C0 F0              3214 	push	b
   0BE0 C0 82              3215 	push	dpl
   0BE2 C0 83              3216 	push	dph
   0BE4 C0 02              3217 	push	(0+2)
   0BE6 C0 03              3218 	push	(0+3)
   0BE8 C0 04              3219 	push	(0+4)
   0BEA C0 05              3220 	push	(0+5)
   0BEC C0 06              3221 	push	(0+6)
   0BEE C0 07              3222 	push	(0+7)
   0BF0 C0 00              3223 	push	(0+0)
   0BF2 C0 01              3224 	push	(0+1)
   0BF4 C0 D0              3225 	push	psw
   0BF6 75 D0 00           3226 	mov	psw,#0x00
                           3227 ;	main.c:376: flag++;
                           3228 ;	genAssign
   0BF9 90s00r00           3229 	mov	dptr,#_flag
   0BFC E0                 3230 	movx	a,@dptr
   0BFD FA                 3231 	mov	r2,a
                           3232 ;	genPlus
   0BFE 90s00r00           3233 	mov	dptr,#_flag
                           3234 ;     genPlusIncr
   0C01 74 01              3235 	mov	a,#0x01
                           3236 ;	Peephole 236.a	used r2 instead of ar2
   0C03 2A                 3237 	add	a,r2
   0C04 F0                 3238 	movx	@dptr,a
                           3239 ;	main.c:379: TH0 =   0x98;
                           3240 ;	genAssign
   0C05 75 8C 98           3241 	mov	_TH0,#0x98
                           3242 ;	main.c:380: TL0 =   0x00;
                           3243 ;	genAssign
   0C08 75 8A 00           3244 	mov	_TL0,#0x00
                           3245 ;	main.c:384: if(flag==20)
                           3246 ;	genAssign
   0C0B 90s00r00           3247 	mov	dptr,#_flag
   0C0E E0                 3248 	movx	a,@dptr
   0C0F FA                 3249 	mov	r2,a
                           3250 ;	genCmpEq
                           3251 ;	gencjneshort
   0C10 BA 14 02           3252 	cjne	r2,#0x14,00118$
   0C13 80 03              3253 	sjmp	00119$
   0C15                    3254 00118$:
   0C15 02s0CrC0           3255 	ljmp	00111$
   0C18                    3256 00119$:
                           3257 ;	main.c:387: log_f++;
                           3258 ;	genAssign
   0C18 90s02r11           3259 	mov	dptr,#_log_f
   0C1B E0                 3260 	movx	a,@dptr
   0C1C FA                 3261 	mov	r2,a
                           3262 ;	genPlus
   0C1D 90s02r11           3263 	mov	dptr,#_log_f
                           3264 ;     genPlusIncr
   0C20 74 01              3265 	mov	a,#0x01
                           3266 ;	Peephole 236.a	used r2 instead of ar2
   0C22 2A                 3267 	add	a,r2
   0C23 F0                 3268 	movx	@dptr,a
                           3269 ;	main.c:388: if(log_f==fr)
                           3270 ;	genAssign
   0C24 90s02r11           3271 	mov	dptr,#_log_f
   0C27 E0                 3272 	movx	a,@dptr
   0C28 FA                 3273 	mov	r2,a
                           3274 ;	genAssign
   0C29 90s02r05           3275 	mov	dptr,#_fr
   0C2C E0                 3276 	movx	a,@dptr
   0C2D FB                 3277 	mov	r3,a
   0C2E A3                 3278 	inc	dptr
   0C2F E0                 3279 	movx	a,@dptr
   0C30 FC                 3280 	mov	r4,a
                           3281 ;	genCast
   0C31 EA                 3282 	mov	a,r2
   0C32 33                 3283 	rlc	a
   0C33 95 E0              3284 	subb	a,acc
   0C35 FD                 3285 	mov	r5,a
                           3286 ;	genCmpEq
                           3287 ;	gencjneshort
   0C36 EA                 3288 	mov	a,r2
                           3289 ;	Peephole 112.b	changed ljmp to sjmp
                           3290 ;	Peephole 197.b	optimized misc jump sequence
   0C37 B5 03 10           3291 	cjne	a,ar3,00102$
   0C3A ED                 3292 	mov	a,r5
   0C3B B5 04 0C           3293 	cjne	a,ar4,00102$
                           3294 ;	Peephole 200.b	removed redundant sjmp
                           3295 ;	Peephole 300	removed redundant label 00120$
                           3296 ;	Peephole 300	removed redundant label 00121$
                           3297 ;	main.c:391: sensor++;
                           3298 ;	genAssign
   0C3E 90s02r12           3299 	mov	dptr,#_sensor
   0C41 E0                 3300 	movx	a,@dptr
   0C42 FA                 3301 	mov	r2,a
                           3302 ;	genPlus
   0C43 90s02r12           3303 	mov	dptr,#_sensor
                           3304 ;     genPlusIncr
   0C46 74 01              3305 	mov	a,#0x01
                           3306 ;	Peephole 236.a	used r2 instead of ar2
   0C48 2A                 3307 	add	a,r2
   0C49 F0                 3308 	movx	@dptr,a
   0C4A                    3309 00102$:
                           3310 ;	main.c:396: s++;
                           3311 ;	genAssign
   0C4A 90s02r0B           3312 	mov	dptr,#_s
   0C4D E0                 3313 	movx	a,@dptr
   0C4E FA                 3314 	mov	r2,a
                           3315 ;	genPlus
   0C4F 90s02r0B           3316 	mov	dptr,#_s
                           3317 ;     genPlusIncr
   0C52 74 01              3318 	mov	a,#0x01
                           3319 ;	Peephole 236.a	used r2 instead of ar2
   0C54 2A                 3320 	add	a,r2
   0C55 F0                 3321 	movx	@dptr,a
                           3322 ;	main.c:397: if(s==60){s=0;m++;}
                           3323 ;	genAssign
   0C56 90s02r0B           3324 	mov	dptr,#_s
   0C59 E0                 3325 	movx	a,@dptr
   0C5A FA                 3326 	mov	r2,a
                           3327 ;	genCmpEq
                           3328 ;	gencjneshort
                           3329 ;	Peephole 112.b	changed ljmp to sjmp
                           3330 ;	Peephole 198.b	optimized misc jump sequence
   0C5B BA 3C 11           3331 	cjne	r2,#0x3C,00104$
                           3332 ;	Peephole 200.b	removed redundant sjmp
                           3333 ;	Peephole 300	removed redundant label 00122$
                           3334 ;	Peephole 300	removed redundant label 00123$
                           3335 ;	genAssign
   0C5E 90s02r0B           3336 	mov	dptr,#_s
                           3337 ;	Peephole 181	changed mov to clr
   0C61 E4                 3338 	clr	a
   0C62 F0                 3339 	movx	@dptr,a
                           3340 ;	genAssign
   0C63 90s02r0A           3341 	mov	dptr,#_m
   0C66 E0                 3342 	movx	a,@dptr
   0C67 FA                 3343 	mov	r2,a
                           3344 ;	genPlus
   0C68 90s02r0A           3345 	mov	dptr,#_m
                           3346 ;     genPlusIncr
   0C6B 74 01              3347 	mov	a,#0x01
                           3348 ;	Peephole 236.a	used r2 instead of ar2
   0C6D 2A                 3349 	add	a,r2
   0C6E F0                 3350 	movx	@dptr,a
   0C6F                    3351 00104$:
                           3352 ;	main.c:398: if(m==60){m=0;h++;}
                           3353 ;	genAssign
   0C6F 90s02r0A           3354 	mov	dptr,#_m
   0C72 E0                 3355 	movx	a,@dptr
   0C73 FA                 3356 	mov	r2,a
                           3357 ;	genCmpEq
                           3358 ;	gencjneshort
                           3359 ;	Peephole 112.b	changed ljmp to sjmp
                           3360 ;	Peephole 198.b	optimized misc jump sequence
   0C74 BA 3C 11           3361 	cjne	r2,#0x3C,00106$
                           3362 ;	Peephole 200.b	removed redundant sjmp
                           3363 ;	Peephole 300	removed redundant label 00124$
                           3364 ;	Peephole 300	removed redundant label 00125$
                           3365 ;	genAssign
   0C77 90s02r0A           3366 	mov	dptr,#_m
                           3367 ;	Peephole 181	changed mov to clr
   0C7A E4                 3368 	clr	a
   0C7B F0                 3369 	movx	@dptr,a
                           3370 ;	genAssign
   0C7C 90s02r09           3371 	mov	dptr,#_h
   0C7F E0                 3372 	movx	a,@dptr
   0C80 FA                 3373 	mov	r2,a
                           3374 ;	genPlus
   0C81 90s02r09           3375 	mov	dptr,#_h
                           3376 ;     genPlusIncr
   0C84 74 01              3377 	mov	a,#0x01
                           3378 ;	Peephole 236.a	used r2 instead of ar2
   0C86 2A                 3379 	add	a,r2
   0C87 F0                 3380 	movx	@dptr,a
   0C88                    3381 00106$:
                           3382 ;	main.c:399: if(h==24){h=0;gps_flag=0;timeout=0;}
                           3383 ;	genAssign
   0C88 90s02r09           3384 	mov	dptr,#_h
   0C8B E0                 3385 	movx	a,@dptr
   0C8C FA                 3386 	mov	r2,a
                           3387 ;	genCmpEq
                           3388 ;	gencjneshort
                           3389 ;	Peephole 112.b	changed ljmp to sjmp
                           3390 ;	Peephole 198.b	optimized misc jump sequence
   0C8D BA 18 0D           3391 	cjne	r2,#0x18,00108$
                           3392 ;	Peephole 200.b	removed redundant sjmp
                           3393 ;	Peephole 300	removed redundant label 00126$
                           3394 ;	Peephole 300	removed redundant label 00127$
                           3395 ;	genAssign
   0C90 90s02r09           3396 	mov	dptr,#_h
                           3397 ;	Peephole 181	changed mov to clr
                           3398 ;	genAssign
                           3399 ;	Peephole 181	changed mov to clr
                           3400 ;	Peephole 219.a	removed redundant clear
                           3401 ;	genAssign
                           3402 ;	Peephole 181	changed mov to clr
   0C93 E4                 3403 	clr	a
   0C94 F0                 3404 	movx	@dptr,a
   0C95 90s02r04           3405 	mov	dptr,#_gps_flag
   0C98 F0                 3406 	movx	@dptr,a
   0C99 90s02r03           3407 	mov	dptr,#_timeout
                           3408 ;	Peephole 219.b	removed redundant clear
   0C9C F0                 3409 	movx	@dptr,a
   0C9D                    3410 00108$:
                           3411 ;	main.c:401: clock_control(h,m,s);
                           3412 ;	genAssign
   0C9D 90s02r09           3413 	mov	dptr,#_h
   0CA0 E0                 3414 	movx	a,@dptr
   0CA1 FA                 3415 	mov	r2,a
                           3416 ;	genAssign
   0CA2 90s02r0A           3417 	mov	dptr,#_m
   0CA5 E0                 3418 	movx	a,@dptr
   0CA6 FB                 3419 	mov	r3,a
                           3420 ;	genAssign
   0CA7 90s02r0B           3421 	mov	dptr,#_s
   0CAA E0                 3422 	movx	a,@dptr
   0CAB FC                 3423 	mov	r4,a
                           3424 ;	genAssign
   0CAC 90s00r00           3425 	mov	dptr,#_clock_control_PARM_2
   0CAF EB                 3426 	mov	a,r3
   0CB0 F0                 3427 	movx	@dptr,a
                           3428 ;	genAssign
   0CB1 90s00r00           3429 	mov	dptr,#_clock_control_PARM_3
   0CB4 EC                 3430 	mov	a,r4
   0CB5 F0                 3431 	movx	@dptr,a
                           3432 ;	genCall
   0CB6 8A 82              3433 	mov	dpl,r2
   0CB8 12s00r00           3434 	lcall	_clock_control
                           3435 ;	main.c:406: flag=0;
                           3436 ;	genAssign
   0CBB 90s00r00           3437 	mov	dptr,#_flag
                           3438 ;	Peephole 181	changed mov to clr
   0CBE E4                 3439 	clr	a
   0CBF F0                 3440 	movx	@dptr,a
   0CC0                    3441 00111$:
   0CC0 D0 D0              3442 	pop	psw
   0CC2 D0 01              3443 	pop	(0+1)
   0CC4 D0 00              3444 	pop	(0+0)
   0CC6 D0 07              3445 	pop	(0+7)
   0CC8 D0 06              3446 	pop	(0+6)
   0CCA D0 05              3447 	pop	(0+5)
   0CCC D0 04              3448 	pop	(0+4)
   0CCE D0 03              3449 	pop	(0+3)
   0CD0 D0 02              3450 	pop	(0+2)
   0CD2 D0 83              3451 	pop	dph
   0CD4 D0 82              3452 	pop	dpl
   0CD6 D0 F0              3453 	pop	b
   0CD8 D0 E0              3454 	pop	acc
   0CDA 32                 3455 	reti
                           3456 	.area CSEG    (CODE)
                           3457 	.area CONST   (CODE)
   0000                    3458 __str_0:
   0000 20 20 20 57 65 62  3459 	.ascii "   Web Based    "
        20 42 61 73 65 64
        20 20 20 20
   0010 00                 3460 	.db 0x00
   0011                    3461 __str_1:
   0011 20 20 20 20 20 57  3462 	.ascii "     Weather    "
        65 61 74 68 65 72
        20 20 20 20
   0021 00                 3463 	.db 0x00
   0022                    3464 __str_2:
   0022 20 4D 6F 6E 69 74  3465 	.ascii " Monitoring Sys "
        6F 72 69 6E 67 20
        53 79 73 20
   0032 00                 3466 	.db 0x00
   0033                    3467 __str_3:
   0033 0A                 3468 	.db 0x0A
   0034 0A                 3469 	.db 0x0A
   0035 0D                 3470 	.db 0x0D
   0036 47 50 53 20 54 69  3471 	.ascii "GPS Timeout; Failed to get fix on satellite"
        6D 65 6F 75 74 3B
        20 46 61 69 6C 65
        64 20 74 6F 20 67
        65 74 20 66 69 78
        20 6F 6E 20 73 61
        74 65 6C 6C 69 74
        65
   0061 00                 3472 	.db 0x00
   0062                    3473 __str_4:
   0062 0A                 3474 	.db 0x0A
   0063 0A                 3475 	.db 0x0A
   0064 0A                 3476 	.db 0x0A
   0065 0A                 3477 	.db 0x0A
   0066 0D                 3478 	.db 0x0D
   0067 20 4C 6F 67 20 66  3479 	.ascii " Log frequency- %dsec       Light : %d percent   "
        72 65 71 75 65 6E
        63 79 2D 20 25 64
        73 65 63 20 20 20
        20 20 20 20 4C 69
        67 68 74 20 3A 20
        25 64 20 70 65 72
        63 65 6E 74 20 20
        20
   0098 00                 3480 	.db 0x00
   0099                    3481 __str_5:
   0099 09                 3482 	.db 0x09
   009A 20 54 65 6D 70 61  3483 	.ascii " Temparature : %d degree Celcius"
        72 61 74 75 72 65
        20 3A 20 25 64 20
        64 65 67 72 65 65
        20 43 65 6C 63 69
        75 73
   00BA 00                 3484 	.db 0x00
   00BB                    3485 __str_6:
   00BB 09                 3486 	.db 0x09
   00BC 20 48 75 6D 69 64  3487 	.ascii " Humidity : %d RH"
        69 74 79 20 3A 20
        25 64 20 52 48
   00CD 00                 3488 	.db 0x00
   00CE                    3489 __str_7:
   00CE 09                 3490 	.db 0x09
   00CF 20 50 72 65 73 73  3491 	.ascii " Pressure %d mmHg "
        75 72 65 20 25 64
        20 6D 6D 48 67 20
   00E1 0A                 3492 	.db 0x0A
   00E2 0D                 3493 	.db 0x0D
   00E3 20 20 20 54 69 6D  3494 	.ascii "   Time:%d:%d:%d UTC"
        65 3A 25 64 3A 25
        64 3A 25 64 20 55
        54 43
   00F7 00                 3495 	.db 0x00
   00F8                    3496 __str_8:
   00F8 0A                 3497 	.db 0x0A
   00F9 0D                 3498 	.db 0x0D
   00FA 20 4C 61 74 69 74  3499 	.ascii " Latitude %s  Longitude: %s   Date: %s   "
        75 64 65 20 25 73
        20 20 4C 6F 6E 67
        69 74 75 64 65 3A
        20 25 73 20 20 20
        44 61 74 65 3A 20
        25 73 20 20 20
   0123 00                 3500 	.db 0x00
   0124                    3501 __str_9:
   0124 0A                 3502 	.db 0x0A
   0125 0A                 3503 	.db 0x0A
   0126 0A                 3504 	.db 0x0A
   0127 0D                 3505 	.db 0x0D
   0128 09                 3506 	.db 0x09
   0129 09                 3507 	.db 0x09
   012A 2A 2A 2A 2A 2A 2A  3508 	.ascii "***************** LOGGED TO SD CARD @ address- %x %x %"
        2A 2A 2A 2A 2A 2A
        2A 2A 2A 2A 2A 20
        4C 4F 47 47 45 44
        20 54 4F 20 53 44
        20 43 41 52 44 20
        40 20 61 64 64 72
        65 73 73 2D 20 25
        78 20 25 78 20 25
   0160 78 20 30 30 2A 2A  3509 	.ascii "x 00************************** "
        2A 2A 2A 2A 2A 2A
        2A 2A 2A 2A 2A 2A
        2A 2A 2A 2A 2A 2A
        2A 2A 2A 2A 2A 2A
        20
   017F 0A                 3510 	.db 0x0A
   0180 0A                 3511 	.db 0x0A
   0181 0D                 3512 	.db 0x0D
   0182 00                 3513 	.db 0x00
   0183                    3514 __str_10:
   0183 4C 49 47 48 54 3A  3515 	.ascii "LIGHT: "
        20
   018A 00                 3516 	.db 0x00
   018B                    3517 __str_11:
   018B 54 45 4D 50 3A 20  3518 	.ascii "TEMP: "
   0191 00                 3519 	.db 0x00
   0192                    3520 __str_12:
   0192 48 55 4D 49 44 49  3521 	.ascii "HUMIDITY: "
        54 59 3A 20
   019C 00                 3522 	.db 0x00
   019D                    3523 __str_13:
   019D 25 52 48           3524 	.ascii "%RH"
   01A0 00                 3525 	.db 0x00
   01A1                    3526 __str_14:
   01A1 50 52 45 53 3A 20  3527 	.ascii "PRES: "
   01A7 00                 3528 	.db 0x00
   01A8                    3529 __str_15:
   01A8 6D 6D 48 67        3530 	.ascii "mmHg"
   01AC 00                 3531 	.db 0x00
   01AD                    3532 __str_16:
   01AD 20 20 47 50 53 20  3533 	.ascii "  GPS DATA "
        44 41 54 41 20
   01B8 00                 3534 	.db 0x00
   01B9                    3535 __str_17:
   01B9 20 20 49 6E 76 61  3536 	.ascii "  Invalid  "
        6C 69 64 20 20
   01C4 00                 3537 	.db 0x00
   01C5                    3538 __str_18:
   01C5 20 20 20 47 50 53  3539 	.ascii "   GPS DATA "
        20 44 41 54 41 20
   01D1 00                 3540 	.db 0x00
   01D2                    3541 __str_19:
   01D2 4C 61 3A 20        3542 	.ascii "La: "
   01D6 00                 3543 	.db 0x00
   01D7                    3544 __str_20:
   01D7 4C 6F 3A 20        3545 	.ascii "Lo: "
   01DB 00                 3546 	.db 0x00
   01DC                    3547 __str_21:
   01DC 6C 6F 67 5F 66 3A  3548 	.ascii "log_f:"
   01E2 00                 3549 	.db 0x00
                           3550 	.area XINIT   (CODE)
   0000                    3551 __xinit__flag:
   0000 00                 3552 	.db #0x00
   0001                    3553 __xinit__date:
   0001 0C                 3554 	.db #0x0C
   0002 05                 3555 	.db #0x05
   0003 10                 3556 	.db #0x10
