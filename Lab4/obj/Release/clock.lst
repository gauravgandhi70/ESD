                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Thu Nov 24 04:45:33 2016
                              5 ;--------------------------------------------------------
                              6 	.module clock
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P5_7
                             13 	.globl _P5_6
                             14 	.globl _P5_5
                             15 	.globl _P5_4
                             16 	.globl _P5_3
                             17 	.globl _P5_2
                             18 	.globl _P5_1
                             19 	.globl _P5_0
                             20 	.globl _P4_7
                             21 	.globl _P4_6
                             22 	.globl _P4_5
                             23 	.globl _P4_4
                             24 	.globl _P4_3
                             25 	.globl _P4_2
                             26 	.globl _P4_1
                             27 	.globl _P4_0
                             28 	.globl _PX0L
                             29 	.globl _PT0L
                             30 	.globl _PX1L
                             31 	.globl _PT1L
                             32 	.globl _PLS
                             33 	.globl _PT2L
                             34 	.globl _PPCL
                             35 	.globl _EC
                             36 	.globl _CCF0
                             37 	.globl _CCF1
                             38 	.globl _CCF2
                             39 	.globl _CCF3
                             40 	.globl _CCF4
                             41 	.globl _CR
                             42 	.globl _CF
                             43 	.globl _TF2
                             44 	.globl _EXF2
                             45 	.globl _RCLK
                             46 	.globl _TCLK
                             47 	.globl _EXEN2
                             48 	.globl _TR2
                             49 	.globl _C_T2
                             50 	.globl _CP_RL2
                             51 	.globl _T2CON_7
                             52 	.globl _T2CON_6
                             53 	.globl _T2CON_5
                             54 	.globl _T2CON_4
                             55 	.globl _T2CON_3
                             56 	.globl _T2CON_2
                             57 	.globl _T2CON_1
                             58 	.globl _T2CON_0
                             59 	.globl _PT2
                             60 	.globl _ET2
                             61 	.globl _CY
                             62 	.globl _AC
                             63 	.globl _F0
                             64 	.globl _RS1
                             65 	.globl _RS0
                             66 	.globl _OV
                             67 	.globl _F1
                             68 	.globl _P
                             69 	.globl _PS
                             70 	.globl _PT1
                             71 	.globl _PX1
                             72 	.globl _PT0
                             73 	.globl _PX0
                             74 	.globl _RD
                             75 	.globl _WR
                             76 	.globl _T1
                             77 	.globl _T0
                             78 	.globl _INT1
                             79 	.globl _INT0
                             80 	.globl _TXD
                             81 	.globl _RXD
                             82 	.globl _P3_7
                             83 	.globl _P3_6
                             84 	.globl _P3_5
                             85 	.globl _P3_4
                             86 	.globl _P3_3
                             87 	.globl _P3_2
                             88 	.globl _P3_1
                             89 	.globl _P3_0
                             90 	.globl _EA
                             91 	.globl _ES
                             92 	.globl _ET1
                             93 	.globl _EX1
                             94 	.globl _ET0
                             95 	.globl _EX0
                             96 	.globl _P2_7
                             97 	.globl _P2_6
                             98 	.globl _P2_5
                             99 	.globl _P2_4
                            100 	.globl _P2_3
                            101 	.globl _P2_2
                            102 	.globl _P2_1
                            103 	.globl _P2_0
                            104 	.globl _SM0
                            105 	.globl _SM1
                            106 	.globl _SM2
                            107 	.globl _REN
                            108 	.globl _TB8
                            109 	.globl _RB8
                            110 	.globl _TI
                            111 	.globl _RI
                            112 	.globl _P1_7
                            113 	.globl _P1_6
                            114 	.globl _P1_5
                            115 	.globl _P1_4
                            116 	.globl _P1_3
                            117 	.globl _P1_2
                            118 	.globl _P1_1
                            119 	.globl _P1_0
                            120 	.globl _TF1
                            121 	.globl _TR1
                            122 	.globl _TF0
                            123 	.globl _TR0
                            124 	.globl _IE1
                            125 	.globl _IT1
                            126 	.globl _IE0
                            127 	.globl _IT0
                            128 	.globl _P0_7
                            129 	.globl _P0_6
                            130 	.globl _P0_5
                            131 	.globl _P0_4
                            132 	.globl _P0_3
                            133 	.globl _P0_2
                            134 	.globl _P0_1
                            135 	.globl _P0_0
                            136 	.globl _EECON
                            137 	.globl _KBF
                            138 	.globl _KBE
                            139 	.globl _KBLS
                            140 	.globl _BRL
                            141 	.globl _BDRCON
                            142 	.globl _T2MOD
                            143 	.globl _SPDAT
                            144 	.globl _SPSTA
                            145 	.globl _SPCON
                            146 	.globl _SADEN
                            147 	.globl _SADDR
                            148 	.globl _WDTPRG
                            149 	.globl _WDTRST
                            150 	.globl _P5
                            151 	.globl _P4
                            152 	.globl _IPH1
                            153 	.globl _IPL1
                            154 	.globl _IPH0
                            155 	.globl _IPL0
                            156 	.globl _IEN1
                            157 	.globl _IEN0
                            158 	.globl _CMOD
                            159 	.globl _CL
                            160 	.globl _CH
                            161 	.globl _CCON
                            162 	.globl _CCAPM4
                            163 	.globl _CCAPM3
                            164 	.globl _CCAPM2
                            165 	.globl _CCAPM1
                            166 	.globl _CCAPM0
                            167 	.globl _CCAP4L
                            168 	.globl _CCAP3L
                            169 	.globl _CCAP2L
                            170 	.globl _CCAP1L
                            171 	.globl _CCAP0L
                            172 	.globl _CCAP4H
                            173 	.globl _CCAP3H
                            174 	.globl _CCAP2H
                            175 	.globl _CCAP1H
                            176 	.globl _CCAP0H
                            177 	.globl _CKCKON1
                            178 	.globl _CKCKON0
                            179 	.globl _CKRL
                            180 	.globl _AUXR1
                            181 	.globl _AUXR
                            182 	.globl _TH2
                            183 	.globl _TL2
                            184 	.globl _RCAP2H
                            185 	.globl _RCAP2L
                            186 	.globl _T2CON
                            187 	.globl _B
                            188 	.globl _ACC
                            189 	.globl _PSW
                            190 	.globl _IP
                            191 	.globl _P3
                            192 	.globl _IE
                            193 	.globl _P2
                            194 	.globl _SBUF
                            195 	.globl _SCON
                            196 	.globl _P1
                            197 	.globl _TH1
                            198 	.globl _TH0
                            199 	.globl _TL1
                            200 	.globl _TL0
                            201 	.globl _TMOD
                            202 	.globl _TCON
                            203 	.globl _PCON
                            204 	.globl _DPH
                            205 	.globl _DPL
                            206 	.globl _SP
                            207 	.globl _P0
                            208 	.globl _countdown_alarm_PARM_5
                            209 	.globl _countdown_alarm_PARM_4
                            210 	.globl _countdown_alarm_PARM_3
                            211 	.globl _countdown_alarm_PARM_2
                            212 	.globl _mi
                            213 	.globl _sec
                            214 	.globl _ms
                            215 	.globl _timer_init
                            216 	.globl _clock_reset
                            217 	.globl _clock_control
                            218 	.globl _countdown_alarm
                            219 ;--------------------------------------------------------
                            220 ; special function registers
                            221 ;--------------------------------------------------------
                            222 	.area RSEG    (DATA)
                    0080    223 _P0	=	0x0080
                    0081    224 _SP	=	0x0081
                    0082    225 _DPL	=	0x0082
                    0083    226 _DPH	=	0x0083
                    0087    227 _PCON	=	0x0087
                    0088    228 _TCON	=	0x0088
                    0089    229 _TMOD	=	0x0089
                    008A    230 _TL0	=	0x008a
                    008B    231 _TL1	=	0x008b
                    008C    232 _TH0	=	0x008c
                    008D    233 _TH1	=	0x008d
                    0090    234 _P1	=	0x0090
                    0098    235 _SCON	=	0x0098
                    0099    236 _SBUF	=	0x0099
                    00A0    237 _P2	=	0x00a0
                    00A8    238 _IE	=	0x00a8
                    00B0    239 _P3	=	0x00b0
                    00B8    240 _IP	=	0x00b8
                    00D0    241 _PSW	=	0x00d0
                    00E0    242 _ACC	=	0x00e0
                    00F0    243 _B	=	0x00f0
                    00C8    244 _T2CON	=	0x00c8
                    00CA    245 _RCAP2L	=	0x00ca
                    00CB    246 _RCAP2H	=	0x00cb
                    00CC    247 _TL2	=	0x00cc
                    00CD    248 _TH2	=	0x00cd
                    008E    249 _AUXR	=	0x008e
                    00A2    250 _AUXR1	=	0x00a2
                    0097    251 _CKRL	=	0x0097
                    008F    252 _CKCKON0	=	0x008f
                    008F    253 _CKCKON1	=	0x008f
                    00FA    254 _CCAP0H	=	0x00fa
                    00FB    255 _CCAP1H	=	0x00fb
                    00FC    256 _CCAP2H	=	0x00fc
                    00FD    257 _CCAP3H	=	0x00fd
                    00FE    258 _CCAP4H	=	0x00fe
                    00EA    259 _CCAP0L	=	0x00ea
                    00EB    260 _CCAP1L	=	0x00eb
                    00EC    261 _CCAP2L	=	0x00ec
                    00ED    262 _CCAP3L	=	0x00ed
                    00EE    263 _CCAP4L	=	0x00ee
                    00DA    264 _CCAPM0	=	0x00da
                    00DB    265 _CCAPM1	=	0x00db
                    00DC    266 _CCAPM2	=	0x00dc
                    00DD    267 _CCAPM3	=	0x00dd
                    00DE    268 _CCAPM4	=	0x00de
                    00D8    269 _CCON	=	0x00d8
                    00F9    270 _CH	=	0x00f9
                    00E9    271 _CL	=	0x00e9
                    00D9    272 _CMOD	=	0x00d9
                    00A8    273 _IEN0	=	0x00a8
                    00B1    274 _IEN1	=	0x00b1
                    00B8    275 _IPL0	=	0x00b8
                    00B7    276 _IPH0	=	0x00b7
                    00B2    277 _IPL1	=	0x00b2
                    00B3    278 _IPH1	=	0x00b3
                    00C0    279 _P4	=	0x00c0
                    00D8    280 _P5	=	0x00d8
                    00A6    281 _WDTRST	=	0x00a6
                    00A7    282 _WDTPRG	=	0x00a7
                    00A9    283 _SADDR	=	0x00a9
                    00B9    284 _SADEN	=	0x00b9
                    00C3    285 _SPCON	=	0x00c3
                    00C4    286 _SPSTA	=	0x00c4
                    00C5    287 _SPDAT	=	0x00c5
                    00C9    288 _T2MOD	=	0x00c9
                    009B    289 _BDRCON	=	0x009b
                    009A    290 _BRL	=	0x009a
                    009C    291 _KBLS	=	0x009c
                    009D    292 _KBE	=	0x009d
                    009E    293 _KBF	=	0x009e
                    00D2    294 _EECON	=	0x00d2
                            295 ;--------------------------------------------------------
                            296 ; special function bits
                            297 ;--------------------------------------------------------
                            298 	.area RSEG    (DATA)
                    0080    299 _P0_0	=	0x0080
                    0081    300 _P0_1	=	0x0081
                    0082    301 _P0_2	=	0x0082
                    0083    302 _P0_3	=	0x0083
                    0084    303 _P0_4	=	0x0084
                    0085    304 _P0_5	=	0x0085
                    0086    305 _P0_6	=	0x0086
                    0087    306 _P0_7	=	0x0087
                    0088    307 _IT0	=	0x0088
                    0089    308 _IE0	=	0x0089
                    008A    309 _IT1	=	0x008a
                    008B    310 _IE1	=	0x008b
                    008C    311 _TR0	=	0x008c
                    008D    312 _TF0	=	0x008d
                    008E    313 _TR1	=	0x008e
                    008F    314 _TF1	=	0x008f
                    0090    315 _P1_0	=	0x0090
                    0091    316 _P1_1	=	0x0091
                    0092    317 _P1_2	=	0x0092
                    0093    318 _P1_3	=	0x0093
                    0094    319 _P1_4	=	0x0094
                    0095    320 _P1_5	=	0x0095
                    0096    321 _P1_6	=	0x0096
                    0097    322 _P1_7	=	0x0097
                    0098    323 _RI	=	0x0098
                    0099    324 _TI	=	0x0099
                    009A    325 _RB8	=	0x009a
                    009B    326 _TB8	=	0x009b
                    009C    327 _REN	=	0x009c
                    009D    328 _SM2	=	0x009d
                    009E    329 _SM1	=	0x009e
                    009F    330 _SM0	=	0x009f
                    00A0    331 _P2_0	=	0x00a0
                    00A1    332 _P2_1	=	0x00a1
                    00A2    333 _P2_2	=	0x00a2
                    00A3    334 _P2_3	=	0x00a3
                    00A4    335 _P2_4	=	0x00a4
                    00A5    336 _P2_5	=	0x00a5
                    00A6    337 _P2_6	=	0x00a6
                    00A7    338 _P2_7	=	0x00a7
                    00A8    339 _EX0	=	0x00a8
                    00A9    340 _ET0	=	0x00a9
                    00AA    341 _EX1	=	0x00aa
                    00AB    342 _ET1	=	0x00ab
                    00AC    343 _ES	=	0x00ac
                    00AF    344 _EA	=	0x00af
                    00B0    345 _P3_0	=	0x00b0
                    00B1    346 _P3_1	=	0x00b1
                    00B2    347 _P3_2	=	0x00b2
                    00B3    348 _P3_3	=	0x00b3
                    00B4    349 _P3_4	=	0x00b4
                    00B5    350 _P3_5	=	0x00b5
                    00B6    351 _P3_6	=	0x00b6
                    00B7    352 _P3_7	=	0x00b7
                    00B0    353 _RXD	=	0x00b0
                    00B1    354 _TXD	=	0x00b1
                    00B2    355 _INT0	=	0x00b2
                    00B3    356 _INT1	=	0x00b3
                    00B4    357 _T0	=	0x00b4
                    00B5    358 _T1	=	0x00b5
                    00B6    359 _WR	=	0x00b6
                    00B7    360 _RD	=	0x00b7
                    00B8    361 _PX0	=	0x00b8
                    00B9    362 _PT0	=	0x00b9
                    00BA    363 _PX1	=	0x00ba
                    00BB    364 _PT1	=	0x00bb
                    00BC    365 _PS	=	0x00bc
                    00D0    366 _P	=	0x00d0
                    00D1    367 _F1	=	0x00d1
                    00D2    368 _OV	=	0x00d2
                    00D3    369 _RS0	=	0x00d3
                    00D4    370 _RS1	=	0x00d4
                    00D5    371 _F0	=	0x00d5
                    00D6    372 _AC	=	0x00d6
                    00D7    373 _CY	=	0x00d7
                    00AD    374 _ET2	=	0x00ad
                    00BD    375 _PT2	=	0x00bd
                    00C8    376 _T2CON_0	=	0x00c8
                    00C9    377 _T2CON_1	=	0x00c9
                    00CA    378 _T2CON_2	=	0x00ca
                    00CB    379 _T2CON_3	=	0x00cb
                    00CC    380 _T2CON_4	=	0x00cc
                    00CD    381 _T2CON_5	=	0x00cd
                    00CE    382 _T2CON_6	=	0x00ce
                    00CF    383 _T2CON_7	=	0x00cf
                    00C8    384 _CP_RL2	=	0x00c8
                    00C9    385 _C_T2	=	0x00c9
                    00CA    386 _TR2	=	0x00ca
                    00CB    387 _EXEN2	=	0x00cb
                    00CC    388 _TCLK	=	0x00cc
                    00CD    389 _RCLK	=	0x00cd
                    00CE    390 _EXF2	=	0x00ce
                    00CF    391 _TF2	=	0x00cf
                    00DF    392 _CF	=	0x00df
                    00DE    393 _CR	=	0x00de
                    00DC    394 _CCF4	=	0x00dc
                    00DB    395 _CCF3	=	0x00db
                    00DA    396 _CCF2	=	0x00da
                    00D9    397 _CCF1	=	0x00d9
                    00D8    398 _CCF0	=	0x00d8
                    00AE    399 _EC	=	0x00ae
                    00BE    400 _PPCL	=	0x00be
                    00BD    401 _PT2L	=	0x00bd
                    00BC    402 _PLS	=	0x00bc
                    00BB    403 _PT1L	=	0x00bb
                    00BA    404 _PX1L	=	0x00ba
                    00B9    405 _PT0L	=	0x00b9
                    00B8    406 _PX0L	=	0x00b8
                    00C0    407 _P4_0	=	0x00c0
                    00C1    408 _P4_1	=	0x00c1
                    00C2    409 _P4_2	=	0x00c2
                    00C3    410 _P4_3	=	0x00c3
                    00C4    411 _P4_4	=	0x00c4
                    00C5    412 _P4_5	=	0x00c5
                    00C6    413 _P4_6	=	0x00c6
                    00C7    414 _P4_7	=	0x00c7
                    00D8    415 _P5_0	=	0x00d8
                    00D9    416 _P5_1	=	0x00d9
                    00DA    417 _P5_2	=	0x00da
                    00DB    418 _P5_3	=	0x00db
                    00DC    419 _P5_4	=	0x00dc
                    00DD    420 _P5_5	=	0x00dd
                    00DE    421 _P5_6	=	0x00de
                    00DF    422 _P5_7	=	0x00df
                            423 ;--------------------------------------------------------
                            424 ; overlayable register banks
                            425 ;--------------------------------------------------------
                            426 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     427 	.ds 8
                            428 ;--------------------------------------------------------
                            429 ; internal ram data
                            430 ;--------------------------------------------------------
                            431 	.area DSEG    (DATA)
                            432 ;--------------------------------------------------------
                            433 ; overlayable items in internal ram 
                            434 ;--------------------------------------------------------
                            435 	.area OSEG    (OVR,DATA)
                            436 ;--------------------------------------------------------
                            437 ; indirectly addressable internal ram data
                            438 ;--------------------------------------------------------
                            439 	.area ISEG    (DATA)
                            440 ;--------------------------------------------------------
                            441 ; bit data
                            442 ;--------------------------------------------------------
                            443 	.area BSEG    (BIT)
                            444 ;--------------------------------------------------------
                            445 ; paged external ram data
                            446 ;--------------------------------------------------------
                            447 	.area PSEG    (PAG,XDATA)
                            448 ;--------------------------------------------------------
                            449 ; external ram data
                            450 ;--------------------------------------------------------
                            451 	.area XSEG    (XDATA)
   0000                     452 _ms::
   0000                     453 	.ds 1
   0001                     454 _sec::
   0001                     455 	.ds 1
   0002                     456 _mi::
   0002                     457 	.ds 1
   0003                     458 _clock_control_c_1_1:
   0003                     459 	.ds 4
   0007                     460 _clock_control_t_1_1:
   0007                     461 	.ds 2
   0009                     462 _countdown_alarm_PARM_2:
   0009                     463 	.ds 2
   000B                     464 _countdown_alarm_PARM_3:
   000B                     465 	.ds 2
   000D                     466 _countdown_alarm_PARM_4:
   000D                     467 	.ds 1
   000E                     468 _countdown_alarm_PARM_5:
   000E                     469 	.ds 2
   0010                     470 _countdown_alarm_nm_1_1:
   0010                     471 	.ds 2
   0012                     472 _countdown_alarm_c_1_1:
   0012                     473 	.ds 4
                            474 ;--------------------------------------------------------
                            475 ; external initialized ram data
                            476 ;--------------------------------------------------------
                            477 	.area XISEG   (XDATA)
                            478 	.area HOME    (CODE)
                            479 	.area GSINIT0 (CODE)
                            480 	.area GSINIT1 (CODE)
                            481 	.area GSINIT2 (CODE)
                            482 	.area GSINIT3 (CODE)
                            483 	.area GSINIT4 (CODE)
                            484 	.area GSINIT5 (CODE)
                            485 	.area GSINIT  (CODE)
                            486 	.area GSFINAL (CODE)
                            487 	.area CSEG    (CODE)
                            488 ;--------------------------------------------------------
                            489 ; global & static initialisations
                            490 ;--------------------------------------------------------
                            491 	.area HOME    (CODE)
                            492 	.area GSINIT  (CODE)
                            493 	.area GSFINAL (CODE)
                            494 	.area GSINIT  (CODE)
                            495 ;--------------------------------------------------------
                            496 ; Home
                            497 ;--------------------------------------------------------
                            498 	.area HOME    (CODE)
                            499 	.area CSEG    (CODE)
                            500 ;--------------------------------------------------------
                            501 ; code
                            502 ;--------------------------------------------------------
                            503 	.area CSEG    (CODE)
                            504 ;------------------------------------------------------------
                            505 ;Allocation info for local variables in function 'timer_init'
                            506 ;------------------------------------------------------------
                            507 ;------------------------------------------------------------
                            508 ;	clock.c:30: void timer_init()
                            509 ;	-----------------------------------------
                            510 ;	 function timer_init
                            511 ;	-----------------------------------------
   0000                     512 _timer_init:
                    0002    513 	ar2 = 0x02
                    0003    514 	ar3 = 0x03
                    0004    515 	ar4 = 0x04
                    0005    516 	ar5 = 0x05
                    0006    517 	ar6 = 0x06
                    0007    518 	ar7 = 0x07
                    0000    519 	ar0 = 0x00
                    0001    520 	ar1 = 0x01
                            521 ;	clock.c:32: TMOD |= 0x01;
                            522 ;	genOr
   0000 43 89 01            523 	orl	_TMOD,#0x01
                            524 ;	clock.c:33: TH0 =   0x90;
                            525 ;	genAssign
   0003 75 8C 90            526 	mov	_TH0,#0x90
                            527 ;	clock.c:34: TL0 =   0x00;
                            528 ;	genAssign
   0006 75 8A 00            529 	mov	_TL0,#0x00
                            530 ;	clock.c:35: IPL0 =0x02;
                            531 ;	genAssign
   0009 75 B8 02            532 	mov	_IPL0,#0x02
                            533 ;	clock.c:36: IE  |= 0x83;
                            534 ;	genOr
   000C 43 A8 83            535 	orl	_IE,#0x83
                            536 ;	clock.c:37: TCON |= 0x11;
                            537 ;	genOr
   000F 43 88 11            538 	orl	_TCON,#0x11
                            539 ;	Peephole 300	removed redundant label 00101$
   0012 22                  540 	ret
                            541 ;------------------------------------------------------------
                            542 ;Allocation info for local variables in function 'clock_reset'
                            543 ;------------------------------------------------------------
                            544 ;------------------------------------------------------------
                            545 ;	clock.c:50: void clock_reset()
                            546 ;	-----------------------------------------
                            547 ;	 function clock_reset
                            548 ;	-----------------------------------------
   0013                     549 _clock_reset:
                            550 ;	clock.c:52: ms=0;sec=0;mi=0;
                            551 ;	genAssign
   0013 90s00r00            552 	mov	dptr,#_ms
                            553 ;	Peephole 181	changed mov to clr
                            554 ;	genAssign
                            555 ;	Peephole 181	changed mov to clr
                            556 ;	Peephole 219.a	removed redundant clear
                            557 ;	genAssign
                            558 ;	Peephole 181	changed mov to clr
   0016 E4                  559 	clr	a
   0017 F0                  560 	movx	@dptr,a
   0018 90s00r01            561 	mov	dptr,#_sec
   001B F0                  562 	movx	@dptr,a
   001C 90s00r02            563 	mov	dptr,#_mi
                            564 ;	Peephole 219.b	removed redundant clear
   001F F0                  565 	movx	@dptr,a
                            566 ;	Peephole 300	removed redundant label 00101$
   0020 22                  567 	ret
                            568 ;------------------------------------------------------------
                            569 ;Allocation info for local variables in function 'clock_control'
                            570 ;------------------------------------------------------------
                            571 ;c                         Allocated with name '_clock_control_c_1_1'
                            572 ;t                         Allocated with name '_clock_control_t_1_1'
                            573 ;------------------------------------------------------------
                            574 ;	clock.c:67: void clock_control() __critical
                            575 ;	-----------------------------------------
                            576 ;	 function clock_control
                            577 ;	-----------------------------------------
   0021                     578 _clock_control:
   0021 D3                  579 	setb	c
   0022 10 AF 01            580 	jbc	ea,00112$
   0025 C3                  581 	clr	c
   0026                     582 00112$:
   0026 C0 D0               583 	push	psw
                            584 ;	clock.c:73: ms++;
                            585 ;	genAssign
   0028 90s00r00            586 	mov	dptr,#_ms
   002B E0                  587 	movx	a,@dptr
   002C FA                  588 	mov	r2,a
                            589 ;	genPlus
   002D 90s00r00            590 	mov	dptr,#_ms
                            591 ;     genPlusIncr
   0030 74 01               592 	mov	a,#0x01
                            593 ;	Peephole 236.a	used r2 instead of ar2
   0032 2A                  594 	add	a,r2
   0033 F0                  595 	movx	@dptr,a
                            596 ;	clock.c:74: if(ms==10){ms=0;sec++;}
                            597 ;	genAssign
   0034 90s00r00            598 	mov	dptr,#_ms
   0037 E0                  599 	movx	a,@dptr
   0038 FA                  600 	mov	r2,a
                            601 ;	genCmpEq
                            602 ;	gencjneshort
                            603 ;	Peephole 112.b	changed ljmp to sjmp
                            604 ;	Peephole 198.b	optimized misc jump sequence
   0039 BA 0A 11            605 	cjne	r2,#0x0A,00102$
                            606 ;	Peephole 200.b	removed redundant sjmp
                            607 ;	Peephole 300	removed redundant label 00113$
                            608 ;	Peephole 300	removed redundant label 00114$
                            609 ;	genAssign
   003C 90s00r00            610 	mov	dptr,#_ms
                            611 ;	Peephole 181	changed mov to clr
   003F E4                  612 	clr	a
   0040 F0                  613 	movx	@dptr,a
                            614 ;	genAssign
   0041 90s00r01            615 	mov	dptr,#_sec
   0044 E0                  616 	movx	a,@dptr
   0045 FA                  617 	mov	r2,a
                            618 ;	genPlus
   0046 90s00r01            619 	mov	dptr,#_sec
                            620 ;     genPlusIncr
   0049 74 01               621 	mov	a,#0x01
                            622 ;	Peephole 236.a	used r2 instead of ar2
   004B 2A                  623 	add	a,r2
   004C F0                  624 	movx	@dptr,a
   004D                     625 00102$:
                            626 ;	clock.c:75: c[0]=ctoa(ms);                          // Convdert the character into ascii value to print on the LCD
                            627 ;	genAssign
   004D 90s00r00            628 	mov	dptr,#_ms
   0050 E0                  629 	movx	a,@dptr
                            630 ;	genCast
   0051 FA                  631 	mov	r2,a
                            632 ;	Peephole 105	removed redundant mov
   0052 33                  633 	rlc	a
   0053 95 E0               634 	subb	a,acc
   0055 FB                  635 	mov	r3,a
                            636 ;	genCall
   0056 8A 82               637 	mov	dpl,r2
   0058 8B 83               638 	mov	dph,r3
   005A 12s00r00            639 	lcall	_ctoa
   005D AA 82               640 	mov	r2,dpl
                            641 ;	genPointerSet
                            642 ;     genFarPointerSet
   005F 90s00r03            643 	mov	dptr,#_clock_control_c_1_1
   0062 EA                  644 	mov	a,r2
   0063 F0                  645 	movx	@dptr,a
                            646 ;	clock.c:76: lcdgotoxy(4,16);                        // Specifybthe location every time before print
                            647 ;	genAssign
   0064 90s00r00            648 	mov	dptr,#_lcdgotoxy_PARM_2
   0067 74 10               649 	mov	a,#0x10
   0069 F0                  650 	movx	@dptr,a
                            651 ;	genCall
   006A 75 82 04            652 	mov	dpl,#0x04
   006D 12s00r00            653 	lcall	_lcdgotoxy
                            654 ;	clock.c:77: lcdputch(c[0]);
                            655 ;	genPointerGet
                            656 ;	genFarPointerGet
   0070 90s00r03            657 	mov	dptr,#_clock_control_c_1_1
   0073 E0                  658 	movx	a,@dptr
                            659 ;	genCall
   0074 FA                  660 	mov	r2,a
                            661 ;	Peephole 244.c	loading dpl from a instead of r2
   0075 F5 82               662 	mov	dpl,a
   0077 12s00r00            663 	lcall	_lcdputch
                            664 ;	clock.c:79: if(sec==60){sec=0;mi++;}
                            665 ;	genAssign
   007A 90s00r01            666 	mov	dptr,#_sec
   007D E0                  667 	movx	a,@dptr
   007E FA                  668 	mov	r2,a
                            669 ;	genCmpEq
                            670 ;	gencjneshort
                            671 ;	Peephole 112.b	changed ljmp to sjmp
                            672 ;	Peephole 198.b	optimized misc jump sequence
   007F BA 3C 11            673 	cjne	r2,#0x3C,00104$
                            674 ;	Peephole 200.b	removed redundant sjmp
                            675 ;	Peephole 300	removed redundant label 00115$
                            676 ;	Peephole 300	removed redundant label 00116$
                            677 ;	genAssign
   0082 90s00r01            678 	mov	dptr,#_sec
                            679 ;	Peephole 181	changed mov to clr
   0085 E4                  680 	clr	a
   0086 F0                  681 	movx	@dptr,a
                            682 ;	genAssign
   0087 90s00r02            683 	mov	dptr,#_mi
   008A E0                  684 	movx	a,@dptr
   008B FA                  685 	mov	r2,a
                            686 ;	genPlus
   008C 90s00r02            687 	mov	dptr,#_mi
                            688 ;     genPlusIncr
   008F 74 01               689 	mov	a,#0x01
                            690 ;	Peephole 236.a	used r2 instead of ar2
   0091 2A                  691 	add	a,r2
   0092 F0                  692 	movx	@dptr,a
   0093                     693 00104$:
                            694 ;	clock.c:80: t=sec/10;
                            695 ;	genAssign
   0093 90s00r01            696 	mov	dptr,#_sec
   0096 E0                  697 	movx	a,@dptr
   0097 FA                  698 	mov	r2,a
                            699 ;	genDiv
                            700 ;     genDivOneByte
   0098 C2 D5               701 	clr	F0
   009A 75 F0 0A            702 	mov	b,#0x0a
   009D EA                  703 	mov	a,r2
   009E 30 E7 04            704 	jnb	acc.7,00117$
   00A1 B2 D5               705 	cpl	F0
   00A3 F4                  706 	cpl	a
   00A4 04                  707 	inc	a
   00A5                     708 00117$:
   00A5 84                  709 	div	ab
   00A6 30 D5 02            710 	jnb	F0,00118$
   00A9 F4                  711 	cpl	a
   00AA 04                  712 	inc	a
   00AB                     713 00118$:
   00AB FA                  714 	mov	r2,a
   00AC A2 D5               715 	mov	c,F0
   00AE 95 E0               716 	subb	a,acc
   00B0 FB                  717 	mov	r3,a
                            718 ;	genAssign
   00B1 90s00r07            719 	mov	dptr,#_clock_control_t_1_1
   00B4 EA                  720 	mov	a,r2
   00B5 F0                  721 	movx	@dptr,a
   00B6 A3                  722 	inc	dptr
   00B7 EB                  723 	mov	a,r3
   00B8 F0                  724 	movx	@dptr,a
                            725 ;	clock.c:81: c[0]=ctoa(t);                           // Convdert the number into ascii value to print on the LCD
                            726 ;	genCall
   00B9 8A 82               727 	mov	dpl,r2
   00BB 8B 83               728 	mov	dph,r3
   00BD 12s00r00            729 	lcall	_ctoa
   00C0 AA 82               730 	mov	r2,dpl
                            731 ;	genPointerSet
                            732 ;     genFarPointerSet
   00C2 90s00r03            733 	mov	dptr,#_clock_control_c_1_1
   00C5 EA                  734 	mov	a,r2
   00C6 F0                  735 	movx	@dptr,a
                            736 ;	clock.c:82: t=sec-(t*10);
                            737 ;	genAssign
   00C7 90s00r01            738 	mov	dptr,#_sec
   00CA E0                  739 	movx	a,@dptr
                            740 ;	genCast
   00CB FA                  741 	mov	r2,a
                            742 ;	Peephole 105	removed redundant mov
   00CC 33                  743 	rlc	a
   00CD 95 E0               744 	subb	a,acc
   00CF FB                  745 	mov	r3,a
                            746 ;	genAssign
   00D0 90s00r07            747 	mov	dptr,#_clock_control_t_1_1
   00D3 E0                  748 	movx	a,@dptr
   00D4 FC                  749 	mov	r4,a
   00D5 A3                  750 	inc	dptr
   00D6 E0                  751 	movx	a,@dptr
   00D7 FD                  752 	mov	r5,a
                            753 ;	genAssign
   00D8 90s00r00            754 	mov	dptr,#__mulint_PARM_2
   00DB 74 0A               755 	mov	a,#0x0A
   00DD F0                  756 	movx	@dptr,a
   00DE E4                  757 	clr	a
   00DF A3                  758 	inc	dptr
   00E0 F0                  759 	movx	@dptr,a
                            760 ;	genCall
   00E1 8C 82               761 	mov	dpl,r4
   00E3 8D 83               762 	mov	dph,r5
   00E5 C0 02               763 	push	ar2
   00E7 C0 03               764 	push	ar3
   00E9 12s00r00            765 	lcall	__mulint
   00EC AC 82               766 	mov	r4,dpl
   00EE AD 83               767 	mov	r5,dph
   00F0 D0 03               768 	pop	ar3
   00F2 D0 02               769 	pop	ar2
                            770 ;	genMinus
   00F4 90s00r07            771 	mov	dptr,#_clock_control_t_1_1
   00F7 EA                  772 	mov	a,r2
   00F8 C3                  773 	clr	c
                            774 ;	Peephole 236.l	used r4 instead of ar4
   00F9 9C                  775 	subb	a,r4
   00FA F0                  776 	movx	@dptr,a
   00FB EB                  777 	mov	a,r3
                            778 ;	Peephole 236.l	used r5 instead of ar5
   00FC 9D                  779 	subb	a,r5
   00FD A3                  780 	inc	dptr
   00FE F0                  781 	movx	@dptr,a
                            782 ;	clock.c:83: c[1]=ctoa(t);
                            783 ;	genAssign
   00FF 90s00r07            784 	mov	dptr,#_clock_control_t_1_1
   0102 E0                  785 	movx	a,@dptr
   0103 FA                  786 	mov	r2,a
   0104 A3                  787 	inc	dptr
   0105 E0                  788 	movx	a,@dptr
   0106 FB                  789 	mov	r3,a
                            790 ;	genCall
   0107 8A 82               791 	mov	dpl,r2
   0109 8B 83               792 	mov	dph,r3
   010B 12s00r00            793 	lcall	_ctoa
   010E AA 82               794 	mov	r2,dpl
                            795 ;	genPointerSet
                            796 ;     genFarPointerSet
   0110 90s00r04            797 	mov	dptr,#(_clock_control_c_1_1 + 0x0001)
   0113 EA                  798 	mov	a,r2
   0114 F0                  799 	movx	@dptr,a
                            800 ;	clock.c:84: c[2]='\0';
                            801 ;	genPointerSet
                            802 ;     genFarPointerSet
   0115 90s00r05            803 	mov	dptr,#(_clock_control_c_1_1 + 0x0002)
                            804 ;	Peephole 181	changed mov to clr
   0118 E4                  805 	clr	a
   0119 F0                  806 	movx	@dptr,a
                            807 ;	clock.c:85: lcdgotoxy(4,13);                        // Specifybthe location every time before print
                            808 ;	genAssign
   011A 90s00r00            809 	mov	dptr,#_lcdgotoxy_PARM_2
   011D 74 0D               810 	mov	a,#0x0D
   011F F0                  811 	movx	@dptr,a
                            812 ;	genCall
   0120 75 82 04            813 	mov	dpl,#0x04
   0123 12s00r00            814 	lcall	_lcdgotoxy
                            815 ;	clock.c:86: lcdputstr(c);
                            816 ;	genCall
                            817 ;	Peephole 182.a	used 16 bit load of DPTR
   0126 90s00r03            818 	mov	dptr,#_clock_control_c_1_1
   0129 75 F0 00            819 	mov	b,#0x00
   012C 12s00r00            820 	lcall	_lcdputstr
                            821 ;	clock.c:89: if(mi==60){mi=0;}
                            822 ;	genAssign
   012F 90s00r02            823 	mov	dptr,#_mi
   0132 E0                  824 	movx	a,@dptr
   0133 FA                  825 	mov	r2,a
                            826 ;	genCmpEq
                            827 ;	gencjneshort
                            828 ;	Peephole 112.b	changed ljmp to sjmp
                            829 ;	Peephole 198.b	optimized misc jump sequence
   0134 BA 3C 05            830 	cjne	r2,#0x3C,00106$
                            831 ;	Peephole 200.b	removed redundant sjmp
                            832 ;	Peephole 300	removed redundant label 00119$
                            833 ;	Peephole 300	removed redundant label 00120$
                            834 ;	genAssign
   0137 90s00r02            835 	mov	dptr,#_mi
                            836 ;	Peephole 181	changed mov to clr
   013A E4                  837 	clr	a
   013B F0                  838 	movx	@dptr,a
   013C                     839 00106$:
                            840 ;	clock.c:90: t=mi/10;
                            841 ;	genAssign
   013C 90s00r02            842 	mov	dptr,#_mi
   013F E0                  843 	movx	a,@dptr
   0140 FA                  844 	mov	r2,a
                            845 ;	genDiv
                            846 ;     genDivOneByte
   0141 C2 D5               847 	clr	F0
   0143 75 F0 0A            848 	mov	b,#0x0a
   0146 EA                  849 	mov	a,r2
   0147 30 E7 04            850 	jnb	acc.7,00121$
   014A B2 D5               851 	cpl	F0
   014C F4                  852 	cpl	a
   014D 04                  853 	inc	a
   014E                     854 00121$:
   014E 84                  855 	div	ab
   014F 30 D5 02            856 	jnb	F0,00122$
   0152 F4                  857 	cpl	a
   0153 04                  858 	inc	a
   0154                     859 00122$:
   0154 FA                  860 	mov	r2,a
   0155 A2 D5               861 	mov	c,F0
   0157 95 E0               862 	subb	a,acc
   0159 FB                  863 	mov	r3,a
                            864 ;	genAssign
   015A 90s00r07            865 	mov	dptr,#_clock_control_t_1_1
   015D EA                  866 	mov	a,r2
   015E F0                  867 	movx	@dptr,a
   015F A3                  868 	inc	dptr
   0160 EB                  869 	mov	a,r3
   0161 F0                  870 	movx	@dptr,a
                            871 ;	clock.c:91: c[0]=ctoa(t);                           // Convdert the number into ascii value to print on the LCD
                            872 ;	genCall
   0162 8A 82               873 	mov	dpl,r2
   0164 8B 83               874 	mov	dph,r3
   0166 12s00r00            875 	lcall	_ctoa
   0169 AA 82               876 	mov	r2,dpl
                            877 ;	genPointerSet
                            878 ;     genFarPointerSet
   016B 90s00r03            879 	mov	dptr,#_clock_control_c_1_1
   016E EA                  880 	mov	a,r2
   016F F0                  881 	movx	@dptr,a
                            882 ;	clock.c:92: t=mi-(t*10);
                            883 ;	genAssign
   0170 90s00r02            884 	mov	dptr,#_mi
   0173 E0                  885 	movx	a,@dptr
                            886 ;	genCast
   0174 FA                  887 	mov	r2,a
                            888 ;	Peephole 105	removed redundant mov
   0175 33                  889 	rlc	a
   0176 95 E0               890 	subb	a,acc
   0178 FB                  891 	mov	r3,a
                            892 ;	genAssign
   0179 90s00r07            893 	mov	dptr,#_clock_control_t_1_1
   017C E0                  894 	movx	a,@dptr
   017D FC                  895 	mov	r4,a
   017E A3                  896 	inc	dptr
   017F E0                  897 	movx	a,@dptr
   0180 FD                  898 	mov	r5,a
                            899 ;	genAssign
   0181 90s00r00            900 	mov	dptr,#__mulint_PARM_2
   0184 74 0A               901 	mov	a,#0x0A
   0186 F0                  902 	movx	@dptr,a
   0187 E4                  903 	clr	a
   0188 A3                  904 	inc	dptr
   0189 F0                  905 	movx	@dptr,a
                            906 ;	genCall
   018A 8C 82               907 	mov	dpl,r4
   018C 8D 83               908 	mov	dph,r5
   018E C0 02               909 	push	ar2
   0190 C0 03               910 	push	ar3
   0192 12s00r00            911 	lcall	__mulint
   0195 AC 82               912 	mov	r4,dpl
   0197 AD 83               913 	mov	r5,dph
   0199 D0 03               914 	pop	ar3
   019B D0 02               915 	pop	ar2
                            916 ;	genMinus
   019D 90s00r07            917 	mov	dptr,#_clock_control_t_1_1
   01A0 EA                  918 	mov	a,r2
   01A1 C3                  919 	clr	c
                            920 ;	Peephole 236.l	used r4 instead of ar4
   01A2 9C                  921 	subb	a,r4
   01A3 F0                  922 	movx	@dptr,a
   01A4 EB                  923 	mov	a,r3
                            924 ;	Peephole 236.l	used r5 instead of ar5
   01A5 9D                  925 	subb	a,r5
   01A6 A3                  926 	inc	dptr
   01A7 F0                  927 	movx	@dptr,a
                            928 ;	clock.c:93: c[1]=ctoa(t);
                            929 ;	genAssign
   01A8 90s00r07            930 	mov	dptr,#_clock_control_t_1_1
   01AB E0                  931 	movx	a,@dptr
   01AC FA                  932 	mov	r2,a
   01AD A3                  933 	inc	dptr
   01AE E0                  934 	movx	a,@dptr
   01AF FB                  935 	mov	r3,a
                            936 ;	genCall
   01B0 8A 82               937 	mov	dpl,r2
   01B2 8B 83               938 	mov	dph,r3
   01B4 12s00r00            939 	lcall	_ctoa
   01B7 AA 82               940 	mov	r2,dpl
                            941 ;	genPointerSet
                            942 ;     genFarPointerSet
   01B9 90s00r04            943 	mov	dptr,#(_clock_control_c_1_1 + 0x0001)
   01BC EA                  944 	mov	a,r2
   01BD F0                  945 	movx	@dptr,a
                            946 ;	clock.c:94: c[2]='\0';
                            947 ;	genPointerSet
                            948 ;     genFarPointerSet
   01BE 90s00r05            949 	mov	dptr,#(_clock_control_c_1_1 + 0x0002)
                            950 ;	Peephole 181	changed mov to clr
   01C1 E4                  951 	clr	a
   01C2 F0                  952 	movx	@dptr,a
                            953 ;	clock.c:95: lcdgotoxy(4,10);                         // Specifybthe location every time before print
                            954 ;	genAssign
   01C3 90s00r00            955 	mov	dptr,#_lcdgotoxy_PARM_2
   01C6 74 0A               956 	mov	a,#0x0A
   01C8 F0                  957 	movx	@dptr,a
                            958 ;	genCall
   01C9 75 82 04            959 	mov	dpl,#0x04
   01CC 12s00r00            960 	lcall	_lcdgotoxy
                            961 ;	clock.c:96: lcdputstr(c);
                            962 ;	genCall
                            963 ;	Peephole 182.a	used 16 bit load of DPTR
   01CF 90s00r03            964 	mov	dptr,#_clock_control_c_1_1
   01D2 75 F0 00            965 	mov	b,#0x00
   01D5 12s00r00            966 	lcall	_lcdputstr
                            967 ;	Peephole 300	removed redundant label 00107$
   01D8 D0 D0               968 	pop	psw
   01DA 92 AF               969 	mov	ea,c
   01DC 22                  970 	ret
                            971 ;------------------------------------------------------------
                            972 ;Allocation info for local variables in function 'countdown_alarm'
                            973 ;------------------------------------------------------------
                            974 ;nse                       Allocated with name '_countdown_alarm_PARM_2'
                            975 ;nmi                       Allocated with name '_countdown_alarm_PARM_3'
                            976 ;cn                        Allocated with name '_countdown_alarm_PARM_4'
                            977 ;num                       Allocated with name '_countdown_alarm_PARM_5'
                            978 ;nm                        Allocated with name '_countdown_alarm_nm_1_1'
                            979 ;c                         Allocated with name '_countdown_alarm_c_1_1'
                            980 ;t                         Allocated with name '_countdown_alarm_t_1_1'
                            981 ;------------------------------------------------------------
                            982 ;	clock.c:109: void countdown_alarm(unsigned int nm,unsigned int nse,unsigned int nmi,char cn,int num) __critical
                            983 ;	-----------------------------------------
                            984 ;	 function countdown_alarm
                            985 ;	-----------------------------------------
   01DD                     986 _countdown_alarm:
   01DD D3                  987 	setb	c
   01DE 10 AF 01            988 	jbc	ea,00106$
   01E1 C3                  989 	clr	c
   01E2                     990 00106$:
   01E2 C0 D0               991 	push	psw
                            992 ;	genReceive
   01E4 AA 83               993 	mov	r2,dph
   01E6 E5 82               994 	mov	a,dpl
   01E8 90s00r10            995 	mov	dptr,#_countdown_alarm_nm_1_1
   01EB F0                  996 	movx	@dptr,a
   01EC A3                  997 	inc	dptr
   01ED EA                  998 	mov	a,r2
   01EE F0                  999 	movx	@dptr,a
                           1000 ;	clock.c:114: c[0]=ctoa(nm);                          // Convdert the number into ascii value to print on the LCD
                           1001 ;	genAssign
   01EF 90s00r10           1002 	mov	dptr,#_countdown_alarm_nm_1_1
   01F2 E0                 1003 	movx	a,@dptr
   01F3 FA                 1004 	mov	r2,a
   01F4 A3                 1005 	inc	dptr
   01F5 E0                 1006 	movx	a,@dptr
   01F6 FB                 1007 	mov	r3,a
                           1008 ;	genCall
   01F7 8A 82              1009 	mov	dpl,r2
   01F9 8B 83              1010 	mov	dph,r3
   01FB 12s00r00           1011 	lcall	_ctoa
   01FE AA 82              1012 	mov	r2,dpl
                           1013 ;	genPointerSet
                           1014 ;     genFarPointerSet
   0200 90s00r12           1015 	mov	dptr,#_countdown_alarm_c_1_1
   0203 EA                 1016 	mov	a,r2
   0204 F0                 1017 	movx	@dptr,a
                           1018 ;	clock.c:115: lcdgotoxy(num+1,16);
                           1019 ;	genAssign
   0205 90s00r0E           1020 	mov	dptr,#_countdown_alarm_PARM_5
   0208 E0                 1021 	movx	a,@dptr
   0209 FA                 1022 	mov	r2,a
   020A A3                 1023 	inc	dptr
   020B E0                 1024 	movx	a,@dptr
   020C FB                 1025 	mov	r3,a
                           1026 ;	genCast
                           1027 ;	genPlus
                           1028 ;     genPlusIncr
   020D 74 01              1029 	mov	a,#0x01
                           1030 ;	Peephole 236.a	used r2 instead of ar2
   020F 2A                 1031 	add	a,r2
   0210 FB                 1032 	mov	r3,a
                           1033 ;	genAssign
   0211 90s00r00           1034 	mov	dptr,#_lcdgotoxy_PARM_2
   0214 74 10              1035 	mov	a,#0x10
   0216 F0                 1036 	movx	@dptr,a
                           1037 ;	genCall
   0217 8B 82              1038 	mov	dpl,r3
   0219 C0 02              1039 	push	ar2
   021B C0 03              1040 	push	ar3
   021D 12s00r00           1041 	lcall	_lcdgotoxy
   0220 D0 03              1042 	pop	ar3
   0222 D0 02              1043 	pop	ar2
                           1044 ;	clock.c:116: lcdputch(c[0]);
                           1045 ;	genPointerGet
                           1046 ;	genFarPointerGet
   0224 90s00r12           1047 	mov	dptr,#_countdown_alarm_c_1_1
   0227 E0                 1048 	movx	a,@dptr
                           1049 ;	genCall
   0228 FC                 1050 	mov	r4,a
                           1051 ;	Peephole 244.c	loading dpl from a instead of r4
   0229 F5 82              1052 	mov	dpl,a
   022B C0 02              1053 	push	ar2
   022D C0 03              1054 	push	ar3
   022F 12s00r00           1055 	lcall	_lcdputch
   0232 D0 03              1056 	pop	ar3
   0234 D0 02              1057 	pop	ar2
                           1058 ;	clock.c:119: t=nse/10;
                           1059 ;	genAssign
   0236 90s00r09           1060 	mov	dptr,#_countdown_alarm_PARM_2
   0239 E0                 1061 	movx	a,@dptr
   023A FC                 1062 	mov	r4,a
   023B A3                 1063 	inc	dptr
   023C E0                 1064 	movx	a,@dptr
   023D FD                 1065 	mov	r5,a
                           1066 ;	genAssign
   023E 90s00r00           1067 	mov	dptr,#__divuint_PARM_2
   0241 74 0A              1068 	mov	a,#0x0A
   0243 F0                 1069 	movx	@dptr,a
   0244 E4                 1070 	clr	a
   0245 A3                 1071 	inc	dptr
   0246 F0                 1072 	movx	@dptr,a
                           1073 ;	clock.c:120: c[0]=ctoa(t);                           // Convdert the number into ascii value to print on the LCD
                           1074 ;	genCall
   0247 8C 82              1075 	mov	dpl,r4
   0249 8D 83              1076 	mov	dph,r5
   024B C0 02              1077 	push	ar2
   024D C0 03              1078 	push	ar3
   024F C0 04              1079 	push	ar4
   0251 C0 05              1080 	push	ar5
   0253 12s00r00           1081 	lcall	__divuint
   0256 AE 82              1082 	mov	r6,dpl
   0258 AF 83              1083 	mov	r7,dph
   025A D0 05              1084 	pop	ar5
   025C D0 04              1085 	pop	ar4
   025E D0 03              1086 	pop	ar3
   0260 D0 02              1087 	pop	ar2
                           1088 ;	genCall
   0262 8E 82              1089 	mov	dpl,r6
   0264 8F 83              1090 	mov	dph,r7
   0266 C0 02              1091 	push	ar2
   0268 C0 03              1092 	push	ar3
   026A C0 04              1093 	push	ar4
   026C C0 05              1094 	push	ar5
   026E C0 06              1095 	push	ar6
   0270 C0 07              1096 	push	ar7
   0272 12s00r00           1097 	lcall	_ctoa
   0275 A8 82              1098 	mov	r0,dpl
   0277 D0 07              1099 	pop	ar7
   0279 D0 06              1100 	pop	ar6
   027B D0 05              1101 	pop	ar5
   027D D0 04              1102 	pop	ar4
   027F D0 03              1103 	pop	ar3
   0281 D0 02              1104 	pop	ar2
                           1105 ;	genPointerSet
                           1106 ;     genFarPointerSet
   0283 90s00r12           1107 	mov	dptr,#_countdown_alarm_c_1_1
   0286 E8                 1108 	mov	a,r0
   0287 F0                 1109 	movx	@dptr,a
                           1110 ;	clock.c:121: t=nse-(t*10);
                           1111 ;	genAssign
                           1112 ;	genAssign
   0288 90s00r00           1113 	mov	dptr,#__mulint_PARM_2
   028B 74 0A              1114 	mov	a,#0x0A
   028D F0                 1115 	movx	@dptr,a
   028E E4                 1116 	clr	a
   028F A3                 1117 	inc	dptr
   0290 F0                 1118 	movx	@dptr,a
                           1119 ;	genCall
   0291 8E 82              1120 	mov	dpl,r6
   0293 8F 83              1121 	mov	dph,r7
   0295 C0 02              1122 	push	ar2
   0297 C0 03              1123 	push	ar3
   0299 C0 04              1124 	push	ar4
   029B C0 05              1125 	push	ar5
   029D 12s00r00           1126 	lcall	__mulint
   02A0 AE 82              1127 	mov	r6,dpl
   02A2 AF 83              1128 	mov	r7,dph
   02A4 D0 05              1129 	pop	ar5
   02A6 D0 04              1130 	pop	ar4
   02A8 D0 03              1131 	pop	ar3
   02AA D0 02              1132 	pop	ar2
                           1133 ;	genMinus
   02AC EC                 1134 	mov	a,r4
   02AD C3                 1135 	clr	c
                           1136 ;	Peephole 236.l	used r6 instead of ar6
   02AE 9E                 1137 	subb	a,r6
   02AF FC                 1138 	mov	r4,a
   02B0 ED                 1139 	mov	a,r5
                           1140 ;	Peephole 236.l	used r7 instead of ar7
   02B1 9F                 1141 	subb	a,r7
   02B2 FD                 1142 	mov	r5,a
                           1143 ;	clock.c:122: c[1]=ctoa(t);
                           1144 ;	genCall
   02B3 8C 82              1145 	mov	dpl,r4
   02B5 8D 83              1146 	mov	dph,r5
   02B7 C0 02              1147 	push	ar2
   02B9 C0 03              1148 	push	ar3
   02BB 12s00r00           1149 	lcall	_ctoa
   02BE AC 82              1150 	mov	r4,dpl
   02C0 D0 03              1151 	pop	ar3
   02C2 D0 02              1152 	pop	ar2
                           1153 ;	genPointerSet
                           1154 ;     genFarPointerSet
   02C4 90s00r13           1155 	mov	dptr,#(_countdown_alarm_c_1_1 + 0x0001)
   02C7 EC                 1156 	mov	a,r4
   02C8 F0                 1157 	movx	@dptr,a
                           1158 ;	clock.c:123: c[2]='\0';
                           1159 ;	genPointerSet
                           1160 ;     genFarPointerSet
   02C9 90s00r14           1161 	mov	dptr,#(_countdown_alarm_c_1_1 + 0x0002)
                           1162 ;	Peephole 181	changed mov to clr
   02CC E4                 1163 	clr	a
   02CD F0                 1164 	movx	@dptr,a
                           1165 ;	clock.c:124: lcdgotoxy(num+1,13);
                           1166 ;	genAssign
   02CE 90s00r00           1167 	mov	dptr,#_lcdgotoxy_PARM_2
   02D1 74 0D              1168 	mov	a,#0x0D
   02D3 F0                 1169 	movx	@dptr,a
                           1170 ;	genCall
   02D4 8B 82              1171 	mov	dpl,r3
   02D6 C0 02              1172 	push	ar2
   02D8 C0 03              1173 	push	ar3
   02DA 12s00r00           1174 	lcall	_lcdgotoxy
   02DD D0 03              1175 	pop	ar3
   02DF D0 02              1176 	pop	ar2
                           1177 ;	clock.c:125: lcdputstr(c);
                           1178 ;	genCall
                           1179 ;	Peephole 182.a	used 16 bit load of DPTR
   02E1 90s00r12           1180 	mov	dptr,#_countdown_alarm_c_1_1
   02E4 75 F0 00           1181 	mov	b,#0x00
   02E7 C0 02              1182 	push	ar2
   02E9 C0 03              1183 	push	ar3
   02EB 12s00r00           1184 	lcall	_lcdputstr
   02EE D0 03              1185 	pop	ar3
   02F0 D0 02              1186 	pop	ar2
                           1187 ;	clock.c:129: t=nmi/10;
                           1188 ;	genAssign
   02F2 90s00r0B           1189 	mov	dptr,#_countdown_alarm_PARM_3
   02F5 E0                 1190 	movx	a,@dptr
   02F6 FC                 1191 	mov	r4,a
   02F7 A3                 1192 	inc	dptr
   02F8 E0                 1193 	movx	a,@dptr
   02F9 FD                 1194 	mov	r5,a
                           1195 ;	genAssign
   02FA 90s00r00           1196 	mov	dptr,#__divuint_PARM_2
   02FD 74 0A              1197 	mov	a,#0x0A
   02FF F0                 1198 	movx	@dptr,a
   0300 E4                 1199 	clr	a
   0301 A3                 1200 	inc	dptr
   0302 F0                 1201 	movx	@dptr,a
                           1202 ;	clock.c:130: c[0]=ctoa(t);                           // Convdert the number into ascii value to print on the LCD
                           1203 ;	genCall
   0303 8C 82              1204 	mov	dpl,r4
   0305 8D 83              1205 	mov	dph,r5
   0307 C0 02              1206 	push	ar2
   0309 C0 03              1207 	push	ar3
   030B C0 04              1208 	push	ar4
   030D C0 05              1209 	push	ar5
   030F 12s00r00           1210 	lcall	__divuint
   0312 AE 82              1211 	mov	r6,dpl
   0314 AF 83              1212 	mov	r7,dph
   0316 D0 05              1213 	pop	ar5
   0318 D0 04              1214 	pop	ar4
   031A D0 03              1215 	pop	ar3
   031C D0 02              1216 	pop	ar2
                           1217 ;	genCall
   031E 8E 82              1218 	mov	dpl,r6
   0320 8F 83              1219 	mov	dph,r7
   0322 C0 02              1220 	push	ar2
   0324 C0 03              1221 	push	ar3
   0326 C0 04              1222 	push	ar4
   0328 C0 05              1223 	push	ar5
   032A C0 06              1224 	push	ar6
   032C C0 07              1225 	push	ar7
   032E 12s00r00           1226 	lcall	_ctoa
   0331 A8 82              1227 	mov	r0,dpl
   0333 D0 07              1228 	pop	ar7
   0335 D0 06              1229 	pop	ar6
   0337 D0 05              1230 	pop	ar5
   0339 D0 04              1231 	pop	ar4
   033B D0 03              1232 	pop	ar3
   033D D0 02              1233 	pop	ar2
                           1234 ;	genPointerSet
                           1235 ;     genFarPointerSet
   033F 90s00r12           1236 	mov	dptr,#_countdown_alarm_c_1_1
   0342 E8                 1237 	mov	a,r0
   0343 F0                 1238 	movx	@dptr,a
                           1239 ;	clock.c:131: t=nmi-(t*10);
                           1240 ;	genAssign
                           1241 ;	genAssign
   0344 90s00r00           1242 	mov	dptr,#__mulint_PARM_2
   0347 74 0A              1243 	mov	a,#0x0A
   0349 F0                 1244 	movx	@dptr,a
   034A E4                 1245 	clr	a
   034B A3                 1246 	inc	dptr
   034C F0                 1247 	movx	@dptr,a
                           1248 ;	genCall
   034D 8E 82              1249 	mov	dpl,r6
   034F 8F 83              1250 	mov	dph,r7
   0351 C0 02              1251 	push	ar2
   0353 C0 03              1252 	push	ar3
   0355 C0 04              1253 	push	ar4
   0357 C0 05              1254 	push	ar5
   0359 12s00r00           1255 	lcall	__mulint
   035C AE 82              1256 	mov	r6,dpl
   035E AF 83              1257 	mov	r7,dph
   0360 D0 05              1258 	pop	ar5
   0362 D0 04              1259 	pop	ar4
   0364 D0 03              1260 	pop	ar3
   0366 D0 02              1261 	pop	ar2
                           1262 ;	genMinus
   0368 EC                 1263 	mov	a,r4
   0369 C3                 1264 	clr	c
                           1265 ;	Peephole 236.l	used r6 instead of ar6
   036A 9E                 1266 	subb	a,r6
   036B FC                 1267 	mov	r4,a
   036C ED                 1268 	mov	a,r5
                           1269 ;	Peephole 236.l	used r7 instead of ar7
   036D 9F                 1270 	subb	a,r7
   036E FD                 1271 	mov	r5,a
                           1272 ;	clock.c:132: c[1]=ctoa(t);
                           1273 ;	genCall
   036F 8C 82              1274 	mov	dpl,r4
   0371 8D 83              1275 	mov	dph,r5
   0373 C0 02              1276 	push	ar2
   0375 C0 03              1277 	push	ar3
   0377 12s00r00           1278 	lcall	_ctoa
   037A AC 82              1279 	mov	r4,dpl
   037C D0 03              1280 	pop	ar3
   037E D0 02              1281 	pop	ar2
                           1282 ;	genPointerSet
                           1283 ;     genFarPointerSet
   0380 90s00r13           1284 	mov	dptr,#(_countdown_alarm_c_1_1 + 0x0001)
   0383 EC                 1285 	mov	a,r4
   0384 F0                 1286 	movx	@dptr,a
                           1287 ;	clock.c:133: c[2]='\0';
                           1288 ;	genPointerSet
                           1289 ;     genFarPointerSet
   0385 90s00r14           1290 	mov	dptr,#(_countdown_alarm_c_1_1 + 0x0002)
                           1291 ;	Peephole 181	changed mov to clr
   0388 E4                 1292 	clr	a
   0389 F0                 1293 	movx	@dptr,a
                           1294 ;	clock.c:134: lcdgotoxy(num+1,10);
                           1295 ;	genAssign
   038A 90s00r00           1296 	mov	dptr,#_lcdgotoxy_PARM_2
   038D 74 0A              1297 	mov	a,#0x0A
   038F F0                 1298 	movx	@dptr,a
                           1299 ;	genCall
   0390 8B 82              1300 	mov	dpl,r3
   0392 C0 02              1301 	push	ar2
   0394 12s00r00           1302 	lcall	_lcdgotoxy
   0397 D0 02              1303 	pop	ar2
                           1304 ;	clock.c:135: lcdputstr(c);
                           1305 ;	genCall
                           1306 ;	Peephole 182.a	used 16 bit load of DPTR
   0399 90s00r12           1307 	mov	dptr,#_countdown_alarm_c_1_1
   039C 75 F0 00           1308 	mov	b,#0x00
   039F C0 02              1309 	push	ar2
   03A1 12s00r00           1310 	lcall	_lcdputstr
   03A4 D0 02              1311 	pop	ar2
                           1312 ;	clock.c:136: if(cn==0)                               // If countdown timer reaches zero then Display Alarm on the LCD screen
                           1313 ;	genAssign
   03A6 90s00r0D           1314 	mov	dptr,#_countdown_alarm_PARM_4
   03A9 E0                 1315 	movx	a,@dptr
                           1316 ;	genIfx
   03AA FB                 1317 	mov	r3,a
                           1318 ;	Peephole 105	removed redundant mov
                           1319 ;	genIfxJump
                           1320 ;	Peephole 108.b	removed ljmp by inverse jump logic
   03AB 70 15              1321 	jnz	00103$
                           1322 ;	Peephole 300	removed redundant label 00107$
                           1323 ;	clock.c:139: lcdgotoxy(num+1,1);
                           1324 ;	genPlus
                           1325 ;     genPlusIncr
   03AD 0A                 1326 	inc	r2
                           1327 ;	genAssign
   03AE 90s00r00           1328 	mov	dptr,#_lcdgotoxy_PARM_2
   03B1 74 01              1329 	mov	a,#0x01
   03B3 F0                 1330 	movx	@dptr,a
                           1331 ;	genCall
   03B4 8A 82              1332 	mov	dpl,r2
   03B6 12s00r00           1333 	lcall	_lcdgotoxy
                           1334 ;	clock.c:140: lcdputstr("*Alarm*  ");
                           1335 ;	genCall
                           1336 ;	Peephole 182.a	used 16 bit load of DPTR
   03B9 90s00r00           1337 	mov	dptr,#__str_0
   03BC 75 F0 80           1338 	mov	b,#0x80
   03BF 12s00r00           1339 	lcall	_lcdputstr
   03C2                    1340 00103$:
   03C2 D0 D0              1341 	pop	psw
   03C4 92 AF              1342 	mov	ea,c
   03C6 22                 1343 	ret
                           1344 	.area CSEG    (CODE)
                           1345 	.area CONST   (CODE)
   0000                    1346 __str_0:
   0000 2A 41 6C 61 72 6D  1347 	.ascii "*Alarm*  "
        2A 20 20
   0009 00                 1348 	.db 0x00
                           1349 	.area XINIT   (CODE)
