                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Thu Nov 10 20:32:49 2016
                              5 ;--------------------------------------------------------
                              6 	.module lcd
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P5_7
                             13 	.globl _P5_6
                             14 	.globl _P5_5
                             15 	.globl _P5_4
                             16 	.globl _P5_3
                             17 	.globl _P5_2
                             18 	.globl _P5_1
                             19 	.globl _P5_0
                             20 	.globl _P4_7
                             21 	.globl _P4_6
                             22 	.globl _P4_5
                             23 	.globl _P4_4
                             24 	.globl _P4_3
                             25 	.globl _P4_2
                             26 	.globl _P4_1
                             27 	.globl _P4_0
                             28 	.globl _PX0L
                             29 	.globl _PT0L
                             30 	.globl _PX1L
                             31 	.globl _PT1L
                             32 	.globl _PLS
                             33 	.globl _PT2L
                             34 	.globl _PPCL
                             35 	.globl _EC
                             36 	.globl _CCF0
                             37 	.globl _CCF1
                             38 	.globl _CCF2
                             39 	.globl _CCF3
                             40 	.globl _CCF4
                             41 	.globl _CR
                             42 	.globl _CF
                             43 	.globl _TF2
                             44 	.globl _EXF2
                             45 	.globl _RCLK
                             46 	.globl _TCLK
                             47 	.globl _EXEN2
                             48 	.globl _TR2
                             49 	.globl _C_T2
                             50 	.globl _CP_RL2
                             51 	.globl _T2CON_7
                             52 	.globl _T2CON_6
                             53 	.globl _T2CON_5
                             54 	.globl _T2CON_4
                             55 	.globl _T2CON_3
                             56 	.globl _T2CON_2
                             57 	.globl _T2CON_1
                             58 	.globl _T2CON_0
                             59 	.globl _PT2
                             60 	.globl _ET2
                             61 	.globl _CY
                             62 	.globl _AC
                             63 	.globl _F0
                             64 	.globl _RS1
                             65 	.globl _RS0
                             66 	.globl _OV
                             67 	.globl _F1
                             68 	.globl _P
                             69 	.globl _PS
                             70 	.globl _PT1
                             71 	.globl _PX1
                             72 	.globl _PT0
                             73 	.globl _PX0
                             74 	.globl _RD
                             75 	.globl _WR
                             76 	.globl _T1
                             77 	.globl _T0
                             78 	.globl _INT1
                             79 	.globl _INT0
                             80 	.globl _TXD
                             81 	.globl _RXD
                             82 	.globl _P3_7
                             83 	.globl _P3_6
                             84 	.globl _P3_5
                             85 	.globl _P3_4
                             86 	.globl _P3_3
                             87 	.globl _P3_2
                             88 	.globl _P3_1
                             89 	.globl _P3_0
                             90 	.globl _EA
                             91 	.globl _ES
                             92 	.globl _ET1
                             93 	.globl _EX1
                             94 	.globl _ET0
                             95 	.globl _EX0
                             96 	.globl _P2_7
                             97 	.globl _P2_6
                             98 	.globl _P2_5
                             99 	.globl _P2_4
                            100 	.globl _P2_3
                            101 	.globl _P2_2
                            102 	.globl _P2_1
                            103 	.globl _P2_0
                            104 	.globl _SM0
                            105 	.globl _SM1
                            106 	.globl _SM2
                            107 	.globl _REN
                            108 	.globl _TB8
                            109 	.globl _RB8
                            110 	.globl _TI
                            111 	.globl _RI
                            112 	.globl _P1_7
                            113 	.globl _P1_6
                            114 	.globl _P1_5
                            115 	.globl _P1_4
                            116 	.globl _P1_3
                            117 	.globl _P1_2
                            118 	.globl _P1_1
                            119 	.globl _P1_0
                            120 	.globl _TF1
                            121 	.globl _TR1
                            122 	.globl _TF0
                            123 	.globl _TR0
                            124 	.globl _IE1
                            125 	.globl _IT1
                            126 	.globl _IE0
                            127 	.globl _IT0
                            128 	.globl _P0_7
                            129 	.globl _P0_6
                            130 	.globl _P0_5
                            131 	.globl _P0_4
                            132 	.globl _P0_3
                            133 	.globl _P0_2
                            134 	.globl _P0_1
                            135 	.globl _P0_0
                            136 	.globl _EECON
                            137 	.globl _KBF
                            138 	.globl _KBE
                            139 	.globl _KBLS
                            140 	.globl _BRL
                            141 	.globl _BDRCON
                            142 	.globl _T2MOD
                            143 	.globl _SPDAT
                            144 	.globl _SPSTA
                            145 	.globl _SPCON
                            146 	.globl _SADEN
                            147 	.globl _SADDR
                            148 	.globl _WDTPRG
                            149 	.globl _WDTRST
                            150 	.globl _P5
                            151 	.globl _P4
                            152 	.globl _IPH1
                            153 	.globl _IPL1
                            154 	.globl _IPH0
                            155 	.globl _IPL0
                            156 	.globl _IEN1
                            157 	.globl _IEN0
                            158 	.globl _CMOD
                            159 	.globl _CL
                            160 	.globl _CH
                            161 	.globl _CCON
                            162 	.globl _CCAPM4
                            163 	.globl _CCAPM3
                            164 	.globl _CCAPM2
                            165 	.globl _CCAPM1
                            166 	.globl _CCAPM0
                            167 	.globl _CCAP4L
                            168 	.globl _CCAP3L
                            169 	.globl _CCAP2L
                            170 	.globl _CCAP1L
                            171 	.globl _CCAP0L
                            172 	.globl _CCAP4H
                            173 	.globl _CCAP3H
                            174 	.globl _CCAP2H
                            175 	.globl _CCAP1H
                            176 	.globl _CCAP0H
                            177 	.globl _CKCKON1
                            178 	.globl _CKCKON0
                            179 	.globl _CKRL
                            180 	.globl _AUXR1
                            181 	.globl _AUXR
                            182 	.globl _TH2
                            183 	.globl _TL2
                            184 	.globl _RCAP2H
                            185 	.globl _RCAP2L
                            186 	.globl _T2CON
                            187 	.globl _B
                            188 	.globl _ACC
                            189 	.globl _PSW
                            190 	.globl _IP
                            191 	.globl _P3
                            192 	.globl _IE
                            193 	.globl _P2
                            194 	.globl _SBUF
                            195 	.globl _SCON
                            196 	.globl _P1
                            197 	.globl _TH1
                            198 	.globl _TH0
                            199 	.globl _TL1
                            200 	.globl _TL0
                            201 	.globl _TMOD
                            202 	.globl _TCON
                            203 	.globl _PCON
                            204 	.globl _DPH
                            205 	.globl _DPL
                            206 	.globl _SP
                            207 	.globl _P0
                            208 	.globl _read
                            209 	.globl _write
                            210 	.globl _lcd_display_PARM_2
                            211 	.globl _lcdgotoxy_PARM_2
                            212 	.globl _lcd_init
                            213 	.globl _lcdputch
                            214 	.globl _lcdputcmd
                            215 	.globl _lcdread
                            216 	.globl _lcdgotoaddr
                            217 	.globl _lcdbusywait
                            218 	.globl _lcdputstr
                            219 	.globl _lcdgotoxy
                            220 	.globl _lcd_delay
                            221 	.globl _lcd_display
                            222 ;--------------------------------------------------------
                            223 ; special function registers
                            224 ;--------------------------------------------------------
                            225 	.area RSEG    (DATA)
                    0080    226 _P0	=	0x0080
                    0081    227 _SP	=	0x0081
                    0082    228 _DPL	=	0x0082
                    0083    229 _DPH	=	0x0083
                    0087    230 _PCON	=	0x0087
                    0088    231 _TCON	=	0x0088
                    0089    232 _TMOD	=	0x0089
                    008A    233 _TL0	=	0x008a
                    008B    234 _TL1	=	0x008b
                    008C    235 _TH0	=	0x008c
                    008D    236 _TH1	=	0x008d
                    0090    237 _P1	=	0x0090
                    0098    238 _SCON	=	0x0098
                    0099    239 _SBUF	=	0x0099
                    00A0    240 _P2	=	0x00a0
                    00A8    241 _IE	=	0x00a8
                    00B0    242 _P3	=	0x00b0
                    00B8    243 _IP	=	0x00b8
                    00D0    244 _PSW	=	0x00d0
                    00E0    245 _ACC	=	0x00e0
                    00F0    246 _B	=	0x00f0
                    00C8    247 _T2CON	=	0x00c8
                    00CA    248 _RCAP2L	=	0x00ca
                    00CB    249 _RCAP2H	=	0x00cb
                    00CC    250 _TL2	=	0x00cc
                    00CD    251 _TH2	=	0x00cd
                    008E    252 _AUXR	=	0x008e
                    00A2    253 _AUXR1	=	0x00a2
                    0097    254 _CKRL	=	0x0097
                    008F    255 _CKCKON0	=	0x008f
                    008F    256 _CKCKON1	=	0x008f
                    00FA    257 _CCAP0H	=	0x00fa
                    00FB    258 _CCAP1H	=	0x00fb
                    00FC    259 _CCAP2H	=	0x00fc
                    00FD    260 _CCAP3H	=	0x00fd
                    00FE    261 _CCAP4H	=	0x00fe
                    00EA    262 _CCAP0L	=	0x00ea
                    00EB    263 _CCAP1L	=	0x00eb
                    00EC    264 _CCAP2L	=	0x00ec
                    00ED    265 _CCAP3L	=	0x00ed
                    00EE    266 _CCAP4L	=	0x00ee
                    00DA    267 _CCAPM0	=	0x00da
                    00DB    268 _CCAPM1	=	0x00db
                    00DC    269 _CCAPM2	=	0x00dc
                    00DD    270 _CCAPM3	=	0x00dd
                    00DE    271 _CCAPM4	=	0x00de
                    00D8    272 _CCON	=	0x00d8
                    00F9    273 _CH	=	0x00f9
                    00E9    274 _CL	=	0x00e9
                    00D9    275 _CMOD	=	0x00d9
                    00A8    276 _IEN0	=	0x00a8
                    00B1    277 _IEN1	=	0x00b1
                    00B8    278 _IPL0	=	0x00b8
                    00B7    279 _IPH0	=	0x00b7
                    00B2    280 _IPL1	=	0x00b2
                    00B3    281 _IPH1	=	0x00b3
                    00C0    282 _P4	=	0x00c0
                    00D8    283 _P5	=	0x00d8
                    00A6    284 _WDTRST	=	0x00a6
                    00A7    285 _WDTPRG	=	0x00a7
                    00A9    286 _SADDR	=	0x00a9
                    00B9    287 _SADEN	=	0x00b9
                    00C3    288 _SPCON	=	0x00c3
                    00C4    289 _SPSTA	=	0x00c4
                    00C5    290 _SPDAT	=	0x00c5
                    00C9    291 _T2MOD	=	0x00c9
                    009B    292 _BDRCON	=	0x009b
                    009A    293 _BRL	=	0x009a
                    009C    294 _KBLS	=	0x009c
                    009D    295 _KBE	=	0x009d
                    009E    296 _KBF	=	0x009e
                    00D2    297 _EECON	=	0x00d2
                            298 ;--------------------------------------------------------
                            299 ; special function bits
                            300 ;--------------------------------------------------------
                            301 	.area RSEG    (DATA)
                    0080    302 _P0_0	=	0x0080
                    0081    303 _P0_1	=	0x0081
                    0082    304 _P0_2	=	0x0082
                    0083    305 _P0_3	=	0x0083
                    0084    306 _P0_4	=	0x0084
                    0085    307 _P0_5	=	0x0085
                    0086    308 _P0_6	=	0x0086
                    0087    309 _P0_7	=	0x0087
                    0088    310 _IT0	=	0x0088
                    0089    311 _IE0	=	0x0089
                    008A    312 _IT1	=	0x008a
                    008B    313 _IE1	=	0x008b
                    008C    314 _TR0	=	0x008c
                    008D    315 _TF0	=	0x008d
                    008E    316 _TR1	=	0x008e
                    008F    317 _TF1	=	0x008f
                    0090    318 _P1_0	=	0x0090
                    0091    319 _P1_1	=	0x0091
                    0092    320 _P1_2	=	0x0092
                    0093    321 _P1_3	=	0x0093
                    0094    322 _P1_4	=	0x0094
                    0095    323 _P1_5	=	0x0095
                    0096    324 _P1_6	=	0x0096
                    0097    325 _P1_7	=	0x0097
                    0098    326 _RI	=	0x0098
                    0099    327 _TI	=	0x0099
                    009A    328 _RB8	=	0x009a
                    009B    329 _TB8	=	0x009b
                    009C    330 _REN	=	0x009c
                    009D    331 _SM2	=	0x009d
                    009E    332 _SM1	=	0x009e
                    009F    333 _SM0	=	0x009f
                    00A0    334 _P2_0	=	0x00a0
                    00A1    335 _P2_1	=	0x00a1
                    00A2    336 _P2_2	=	0x00a2
                    00A3    337 _P2_3	=	0x00a3
                    00A4    338 _P2_4	=	0x00a4
                    00A5    339 _P2_5	=	0x00a5
                    00A6    340 _P2_6	=	0x00a6
                    00A7    341 _P2_7	=	0x00a7
                    00A8    342 _EX0	=	0x00a8
                    00A9    343 _ET0	=	0x00a9
                    00AA    344 _EX1	=	0x00aa
                    00AB    345 _ET1	=	0x00ab
                    00AC    346 _ES	=	0x00ac
                    00AF    347 _EA	=	0x00af
                    00B0    348 _P3_0	=	0x00b0
                    00B1    349 _P3_1	=	0x00b1
                    00B2    350 _P3_2	=	0x00b2
                    00B3    351 _P3_3	=	0x00b3
                    00B4    352 _P3_4	=	0x00b4
                    00B5    353 _P3_5	=	0x00b5
                    00B6    354 _P3_6	=	0x00b6
                    00B7    355 _P3_7	=	0x00b7
                    00B0    356 _RXD	=	0x00b0
                    00B1    357 _TXD	=	0x00b1
                    00B2    358 _INT0	=	0x00b2
                    00B3    359 _INT1	=	0x00b3
                    00B4    360 _T0	=	0x00b4
                    00B5    361 _T1	=	0x00b5
                    00B6    362 _WR	=	0x00b6
                    00B7    363 _RD	=	0x00b7
                    00B8    364 _PX0	=	0x00b8
                    00B9    365 _PT0	=	0x00b9
                    00BA    366 _PX1	=	0x00ba
                    00BB    367 _PT1	=	0x00bb
                    00BC    368 _PS	=	0x00bc
                    00D0    369 _P	=	0x00d0
                    00D1    370 _F1	=	0x00d1
                    00D2    371 _OV	=	0x00d2
                    00D3    372 _RS0	=	0x00d3
                    00D4    373 _RS1	=	0x00d4
                    00D5    374 _F0	=	0x00d5
                    00D6    375 _AC	=	0x00d6
                    00D7    376 _CY	=	0x00d7
                    00AD    377 _ET2	=	0x00ad
                    00BD    378 _PT2	=	0x00bd
                    00C8    379 _T2CON_0	=	0x00c8
                    00C9    380 _T2CON_1	=	0x00c9
                    00CA    381 _T2CON_2	=	0x00ca
                    00CB    382 _T2CON_3	=	0x00cb
                    00CC    383 _T2CON_4	=	0x00cc
                    00CD    384 _T2CON_5	=	0x00cd
                    00CE    385 _T2CON_6	=	0x00ce
                    00CF    386 _T2CON_7	=	0x00cf
                    00C8    387 _CP_RL2	=	0x00c8
                    00C9    388 _C_T2	=	0x00c9
                    00CA    389 _TR2	=	0x00ca
                    00CB    390 _EXEN2	=	0x00cb
                    00CC    391 _TCLK	=	0x00cc
                    00CD    392 _RCLK	=	0x00cd
                    00CE    393 _EXF2	=	0x00ce
                    00CF    394 _TF2	=	0x00cf
                    00DF    395 _CF	=	0x00df
                    00DE    396 _CR	=	0x00de
                    00DC    397 _CCF4	=	0x00dc
                    00DB    398 _CCF3	=	0x00db
                    00DA    399 _CCF2	=	0x00da
                    00D9    400 _CCF1	=	0x00d9
                    00D8    401 _CCF0	=	0x00d8
                    00AE    402 _EC	=	0x00ae
                    00BE    403 _PPCL	=	0x00be
                    00BD    404 _PT2L	=	0x00bd
                    00BC    405 _PLS	=	0x00bc
                    00BB    406 _PT1L	=	0x00bb
                    00BA    407 _PX1L	=	0x00ba
                    00B9    408 _PT0L	=	0x00b9
                    00B8    409 _PX0L	=	0x00b8
                    00C0    410 _P4_0	=	0x00c0
                    00C1    411 _P4_1	=	0x00c1
                    00C2    412 _P4_2	=	0x00c2
                    00C3    413 _P4_3	=	0x00c3
                    00C4    414 _P4_4	=	0x00c4
                    00C5    415 _P4_5	=	0x00c5
                    00C6    416 _P4_6	=	0x00c6
                    00C7    417 _P4_7	=	0x00c7
                    00D8    418 _P5_0	=	0x00d8
                    00D9    419 _P5_1	=	0x00d9
                    00DA    420 _P5_2	=	0x00da
                    00DB    421 _P5_3	=	0x00db
                    00DC    422 _P5_4	=	0x00dc
                    00DD    423 _P5_5	=	0x00dd
                    00DE    424 _P5_6	=	0x00de
                    00DF    425 _P5_7	=	0x00df
                            426 ;--------------------------------------------------------
                            427 ; overlayable register banks
                            428 ;--------------------------------------------------------
                            429 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     430 	.ds 8
                            431 ;--------------------------------------------------------
                            432 ; internal ram data
                            433 ;--------------------------------------------------------
                            434 	.area DSEG    (DATA)
                            435 ;--------------------------------------------------------
                            436 ; overlayable items in internal ram 
                            437 ;--------------------------------------------------------
                            438 	.area OSEG    (OVR,DATA)
                            439 ;--------------------------------------------------------
                            440 ; indirectly addressable internal ram data
                            441 ;--------------------------------------------------------
                            442 	.area ISEG    (DATA)
                            443 ;--------------------------------------------------------
                            444 ; bit data
                            445 ;--------------------------------------------------------
                            446 	.area BSEG    (BIT)
                            447 ;--------------------------------------------------------
                            448 ; paged external ram data
                            449 ;--------------------------------------------------------
                            450 	.area PSEG    (PAG,XDATA)
                            451 ;--------------------------------------------------------
                            452 ; external ram data
                            453 ;--------------------------------------------------------
                            454 	.area XSEG    (XDATA)
   0000                     455 _lcdputch_c_1_1:
   0000                     456 	.ds 1
   0001                     457 _lcdputcmd_c_1_1:
   0001                     458 	.ds 1
   0002                     459 _lcdread_temp_1_1:
   0002                     460 	.ds 1
   0003                     461 _lcdgotoaddr_addr_1_1:
   0003                     462 	.ds 1
   0004                     463 _lcdbusywait_temp_1_1:
   0004                     464 	.ds 1
   0005                     465 _lcdputstr_str_1_1:
   0005                     466 	.ds 3
   0008                     467 _lcdgotoxy_PARM_2:
   0008                     468 	.ds 1
   0009                     469 _lcdgotoxy_row_1_1:
   0009                     470 	.ds 1
   000A                     471 _lcd_delay_ms_1_1:
   000A                     472 	.ds 2
   000C                     473 _lcd_display_PARM_2:
   000C                     474 	.ds 3
   000F                     475 _lcd_display_rd_1_1:
   000F                     476 	.ds 1
   0010                     477 _lcd_display_d_1_1:
   0010                     478 	.ds 5
   0015                     479 _lcd_display_flag_1_1:
   0015                     480 	.ds 2
                            481 ;--------------------------------------------------------
                            482 ; external initialized ram data
                            483 ;--------------------------------------------------------
                            484 	.area XISEG   (XDATA)
   0000                     485 _write::
   0000                     486 	.ds 2
   0002                     487 _read::
   0002                     488 	.ds 2
                            489 	.area HOME    (CODE)
                            490 	.area GSINIT0 (CODE)
                            491 	.area GSINIT1 (CODE)
                            492 	.area GSINIT2 (CODE)
                            493 	.area GSINIT3 (CODE)
                            494 	.area GSINIT4 (CODE)
                            495 	.area GSINIT5 (CODE)
                            496 	.area GSINIT  (CODE)
                            497 	.area GSFINAL (CODE)
                            498 	.area CSEG    (CODE)
                            499 ;--------------------------------------------------------
                            500 ; global & static initialisations
                            501 ;--------------------------------------------------------
                            502 	.area HOME    (CODE)
                            503 	.area GSINIT  (CODE)
                            504 	.area GSFINAL (CODE)
                            505 	.area GSINIT  (CODE)
                            506 ;--------------------------------------------------------
                            507 ; Home
                            508 ;--------------------------------------------------------
                            509 	.area HOME    (CODE)
                            510 	.area CSEG    (CODE)
                            511 ;--------------------------------------------------------
                            512 ; code
                            513 ;--------------------------------------------------------
                            514 	.area CSEG    (CODE)
                            515 ;------------------------------------------------------------
                            516 ;Allocation info for local variables in function 'lcd_init'
                            517 ;------------------------------------------------------------
                            518 ;------------------------------------------------------------
                            519 ;	lcd.c:12: void lcd_init()
                            520 ;	-----------------------------------------
                            521 ;	 function lcd_init
                            522 ;	-----------------------------------------
   0000                     523 _lcd_init:
                    0002    524 	ar2 = 0x02
                    0003    525 	ar3 = 0x03
                    0004    526 	ar4 = 0x04
                    0005    527 	ar5 = 0x05
                    0006    528 	ar6 = 0x06
                    0007    529 	ar7 = 0x07
                    0000    530 	ar0 = 0x00
                    0001    531 	ar1 = 0x01
                            532 ;	lcd.c:14: RS=0;
                            533 ;	genAssign
   0000 C2 93               534 	clr	_P1_3
                            535 ;	lcd.c:15: lcd_delay(200);
                            536 ;	genCall
                            537 ;	Peephole 182.b	used 16 bit load of dptr
   0002 90 00 C8            538 	mov	dptr,#0x00C8
   0005 12s02r3E            539 	lcall	_lcd_delay
                            540 ;	lcd.c:16: *write = 0x30;
                            541 ;	genAssign
   0008 90s00r00            542 	mov	dptr,#_write
   000B E0                  543 	movx	a,@dptr
   000C FA                  544 	mov	r2,a
   000D A3                  545 	inc	dptr
   000E E0                  546 	movx	a,@dptr
   000F FB                  547 	mov	r3,a
                            548 ;	genPointerSet
                            549 ;     genFarPointerSet
   0010 8A 82               550 	mov	dpl,r2
   0012 8B 83               551 	mov	dph,r3
   0014 74 30               552 	mov	a,#0x30
   0016 F0                  553 	movx	@dptr,a
                            554 ;	lcd.c:17: lcd_delay(60);
                            555 ;	genCall
                            556 ;	Peephole 182.b	used 16 bit load of dptr
   0017 90 00 3C            557 	mov	dptr,#0x003C
   001A 12s02r3E            558 	lcall	_lcd_delay
                            559 ;	lcd.c:18: *write = 0x30;
                            560 ;	genAssign
   001D 90s00r00            561 	mov	dptr,#_write
   0020 E0                  562 	movx	a,@dptr
   0021 FA                  563 	mov	r2,a
   0022 A3                  564 	inc	dptr
   0023 E0                  565 	movx	a,@dptr
   0024 FB                  566 	mov	r3,a
                            567 ;	genPointerSet
                            568 ;     genFarPointerSet
   0025 8A 82               569 	mov	dpl,r2
   0027 8B 83               570 	mov	dph,r3
   0029 74 30               571 	mov	a,#0x30
   002B F0                  572 	movx	@dptr,a
                            573 ;	lcd.c:19: lcd_delay(5);
                            574 ;	genCall
                            575 ;	Peephole 182.b	used 16 bit load of dptr
   002C 90 00 05            576 	mov	dptr,#0x0005
   002F 12s02r3E            577 	lcall	_lcd_delay
                            578 ;	lcd.c:20: *write=0x30;
                            579 ;	genAssign
   0032 90s00r00            580 	mov	dptr,#_write
   0035 E0                  581 	movx	a,@dptr
   0036 FA                  582 	mov	r2,a
   0037 A3                  583 	inc	dptr
   0038 E0                  584 	movx	a,@dptr
   0039 FB                  585 	mov	r3,a
                            586 ;	genPointerSet
                            587 ;     genFarPointerSet
   003A 8A 82               588 	mov	dpl,r2
   003C 8B 83               589 	mov	dph,r3
   003E 74 30               590 	mov	a,#0x30
   0040 F0                  591 	movx	@dptr,a
                            592 ;	lcd.c:22: lcdbusywait();
                            593 ;	genCall
   0041 12s01r36            594 	lcall	_lcdbusywait
                            595 ;	lcd.c:23: *write = 0x38;
                            596 ;	genAssign
   0044 90s00r00            597 	mov	dptr,#_write
   0047 E0                  598 	movx	a,@dptr
   0048 FA                  599 	mov	r2,a
   0049 A3                  600 	inc	dptr
   004A E0                  601 	movx	a,@dptr
   004B FB                  602 	mov	r3,a
                            603 ;	genPointerSet
                            604 ;     genFarPointerSet
   004C 8A 82               605 	mov	dpl,r2
   004E 8B 83               606 	mov	dph,r3
   0050 74 38               607 	mov	a,#0x38
   0052 F0                  608 	movx	@dptr,a
                            609 ;	lcd.c:24: lcd_delay(1);
                            610 ;	genCall
                            611 ;	Peephole 182.b	used 16 bit load of dptr
   0053 90 00 01            612 	mov	dptr,#0x0001
   0056 12s02r3E            613 	lcall	_lcd_delay
                            614 ;	lcd.c:25: lcdbusywait();
                            615 ;	genCall
   0059 12s01r36            616 	lcall	_lcdbusywait
                            617 ;	lcd.c:26: *write = 0x08;
                            618 ;	genAssign
   005C 90s00r00            619 	mov	dptr,#_write
   005F E0                  620 	movx	a,@dptr
   0060 FA                  621 	mov	r2,a
   0061 A3                  622 	inc	dptr
   0062 E0                  623 	movx	a,@dptr
   0063 FB                  624 	mov	r3,a
                            625 ;	genPointerSet
                            626 ;     genFarPointerSet
   0064 8A 82               627 	mov	dpl,r2
   0066 8B 83               628 	mov	dph,r3
   0068 74 08               629 	mov	a,#0x08
   006A F0                  630 	movx	@dptr,a
                            631 ;	lcd.c:28: lcdbusywait();
                            632 ;	genCall
   006B 12s01r36            633 	lcall	_lcdbusywait
                            634 ;	lcd.c:29: *write = 0x0C;
                            635 ;	genAssign
   006E 90s00r00            636 	mov	dptr,#_write
   0071 E0                  637 	movx	a,@dptr
   0072 FA                  638 	mov	r2,a
   0073 A3                  639 	inc	dptr
   0074 E0                  640 	movx	a,@dptr
   0075 FB                  641 	mov	r3,a
                            642 ;	genPointerSet
                            643 ;     genFarPointerSet
   0076 8A 82               644 	mov	dpl,r2
   0078 8B 83               645 	mov	dph,r3
   007A 74 0C               646 	mov	a,#0x0C
   007C F0                  647 	movx	@dptr,a
                            648 ;	lcd.c:31: lcdbusywait();
                            649 ;	genCall
   007D 12s01r36            650 	lcall	_lcdbusywait
                            651 ;	lcd.c:32: *write = 0x06;
                            652 ;	genAssign
   0080 90s00r00            653 	mov	dptr,#_write
   0083 E0                  654 	movx	a,@dptr
   0084 FA                  655 	mov	r2,a
   0085 A3                  656 	inc	dptr
   0086 E0                  657 	movx	a,@dptr
   0087 FB                  658 	mov	r3,a
                            659 ;	genPointerSet
                            660 ;     genFarPointerSet
   0088 8A 82               661 	mov	dpl,r2
   008A 8B 83               662 	mov	dph,r3
   008C 74 06               663 	mov	a,#0x06
   008E F0                  664 	movx	@dptr,a
                            665 ;	lcd.c:34: lcdbusywait();
                            666 ;	genCall
   008F 12s01r36            667 	lcall	_lcdbusywait
                            668 ;	lcd.c:35: *write = 0x01;
                            669 ;	genAssign
   0092 90s00r00            670 	mov	dptr,#_write
   0095 E0                  671 	movx	a,@dptr
   0096 FA                  672 	mov	r2,a
   0097 A3                  673 	inc	dptr
   0098 E0                  674 	movx	a,@dptr
   0099 FB                  675 	mov	r3,a
                            676 ;	genPointerSet
                            677 ;     genFarPointerSet
   009A 8A 82               678 	mov	dpl,r2
   009C 8B 83               679 	mov	dph,r3
   009E 74 01               680 	mov	a,#0x01
   00A0 F0                  681 	movx	@dptr,a
                            682 ;	lcd.c:36: lcd_delay(1);
                            683 ;	genCall
                            684 ;	Peephole 182.b	used 16 bit load of dptr
   00A1 90 00 01            685 	mov	dptr,#0x0001
                            686 ;	Peephole 253.b	replaced lcall/ret with ljmp
   00A4 02s02r3E            687 	ljmp	_lcd_delay
                            688 ;
                            689 ;------------------------------------------------------------
                            690 ;Allocation info for local variables in function 'lcdputch'
                            691 ;------------------------------------------------------------
                            692 ;c                         Allocated with name '_lcdputch_c_1_1'
                            693 ;------------------------------------------------------------
                            694 ;	lcd.c:40: void lcdputch(char c)
                            695 ;	-----------------------------------------
                            696 ;	 function lcdputch
                            697 ;	-----------------------------------------
   00A7                     698 _lcdputch:
                            699 ;	genReceive
   00A7 E5 82               700 	mov	a,dpl
   00A9 90s00r00            701 	mov	dptr,#_lcdputch_c_1_1
   00AC F0                  702 	movx	@dptr,a
                            703 ;	lcd.c:42: RS=1;
                            704 ;	genAssign
   00AD D2 93               705 	setb	_P1_3
                            706 ;	lcd.c:43: lcd_delay(1);
                            707 ;	genCall
                            708 ;	Peephole 182.b	used 16 bit load of dptr
   00AF 90 00 01            709 	mov	dptr,#0x0001
   00B2 12s02r3E            710 	lcall	_lcd_delay
                            711 ;	lcd.c:44: *write = c;
                            712 ;	genAssign
   00B5 90s00r00            713 	mov	dptr,#_write
   00B8 E0                  714 	movx	a,@dptr
   00B9 FA                  715 	mov	r2,a
   00BA A3                  716 	inc	dptr
   00BB E0                  717 	movx	a,@dptr
   00BC FB                  718 	mov	r3,a
                            719 ;	genAssign
   00BD 90s00r00            720 	mov	dptr,#_lcdputch_c_1_1
   00C0 E0                  721 	movx	a,@dptr
                            722 ;	genPointerSet
                            723 ;     genFarPointerSet
   00C1 FC                  724 	mov	r4,a
   00C2 8A 82               725 	mov	dpl,r2
   00C4 8B 83               726 	mov	dph,r3
                            727 ;	Peephole 136	removed redundant move
   00C6 F0                  728 	movx	@dptr,a
                            729 ;	lcd.c:45: lcdbusywait();
                            730 ;	genCall
                            731 ;	Peephole 253.b	replaced lcall/ret with ljmp
   00C7 02s01r36            732 	ljmp	_lcdbusywait
                            733 ;
                            734 ;------------------------------------------------------------
                            735 ;Allocation info for local variables in function 'lcdputcmd'
                            736 ;------------------------------------------------------------
                            737 ;c                         Allocated with name '_lcdputcmd_c_1_1'
                            738 ;------------------------------------------------------------
                            739 ;	lcd.c:48: void lcdputcmd(char c)
                            740 ;	-----------------------------------------
                            741 ;	 function lcdputcmd
                            742 ;	-----------------------------------------
   00CA                     743 _lcdputcmd:
                            744 ;	genReceive
   00CA E5 82               745 	mov	a,dpl
   00CC 90s00r01            746 	mov	dptr,#_lcdputcmd_c_1_1
   00CF F0                  747 	movx	@dptr,a
                            748 ;	lcd.c:50: RS=0;
                            749 ;	genAssign
   00D0 C2 93               750 	clr	_P1_3
                            751 ;	lcd.c:51: lcd_delay(1);
                            752 ;	genCall
                            753 ;	Peephole 182.b	used 16 bit load of dptr
   00D2 90 00 01            754 	mov	dptr,#0x0001
   00D5 12s02r3E            755 	lcall	_lcd_delay
                            756 ;	lcd.c:52: *write = c;
                            757 ;	genAssign
   00D8 90s00r00            758 	mov	dptr,#_write
   00DB E0                  759 	movx	a,@dptr
   00DC FA                  760 	mov	r2,a
   00DD A3                  761 	inc	dptr
   00DE E0                  762 	movx	a,@dptr
   00DF FB                  763 	mov	r3,a
                            764 ;	genAssign
   00E0 90s00r01            765 	mov	dptr,#_lcdputcmd_c_1_1
   00E3 E0                  766 	movx	a,@dptr
                            767 ;	genPointerSet
                            768 ;     genFarPointerSet
   00E4 FC                  769 	mov	r4,a
   00E5 8A 82               770 	mov	dpl,r2
   00E7 8B 83               771 	mov	dph,r3
                            772 ;	Peephole 136	removed redundant move
   00E9 F0                  773 	movx	@dptr,a
                            774 ;	lcd.c:53: P1_0=1;
                            775 ;	genAssign
   00EA D2 90               776 	setb	_P1_0
                            777 ;	lcd.c:54: lcdbusywait();
                            778 ;	genCall
                            779 ;	Peephole 253.b	replaced lcall/ret with ljmp
   00EC 02s01r36            780 	ljmp	_lcdbusywait
                            781 ;
                            782 ;------------------------------------------------------------
                            783 ;Allocation info for local variables in function 'lcdread'
                            784 ;------------------------------------------------------------
                            785 ;temp                      Allocated with name '_lcdread_temp_1_1'
                            786 ;------------------------------------------------------------
                            787 ;	lcd.c:57: char lcdread()
                            788 ;	-----------------------------------------
                            789 ;	 function lcdread
                            790 ;	-----------------------------------------
   00EF                     791 _lcdread:
                            792 ;	lcd.c:60: RS=1;
                            793 ;	genAssign
   00EF D2 93               794 	setb	_P1_3
                            795 ;	lcd.c:61: lcd_delay(1);
                            796 ;	genCall
                            797 ;	Peephole 182.b	used 16 bit load of dptr
   00F1 90 00 01            798 	mov	dptr,#0x0001
   00F4 12s02r3E            799 	lcall	_lcd_delay
                            800 ;	lcd.c:62: temp = *read;
                            801 ;	genAssign
   00F7 90s00r02            802 	mov	dptr,#_read
   00FA E0                  803 	movx	a,@dptr
   00FB FA                  804 	mov	r2,a
   00FC A3                  805 	inc	dptr
   00FD E0                  806 	movx	a,@dptr
   00FE FB                  807 	mov	r3,a
                            808 ;	genPointerGet
                            809 ;	genFarPointerGet
   00FF 8A 82               810 	mov	dpl,r2
   0101 8B 83               811 	mov	dph,r3
   0103 E0                  812 	movx	a,@dptr
                            813 ;	genAssign
   0104 FA                  814 	mov	r2,a
   0105 90s00r02            815 	mov	dptr,#_lcdread_temp_1_1
                            816 ;	Peephole 100	removed redundant mov
   0108 F0                  817 	movx	@dptr,a
                            818 ;	lcd.c:63: lcdbusywait();
                            819 ;	genCall
   0109 12s01r36            820 	lcall	_lcdbusywait
                            821 ;	lcd.c:64: return temp;
                            822 ;	genAssign
   010C 90s00r02            823 	mov	dptr,#_lcdread_temp_1_1
   010F E0                  824 	movx	a,@dptr
                            825 ;	genRet
                            826 ;	Peephole 234.a	loading dpl directly from a(ccumulator), r2 not set
   0110 F5 82               827 	mov	dpl,a
                            828 ;	Peephole 300	removed redundant label 00101$
   0112 22                  829 	ret
                            830 ;------------------------------------------------------------
                            831 ;Allocation info for local variables in function 'lcdgotoaddr'
                            832 ;------------------------------------------------------------
                            833 ;addr                      Allocated with name '_lcdgotoaddr_addr_1_1'
                            834 ;------------------------------------------------------------
                            835 ;	lcd.c:66: void lcdgotoaddr(unsigned char addr)
                            836 ;	-----------------------------------------
                            837 ;	 function lcdgotoaddr
                            838 ;	-----------------------------------------
   0113                     839 _lcdgotoaddr:
                            840 ;	genReceive
   0113 E5 82               841 	mov	a,dpl
   0115 90s00r03            842 	mov	dptr,#_lcdgotoaddr_addr_1_1
   0118 F0                  843 	movx	@dptr,a
                            844 ;	lcd.c:68: RS=0;
                            845 ;	genAssign
   0119 C2 93               846 	clr	_P1_3
                            847 ;	lcd.c:69: lcd_delay(1);
                            848 ;	genCall
                            849 ;	Peephole 182.b	used 16 bit load of dptr
   011B 90 00 01            850 	mov	dptr,#0x0001
   011E 12s02r3E            851 	lcall	_lcd_delay
                            852 ;	lcd.c:70: *write = addr;
                            853 ;	genAssign
   0121 90s00r00            854 	mov	dptr,#_write
   0124 E0                  855 	movx	a,@dptr
   0125 FA                  856 	mov	r2,a
   0126 A3                  857 	inc	dptr
   0127 E0                  858 	movx	a,@dptr
   0128 FB                  859 	mov	r3,a
                            860 ;	genAssign
   0129 90s00r03            861 	mov	dptr,#_lcdgotoaddr_addr_1_1
   012C E0                  862 	movx	a,@dptr
                            863 ;	genPointerSet
                            864 ;     genFarPointerSet
   012D FC                  865 	mov	r4,a
   012E 8A 82               866 	mov	dpl,r2
   0130 8B 83               867 	mov	dph,r3
                            868 ;	Peephole 136	removed redundant move
   0132 F0                  869 	movx	@dptr,a
                            870 ;	lcd.c:71: lcdbusywait();
                            871 ;	genCall
                            872 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0133 02s01r36            873 	ljmp	_lcdbusywait
                            874 ;
                            875 ;------------------------------------------------------------
                            876 ;Allocation info for local variables in function 'lcdbusywait'
                            877 ;------------------------------------------------------------
                            878 ;temp                      Allocated with name '_lcdbusywait_temp_1_1'
                            879 ;------------------------------------------------------------
                            880 ;	lcd.c:74: void lcdbusywait()
                            881 ;	-----------------------------------------
                            882 ;	 function lcdbusywait
                            883 ;	-----------------------------------------
   0136                     884 _lcdbusywait:
                            885 ;	lcd.c:77: RS=0;
                            886 ;	genAssign
   0136 C2 93               887 	clr	_P1_3
                            888 ;	lcd.c:78: temp = *read;
                            889 ;	genAssign
   0138 90s00r02            890 	mov	dptr,#_read
   013B E0                  891 	movx	a,@dptr
   013C FA                  892 	mov	r2,a
   013D A3                  893 	inc	dptr
   013E E0                  894 	movx	a,@dptr
   013F FB                  895 	mov	r3,a
                            896 ;	genPointerGet
                            897 ;	genFarPointerGet
   0140 8A 82               898 	mov	dpl,r2
   0142 8B 83               899 	mov	dph,r3
   0144 E0                  900 	movx	a,@dptr
                            901 ;	genAssign
   0145 FA                  902 	mov	r2,a
   0146 90s00r04            903 	mov	dptr,#_lcdbusywait_temp_1_1
                            904 ;	Peephole 100	removed redundant mov
   0149 F0                  905 	movx	@dptr,a
                            906 ;	lcd.c:80: lcd_delay(1);
                            907 ;	genCall
                            908 ;	Peephole 182.b	used 16 bit load of dptr
   014A 90 00 01            909 	mov	dptr,#0x0001
   014D 12s02r3E            910 	lcall	_lcd_delay
                            911 ;	lcd.c:82: while(temp & 0x80)
   0150                     912 00101$:
                            913 ;	genAssign
   0150 90s00r04            914 	mov	dptr,#_lcdbusywait_temp_1_1
   0153 E0                  915 	movx	a,@dptr
                            916 ;	genAnd
   0154 FA                  917 	mov	r2,a
                            918 ;	Peephole 105	removed redundant mov
                            919 ;	Peephole 108.d	removed ljmp by inverse jump logic
   0155 30 E7 14            920 	jnb	acc.7,00103$
                            921 ;	Peephole 300	removed redundant label 00108$
                            922 ;	lcd.c:84: temp = *read;
                            923 ;	genAssign
   0158 90s00r02            924 	mov	dptr,#_read
   015B E0                  925 	movx	a,@dptr
   015C FA                  926 	mov	r2,a
   015D A3                  927 	inc	dptr
   015E E0                  928 	movx	a,@dptr
   015F FB                  929 	mov	r3,a
                            930 ;	genPointerGet
                            931 ;	genFarPointerGet
   0160 8A 82               932 	mov	dpl,r2
   0162 8B 83               933 	mov	dph,r3
   0164 E0                  934 	movx	a,@dptr
                            935 ;	genAssign
   0165 FA                  936 	mov	r2,a
   0166 90s00r04            937 	mov	dptr,#_lcdbusywait_temp_1_1
                            938 ;	Peephole 100	removed redundant mov
   0169 F0                  939 	movx	@dptr,a
                            940 ;	Peephole 112.b	changed ljmp to sjmp
   016A 80 E4               941 	sjmp	00101$
   016C                     942 00103$:
                            943 ;	lcd.c:86: P1_0=0;
                            944 ;	genAssign
   016C C2 90               945 	clr	_P1_0
                            946 ;	Peephole 300	removed redundant label 00104$
   016E 22                  947 	ret
                            948 ;------------------------------------------------------------
                            949 ;Allocation info for local variables in function 'lcdputstr'
                            950 ;------------------------------------------------------------
                            951 ;str                       Allocated with name '_lcdputstr_str_1_1'
                            952 ;i                         Allocated with name '_lcdputstr_i_1_1'
                            953 ;------------------------------------------------------------
                            954 ;	lcd.c:89: void lcdputstr(char *str)
                            955 ;	-----------------------------------------
                            956 ;	 function lcdputstr
                            957 ;	-----------------------------------------
   016F                     958 _lcdputstr:
                            959 ;	genReceive
   016F AA F0               960 	mov	r2,b
   0171 AB 83               961 	mov	r3,dph
   0173 E5 82               962 	mov	a,dpl
   0175 90s00r05            963 	mov	dptr,#_lcdputstr_str_1_1
   0178 F0                  964 	movx	@dptr,a
   0179 A3                  965 	inc	dptr
   017A EB                  966 	mov	a,r3
   017B F0                  967 	movx	@dptr,a
   017C A3                  968 	inc	dptr
   017D EA                  969 	mov	a,r2
   017E F0                  970 	movx	@dptr,a
                            971 ;	lcd.c:92: while(*(str+i) != '\0')
                            972 ;	genAssign
   017F 90s00r05            973 	mov	dptr,#_lcdputstr_str_1_1
   0182 E0                  974 	movx	a,@dptr
   0183 FA                  975 	mov	r2,a
   0184 A3                  976 	inc	dptr
   0185 E0                  977 	movx	a,@dptr
   0186 FB                  978 	mov	r3,a
   0187 A3                  979 	inc	dptr
   0188 E0                  980 	movx	a,@dptr
   0189 FC                  981 	mov	r4,a
                            982 ;	genAssign
   018A 7D 00               983 	mov	r5,#0x00
   018C 7E 00               984 	mov	r6,#0x00
   018E                     985 00101$:
                            986 ;	genPlus
                            987 ;	Peephole 236.g	used r5 instead of ar5
   018E ED                  988 	mov	a,r5
                            989 ;	Peephole 236.a	used r2 instead of ar2
   018F 2A                  990 	add	a,r2
   0190 FF                  991 	mov	r7,a
                            992 ;	Peephole 236.g	used r6 instead of ar6
   0191 EE                  993 	mov	a,r6
                            994 ;	Peephole 236.b	used r3 instead of ar3
   0192 3B                  995 	addc	a,r3
   0193 F8                  996 	mov	r0,a
   0194 8C 01               997 	mov	ar1,r4
                            998 ;	genPointerGet
                            999 ;	genGenPointerGet
   0196 8F 82              1000 	mov	dpl,r7
   0198 88 83              1001 	mov	dph,r0
   019A 89 F0              1002 	mov	b,r1
   019C 12s00r00           1003 	lcall	__gptrget
                           1004 ;	genCmpEq
                           1005 ;	gencjneshort
                           1006 ;	Peephole 112.b	changed ljmp to sjmp
   019F FF                 1007 	mov	r7,a
                           1008 ;	Peephole 115.b	jump optimization
   01A0 60 20              1009 	jz	00104$
                           1010 ;	Peephole 300	removed redundant label 00109$
                           1011 ;	lcd.c:94: lcdputch(*(str+i));
                           1012 ;	genCall
   01A2 8F 82              1013 	mov	dpl,r7
   01A4 C0 02              1014 	push	ar2
   01A6 C0 03              1015 	push	ar3
   01A8 C0 04              1016 	push	ar4
   01AA C0 05              1017 	push	ar5
   01AC C0 06              1018 	push	ar6
   01AE 12s00rA7           1019 	lcall	_lcdputch
   01B1 D0 06              1020 	pop	ar6
   01B3 D0 05              1021 	pop	ar5
   01B5 D0 04              1022 	pop	ar4
   01B7 D0 03              1023 	pop	ar3
   01B9 D0 02              1024 	pop	ar2
                           1025 ;	lcd.c:95: i++;
                           1026 ;	genPlus
                           1027 ;     genPlusIncr
                           1028 ;	tail increment optimized (range 7)
   01BB 0D                 1029 	inc	r5
   01BC BD 00 CF           1030 	cjne	r5,#0x00,00101$
   01BF 0E                 1031 	inc	r6
                           1032 ;	Peephole 112.b	changed ljmp to sjmp
   01C0 80 CC              1033 	sjmp	00101$
   01C2                    1034 00104$:
   01C2 22                 1035 	ret
                           1036 ;------------------------------------------------------------
                           1037 ;Allocation info for local variables in function 'lcdgotoxy'
                           1038 ;------------------------------------------------------------
                           1039 ;column                    Allocated with name '_lcdgotoxy_PARM_2'
                           1040 ;row                       Allocated with name '_lcdgotoxy_row_1_1'
                           1041 ;------------------------------------------------------------
                           1042 ;	lcd.c:100: void lcdgotoxy(unsigned char row, unsigned char column)
                           1043 ;	-----------------------------------------
                           1044 ;	 function lcdgotoxy
                           1045 ;	-----------------------------------------
   01C3                    1046 _lcdgotoxy:
                           1047 ;	genReceive
   01C3 E5 82              1048 	mov	a,dpl
   01C5 90s00r09           1049 	mov	dptr,#_lcdgotoxy_row_1_1
   01C8 F0                 1050 	movx	@dptr,a
                           1051 ;	lcd.c:102: if(row==1 && column < 17)
                           1052 ;	genAssign
   01C9 90s00r09           1053 	mov	dptr,#_lcdgotoxy_row_1_1
   01CC E0                 1054 	movx	a,@dptr
   01CD FA                 1055 	mov	r2,a
                           1056 ;	genCmpEq
                           1057 ;	gencjneshort
                           1058 ;	Peephole 112.b	changed ljmp to sjmp
                           1059 ;	Peephole 198.b	optimized misc jump sequence
   01CE BA 01 13           1060 	cjne	r2,#0x01,00114$
                           1061 ;	Peephole 200.b	removed redundant sjmp
                           1062 ;	Peephole 300	removed redundant label 00127$
                           1063 ;	Peephole 300	removed redundant label 00128$
                           1064 ;	genAssign
   01D1 90s00r08           1065 	mov	dptr,#_lcdgotoxy_PARM_2
   01D4 E0                 1066 	movx	a,@dptr
   01D5 FA                 1067 	mov	r2,a
                           1068 ;	genCmpLt
                           1069 ;	genCmp
   01D6 BA 11 00           1070 	cjne	r2,#0x11,00129$
   01D9                    1071 00129$:
                           1072 ;	genIfxJump
                           1073 ;	Peephole 108.a	removed ljmp by inverse jump logic
   01D9 50 09              1074 	jnc	00114$
                           1075 ;	Peephole 300	removed redundant label 00130$
                           1076 ;	lcd.c:104: lcdgotoaddr(0x80 + column - 1);
                           1077 ;	genPlus
                           1078 ;     genPlusIncr
   01DB 74 7F              1079 	mov	a,#0x7F
                           1080 ;	Peephole 236.a	used r2 instead of ar2
   01DD 2A                 1081 	add	a,r2
                           1082 ;	genCall
   01DE FA                 1083 	mov	r2,a
                           1084 ;	Peephole 244.c	loading dpl from a instead of r2
   01DF F5 82              1085 	mov	dpl,a
                           1086 ;	Peephole 112.b	changed ljmp to sjmp
                           1087 ;	Peephole 251.b	replaced sjmp to ret with ret
                           1088 ;	Peephole 253.a	replaced lcall/ret with ljmp
   01E1 02s01r13           1089 	ljmp	_lcdgotoaddr
   01E4                    1090 00114$:
                           1091 ;	lcd.c:106: else if(row==2 && column < 17)
                           1092 ;	genAssign
   01E4 90s00r09           1093 	mov	dptr,#_lcdgotoxy_row_1_1
   01E7 E0                 1094 	movx	a,@dptr
   01E8 FA                 1095 	mov	r2,a
                           1096 ;	genCmpEq
                           1097 ;	gencjneshort
                           1098 ;	Peephole 112.b	changed ljmp to sjmp
                           1099 ;	Peephole 198.b	optimized misc jump sequence
   01E9 BA 02 13           1100 	cjne	r2,#0x02,00110$
                           1101 ;	Peephole 200.b	removed redundant sjmp
                           1102 ;	Peephole 300	removed redundant label 00131$
                           1103 ;	Peephole 300	removed redundant label 00132$
                           1104 ;	genAssign
   01EC 90s00r08           1105 	mov	dptr,#_lcdgotoxy_PARM_2
   01EF E0                 1106 	movx	a,@dptr
   01F0 FA                 1107 	mov	r2,a
                           1108 ;	genCmpLt
                           1109 ;	genCmp
   01F1 BA 11 00           1110 	cjne	r2,#0x11,00133$
   01F4                    1111 00133$:
                           1112 ;	genIfxJump
                           1113 ;	Peephole 108.a	removed ljmp by inverse jump logic
   01F4 50 09              1114 	jnc	00110$
                           1115 ;	Peephole 300	removed redundant label 00134$
                           1116 ;	lcd.c:108: lcdgotoaddr(0xC0 + column - 1);
                           1117 ;	genPlus
                           1118 ;     genPlusIncr
   01F6 74 BF              1119 	mov	a,#0xBF
                           1120 ;	Peephole 236.a	used r2 instead of ar2
   01F8 2A                 1121 	add	a,r2
                           1122 ;	genCall
   01F9 FA                 1123 	mov	r2,a
                           1124 ;	Peephole 244.c	loading dpl from a instead of r2
   01FA F5 82              1125 	mov	dpl,a
                           1126 ;	Peephole 112.b	changed ljmp to sjmp
                           1127 ;	Peephole 251.b	replaced sjmp to ret with ret
                           1128 ;	Peephole 253.a	replaced lcall/ret with ljmp
   01FC 02s01r13           1129 	ljmp	_lcdgotoaddr
   01FF                    1130 00110$:
                           1131 ;	lcd.c:110: else if(row==3 && column < 17)
                           1132 ;	genAssign
   01FF 90s00r09           1133 	mov	dptr,#_lcdgotoxy_row_1_1
   0202 E0                 1134 	movx	a,@dptr
   0203 FA                 1135 	mov	r2,a
                           1136 ;	genCmpEq
                           1137 ;	gencjneshort
                           1138 ;	Peephole 112.b	changed ljmp to sjmp
                           1139 ;	Peephole 198.b	optimized misc jump sequence
   0204 BA 03 13           1140 	cjne	r2,#0x03,00106$
                           1141 ;	Peephole 200.b	removed redundant sjmp
                           1142 ;	Peephole 300	removed redundant label 00135$
                           1143 ;	Peephole 300	removed redundant label 00136$
                           1144 ;	genAssign
   0207 90s00r08           1145 	mov	dptr,#_lcdgotoxy_PARM_2
   020A E0                 1146 	movx	a,@dptr
   020B FA                 1147 	mov	r2,a
                           1148 ;	genCmpLt
                           1149 ;	genCmp
   020C BA 11 00           1150 	cjne	r2,#0x11,00137$
   020F                    1151 00137$:
                           1152 ;	genIfxJump
                           1153 ;	Peephole 108.a	removed ljmp by inverse jump logic
   020F 50 09              1154 	jnc	00106$
                           1155 ;	Peephole 300	removed redundant label 00138$
                           1156 ;	lcd.c:112: lcdgotoaddr(0x90 + column - 1);
                           1157 ;	genPlus
                           1158 ;     genPlusIncr
   0211 74 8F              1159 	mov	a,#0x8F
                           1160 ;	Peephole 236.a	used r2 instead of ar2
   0213 2A                 1161 	add	a,r2
                           1162 ;	genCall
   0214 FA                 1163 	mov	r2,a
                           1164 ;	Peephole 244.c	loading dpl from a instead of r2
   0215 F5 82              1165 	mov	dpl,a
                           1166 ;	Peephole 112.b	changed ljmp to sjmp
                           1167 ;	Peephole 251.b	replaced sjmp to ret with ret
                           1168 ;	Peephole 253.a	replaced lcall/ret with ljmp
   0217 02s01r13           1169 	ljmp	_lcdgotoaddr
   021A                    1170 00106$:
                           1171 ;	lcd.c:114: else if(row==4 && column < 17)
                           1172 ;	genAssign
   021A 90s00r09           1173 	mov	dptr,#_lcdgotoxy_row_1_1
   021D E0                 1174 	movx	a,@dptr
   021E FA                 1175 	mov	r2,a
                           1176 ;	genCmpEq
                           1177 ;	gencjneshort
                           1178 ;	Peephole 112.b	changed ljmp to sjmp
                           1179 ;	Peephole 198.b	optimized misc jump sequence
   021F BA 04 13           1180 	cjne	r2,#0x04,00102$
                           1181 ;	Peephole 200.b	removed redundant sjmp
                           1182 ;	Peephole 300	removed redundant label 00139$
                           1183 ;	Peephole 300	removed redundant label 00140$
                           1184 ;	genAssign
   0222 90s00r08           1185 	mov	dptr,#_lcdgotoxy_PARM_2
   0225 E0                 1186 	movx	a,@dptr
   0226 FA                 1187 	mov	r2,a
                           1188 ;	genCmpLt
                           1189 ;	genCmp
   0227 BA 11 00           1190 	cjne	r2,#0x11,00141$
   022A                    1191 00141$:
                           1192 ;	genIfxJump
                           1193 ;	Peephole 108.a	removed ljmp by inverse jump logic
   022A 50 09              1194 	jnc	00102$
                           1195 ;	Peephole 300	removed redundant label 00142$
                           1196 ;	lcd.c:116: lcdgotoaddr(0xD0 + column - 1);
                           1197 ;	genPlus
                           1198 ;     genPlusIncr
   022C 74 CF              1199 	mov	a,#0xCF
                           1200 ;	Peephole 236.a	used r2 instead of ar2
   022E 2A                 1201 	add	a,r2
                           1202 ;	genCall
   022F FA                 1203 	mov	r2,a
                           1204 ;	Peephole 244.c	loading dpl from a instead of r2
   0230 F5 82              1205 	mov	dpl,a
                           1206 ;	Peephole 112.b	changed ljmp to sjmp
                           1207 ;	Peephole 251.b	replaced sjmp to ret with ret
                           1208 ;	Peephole 253.a	replaced lcall/ret with ljmp
   0232 02s01r13           1209 	ljmp	_lcdgotoaddr
   0235                    1210 00102$:
                           1211 ;	lcd.c:118: else{lcdputstr("Error");}
                           1212 ;	genCall
                           1213 ;	Peephole 182.a	used 16 bit load of DPTR
   0235 90s00r00           1214 	mov	dptr,#__str_0
   0238 75 F0 80           1215 	mov	b,#0x80
                           1216 ;	Peephole 253.b	replaced lcall/ret with ljmp
   023B 02s01r6F           1217 	ljmp	_lcdputstr
                           1218 ;
                           1219 ;------------------------------------------------------------
                           1220 ;Allocation info for local variables in function 'lcd_delay'
                           1221 ;------------------------------------------------------------
                           1222 ;ms                        Allocated with name '_lcd_delay_ms_1_1'
                           1223 ;i                         Allocated with name '_lcd_delay_i_1_1'
                           1224 ;j                         Allocated with name '_lcd_delay_j_1_1'
                           1225 ;------------------------------------------------------------
                           1226 ;	lcd.c:121: void lcd_delay(int ms)
                           1227 ;	-----------------------------------------
                           1228 ;	 function lcd_delay
                           1229 ;	-----------------------------------------
   023E                    1230 _lcd_delay:
                           1231 ;	genReceive
   023E AA 83              1232 	mov	r2,dph
   0240 E5 82              1233 	mov	a,dpl
   0242 90s00r0A           1234 	mov	dptr,#_lcd_delay_ms_1_1
   0245 F0                 1235 	movx	@dptr,a
   0246 A3                 1236 	inc	dptr
   0247 EA                 1237 	mov	a,r2
   0248 F0                 1238 	movx	@dptr,a
                           1239 ;	lcd.c:124: for (i=0;i<ms;i++)
                           1240 ;	genAssign
   0249 90s00r0A           1241 	mov	dptr,#_lcd_delay_ms_1_1
   024C E0                 1242 	movx	a,@dptr
   024D FA                 1243 	mov	r2,a
   024E A3                 1244 	inc	dptr
   024F E0                 1245 	movx	a,@dptr
   0250 FB                 1246 	mov	r3,a
                           1247 ;	genAssign
   0251 7C 00              1248 	mov	r4,#0x00
   0253 7D 00              1249 	mov	r5,#0x00
   0255                    1250 00104$:
                           1251 ;	genCmpLt
                           1252 ;	genCmp
   0255 C3                 1253 	clr	c
   0256 EC                 1254 	mov	a,r4
   0257 9A                 1255 	subb	a,r2
   0258 ED                 1256 	mov	a,r5
   0259 64 80              1257 	xrl	a,#0x80
   025B 8B F0              1258 	mov	b,r3
   025D 63 F0 80           1259 	xrl	b,#0x80
   0260 95 F0              1260 	subb	a,b
                           1261 ;	genIfxJump
                           1262 ;	Peephole 108.a	removed ljmp by inverse jump logic
   0262 50 14              1263 	jnc	00108$
                           1264 ;	Peephole 300	removed redundant label 00116$
                           1265 ;	lcd.c:126: for(j=0;j<100;j++)
                           1266 ;	genAssign
   0264 7E 64              1267 	mov	r6,#0x64
   0266 7F 00              1268 	mov	r7,#0x00
   0268                    1269 00103$:
                           1270 ;	genMinus
                           1271 ;	genMinusDec
   0268 1E                 1272 	dec	r6
   0269 BE FF 01           1273 	cjne	r6,#0xff,00117$
   026C 1F                 1274 	dec	r7
   026D                    1275 00117$:
                           1276 ;	genIfx
   026D EE                 1277 	mov	a,r6
   026E 4F                 1278 	orl	a,r7
                           1279 ;	genIfxJump
                           1280 ;	Peephole 108.b	removed ljmp by inverse jump logic
   026F 70 F7              1281 	jnz	00103$
                           1282 ;	Peephole 300	removed redundant label 00118$
                           1283 ;	lcd.c:124: for (i=0;i<ms;i++)
                           1284 ;	genPlus
                           1285 ;     genPlusIncr
                           1286 ;	tail increment optimized (range 7)
   0271 0C                 1287 	inc	r4
   0272 BC 00 E0           1288 	cjne	r4,#0x00,00104$
   0275 0D                 1289 	inc	r5
                           1290 ;	Peephole 112.b	changed ljmp to sjmp
   0276 80 DD              1291 	sjmp	00104$
   0278                    1292 00108$:
   0278 22                 1293 	ret
                           1294 ;------------------------------------------------------------
                           1295 ;Allocation info for local variables in function 'lcd_display'
                           1296 ;------------------------------------------------------------
                           1297 ;a                         Allocated with name '_lcd_display_PARM_2'
                           1298 ;rd                        Allocated with name '_lcd_display_rd_1_1'
                           1299 ;d                         Allocated with name '_lcd_display_d_1_1'
                           1300 ;row                       Allocated with name '_lcd_display_row_1_1'
                           1301 ;flag                      Allocated with name '_lcd_display_flag_1_1'
                           1302 ;------------------------------------------------------------
                           1303 ;	lcd.c:132: void lcd_display(char rd, char *a)
                           1304 ;	-----------------------------------------
                           1305 ;	 function lcd_display
                           1306 ;	-----------------------------------------
   0279                    1307 _lcd_display:
                           1308 ;	genReceive
   0279 E5 82              1309 	mov	a,dpl
   027B 90s00r0F           1310 	mov	dptr,#_lcd_display_rd_1_1
   027E F0                 1311 	movx	@dptr,a
                           1312 ;	lcd.c:137: printf_tiny("\n\n\r Enter Row number between 0 to 3: ");
                           1313 ;	genIpush
   027F 74r06              1314 	mov	a,#__str_1
   0281 C0 E0              1315 	push	acc
   0283 74s00              1316 	mov	a,#(__str_1 >> 8)
   0285 C0 E0              1317 	push	acc
                           1318 ;	genCall
   0287 12s00r00           1319 	lcall	_printf_tiny
   028A 15 81              1320 	dec	sp
   028C 15 81              1321 	dec	sp
                           1322 ;	lcd.c:138: do{
   028E                    1323 00104$:
                           1324 ;	lcd.c:139: flag=0;
                           1325 ;	genAssign
   028E 90s00r15           1326 	mov	dptr,#_lcd_display_flag_1_1
   0291 E4                 1327 	clr	a
   0292 F0                 1328 	movx	@dptr,a
   0293 A3                 1329 	inc	dptr
   0294 F0                 1330 	movx	@dptr,a
                           1331 ;	lcd.c:140: gets(d);
                           1332 ;	genCall
                           1333 ;	Peephole 182.a	used 16 bit load of DPTR
   0295 90s00r10           1334 	mov	dptr,#_lcd_display_d_1_1
   0298 75 F0 00           1335 	mov	b,#0x00
   029B 12s00r00           1336 	lcall	_gets
                           1337 ;	lcd.c:141: row=atoi(d);
                           1338 ;	genCall
                           1339 ;	Peephole 182.a	used 16 bit load of DPTR
   029E 90s00r10           1340 	mov	dptr,#_lcd_display_d_1_1
   02A1 75 F0 00           1341 	mov	b,#0x00
   02A4 12s00r00           1342 	lcall	_atoi
   02A7 AA 82              1343 	mov	r2,dpl
   02A9 AB 83              1344 	mov	r3,dph
                           1345 ;	lcd.c:142: if(row<4)
                           1346 ;	genAssign
   02AB 8A 04              1347 	mov	ar4,r2
   02AD 8B 05              1348 	mov	ar5,r3
                           1349 ;	genCmpLt
                           1350 ;	genCmp
   02AF C3                 1351 	clr	c
   02B0 EC                 1352 	mov	a,r4
   02B1 94 04              1353 	subb	a,#0x04
   02B3 ED                 1354 	mov	a,r5
   02B4 94 00              1355 	subb	a,#0x00
                           1356 ;	genIfxJump
                           1357 ;	Peephole 108.a	removed ljmp by inverse jump logic
   02B6 50 0B              1358 	jnc	00102$
                           1359 ;	Peephole 300	removed redundant label 00112$
                           1360 ;	lcd.c:144: flag=1;
                           1361 ;	genAssign
   02B8 90s00r15           1362 	mov	dptr,#_lcd_display_flag_1_1
   02BB 74 01              1363 	mov	a,#0x01
   02BD F0                 1364 	movx	@dptr,a
   02BE E4                 1365 	clr	a
   02BF A3                 1366 	inc	dptr
   02C0 F0                 1367 	movx	@dptr,a
                           1368 ;	Peephole 112.b	changed ljmp to sjmp
   02C1 80 17              1369 	sjmp	00105$
   02C3                    1370 00102$:
                           1371 ;	lcd.c:149: printf_tiny("\n\n\r Enter valid row number betweem 0 and 3: ");
                           1372 ;	genIpush
   02C3 C0 02              1373 	push	ar2
   02C5 C0 03              1374 	push	ar3
   02C7 74r2C              1375 	mov	a,#__str_2
   02C9 C0 E0              1376 	push	acc
   02CB 74s00              1377 	mov	a,#(__str_2 >> 8)
   02CD C0 E0              1378 	push	acc
                           1379 ;	genCall
   02CF 12s00r00           1380 	lcall	_printf_tiny
   02D2 15 81              1381 	dec	sp
   02D4 15 81              1382 	dec	sp
   02D6 D0 03              1383 	pop	ar3
   02D8 D0 02              1384 	pop	ar2
   02DA                    1385 00105$:
                           1386 ;	lcd.c:151: }while(flag==0);
                           1387 ;	genAssign
   02DA 90s00r15           1388 	mov	dptr,#_lcd_display_flag_1_1
   02DD E0                 1389 	movx	a,@dptr
   02DE FC                 1390 	mov	r4,a
   02DF A3                 1391 	inc	dptr
   02E0 E0                 1392 	movx	a,@dptr
                           1393 ;	genIfx
   02E1 FD                 1394 	mov	r5,a
                           1395 ;	Peephole 135	removed redundant mov
   02E2 4C                 1396 	orl	a,r4
                           1397 ;	genIfxJump
                           1398 ;	Peephole 108.c	removed ljmp by inverse jump logic
   02E3 60 A9              1399 	jz	00104$
                           1400 ;	Peephole 300	removed redundant label 00113$
                           1401 ;	lcd.c:153: lcdgotoxy(row+1,1);
                           1402 ;	genAssign
                           1403 ;	genCast
                           1404 ;	genPlus
                           1405 ;     genPlusIncr
   02E5 0A                 1406 	inc	r2
                           1407 ;	genAssign
   02E6 90s00r08           1408 	mov	dptr,#_lcdgotoxy_PARM_2
   02E9 74 01              1409 	mov	a,#0x01
   02EB F0                 1410 	movx	@dptr,a
                           1411 ;	genCall
   02EC 8A 82              1412 	mov	dpl,r2
   02EE 12s01rC3           1413 	lcall	_lcdgotoxy
                           1414 ;	lcd.c:154: lcdputstr(a);
                           1415 ;	genAssign
   02F1 90s00r0C           1416 	mov	dptr,#_lcd_display_PARM_2
   02F4 E0                 1417 	movx	a,@dptr
   02F5 FA                 1418 	mov	r2,a
   02F6 A3                 1419 	inc	dptr
   02F7 E0                 1420 	movx	a,@dptr
   02F8 FB                 1421 	mov	r3,a
   02F9 A3                 1422 	inc	dptr
   02FA E0                 1423 	movx	a,@dptr
   02FB FC                 1424 	mov	r4,a
                           1425 ;	genCall
   02FC 8A 82              1426 	mov	dpl,r2
   02FE 8B 83              1427 	mov	dph,r3
   0300 8C F0              1428 	mov	b,r4
   0302 12s01r6F           1429 	lcall	_lcdputstr
                           1430 ;	lcd.c:155: lcdputch(':');
                           1431 ;	genCall
   0305 75 82 3A           1432 	mov	dpl,#0x3A
   0308 12s00rA7           1433 	lcall	_lcdputch
                           1434 ;	lcd.c:156: lcdputch(rd);
                           1435 ;	genAssign
   030B 90s00r0F           1436 	mov	dptr,#_lcd_display_rd_1_1
   030E E0                 1437 	movx	a,@dptr
                           1438 ;	genCall
   030F FA                 1439 	mov	r2,a
                           1440 ;	Peephole 244.c	loading dpl from a instead of r2
   0310 F5 82              1441 	mov	dpl,a
                           1442 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0312 02s00rA7           1443 	ljmp	_lcdputch
                           1444 ;
                           1445 	.area CSEG    (CODE)
                           1446 	.area CONST   (CODE)
   0000                    1447 __str_0:
   0000 45 72 72 6F 72     1448 	.ascii "Error"
   0005 00                 1449 	.db 0x00
   0006                    1450 __str_1:
   0006 0A                 1451 	.db 0x0A
   0007 0A                 1452 	.db 0x0A
   0008 0D                 1453 	.db 0x0D
   0009 20 45 6E 74 65 72  1454 	.ascii " Enter Row number between 0 to 3: "
        20 52 6F 77 20 6E
        75 6D 62 65 72 20
        62 65 74 77 65 65
        6E 20 30 20 74 6F
        20 33 3A 20
   002B 00                 1455 	.db 0x00
   002C                    1456 __str_2:
   002C 0A                 1457 	.db 0x0A
   002D 0A                 1458 	.db 0x0A
   002E 0D                 1459 	.db 0x0D
   002F 20 45 6E 74 65 72  1460 	.ascii " Enter valid row number betweem 0 and 3: "
        20 76 61 6C 69 64
        20 72 6F 77 20 6E
        75 6D 62 65 72 20
        62 65 74 77 65 65
        6D 20 30 20 61 6E
        64 20 33 3A 20
   0058 00                 1461 	.db 0x00
                           1462 	.area XINIT   (CODE)
   0000                    1463 __xinit__write:
   0000 00 A0              1464 	.byte #0x00,#0xA0
   0002                    1465 __xinit__read:
   0002 00 C0              1466 	.byte #0x00,#0xC0
